,program,DSL,generation,frontierEntryRank,isHandWritten,nl_0,nl_1,nl_2,nl_3,nl_4,nl_5
67e8384a.json,(lambda (to_min_grid (reflect (remove_black_b (move (reflect (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true)) false) 3 east true)) true) true)),rich,1,0,False,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,you have to copy and paste the original grid and rotate it 90 degree s clockwise until you complete the grid,,,
67e8384a.json,(lambda (to_min_grid (reflect (remove_black_b (move (reflect (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) true) 3 south true)) false) true)),rich,1,1,False,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,you have to copy and paste the original grid and rotate it 90 degree s clockwise until you complete the grid,,,
67e8384a.json,(lambda (to_min_grid (reflect (remove_black_b (move (reflect (reflect (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) false) true) 3 south true)) false) true)),rich,1,2,False,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,you have to copy and paste the original grid and rotate it 90 degree s clockwise until you complete the grid,,,
67e8384a.json,(lambda (to_min_grid (reflect (remove_black_b (move (reflect (reflect (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) true) false) 3 south true)) false) true)),rich,1,3,False,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,you have to copy and paste the original grid and rotate it 90 degree s clockwise until you complete the grid,,,
67e8384a.json,(lambda (#(lambda (to_min_grid (reflect (remove_black_b (move (reflect (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) true) 3 south true)) false) true)) $0)),rich,2,0,False,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,copy paste the pattern in each corner the pattern on the bottom s flip s parallel to the top,you have to copy and paste the original grid and rotate it 90 degree s clockwise until you complete the grid,,,
63613498.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $0) (nth_primary_color (wrap_block (remove_black_b (move (grid_to_block $0) 3 east true)) invisible true) 3) grey))),trimmed,generation,entry,False,copy the input grid find any shape s outside of the border which are exactly the same shape and orientation as the shape inside of the grey border turn that shape grey do not change the colored shape inside the grey border or any shape s outside of the grey border which do not have the same orientation and shape as the one inside the border,find the shape closest to a corner that isn t the top left corner color that shape the same color as the box in the top left,from the right column to left get the first pattern if there is no same color pattern then change it s color to grey otherwise pas s it and keep check on form right to left column,,,
63613498.json,(lambda (#(lambda (lambda (lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $2) $0 $1))))) $0 grey (nth_primary_color (#(lambda (wrap_block $0 invisible true)) (#(lambda (remove_black_b (move (grid_to_block $0) 3 east true))) $0)) 3))),trimmed,generation,entry,False,copy the input grid find any shape s outside of the border which are exactly the same shape and orientation as the shape inside of the grey border turn that shape grey do not change the colored shape inside the grey border or any shape s outside of the grey border which do not have the same orientation and shape as the one inside the border,find the shape closest to a corner that isn t the top left corner color that shape the same color as the box in the top left,from the right column to left get the first pattern if there is no same color pattern then change it s color to grey otherwise pas s it and keep check on form right to left column,,,
63613498.json,(lambda (#(lambda (lambda (lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $2) $0 $1))))) $0 grey (nth_primary_color (#(lambda (wrap_block $0 invisible true)) (remove_black_b (#(lambda (remove_black_b (move (grid_to_block $0) 3 east true))) $0))) 3))),trimmed,generation,entry,False,copy the input grid find any shape s outside of the border which are exactly the same shape and orientation as the shape inside of the grey border turn that shape grey do not change the colored shape inside the grey border or any shape s outside of the grey border which do not have the same orientation and shape as the one inside the border,find the shape closest to a corner that isn t the top left corner color that shape the same color as the box in the top left,from the right column to left get the first pattern if there is no same color pattern then change it s color to grey otherwise pas s it and keep check on form right to left column,,,
63613498.json,(lambda (#(lambda (lambda (lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $2) $0 $1))))) $0 grey (nth_primary_color (#(lambda (wrap_block $0 invisible true)) (map_block_tiles (#(lambda (remove_black_b (move (grid_to_block $0) 3 east true))) $0) (lambda $0))) 3))),trimmed,generation,entry,False,copy the input grid find any shape s outside of the border which are exactly the same shape and orientation as the shape inside of the grey border turn that shape grey do not change the colored shape inside the grey border or any shape s outside of the grey border which do not have the same orientation and shape as the one inside the border,find the shape closest to a corner that isn t the top left corner color that shape the same color as the box in the top left,from the right column to left get the first pattern if there is no same color pattern then change it s color to grey otherwise pas s it and keep check on form right to left column,,,
63613498.json,(lambda (#(lambda (lambda (lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $2) $0 $1))))) $0 grey (nth_primary_color (map_block_tiles (#(lambda (wrap_block $0 invisible true)) (#(lambda (remove_black_b (move (grid_to_block $0) 3 east true))) $0)) (lambda $0)) 3))),trimmed,generation,entry,False,copy the input grid find any shape s outside of the border which are exactly the same shape and orientation as the shape inside of the grey border turn that shape grey do not change the colored shape inside the grey border or any shape s outside of the grey border which do not have the same orientation and shape as the one inside the border,find the shape closest to a corner that isn t the top left corner color that shape the same color as the box in the top left,from the right column to left get the first pattern if there is no same color pattern then change it s color to grey otherwise pas s it and keep check on form right to left column,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (grid_to_block $0) false) false)),rich,0,0,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (grid_to_block $0) false) true)),rich,0,1,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) false) false)),rich,0,2,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) false) true)),rich,0,3,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean true)) false)),rich,0,4,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean true)) true)),rich,0,5,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (grid_to_block $0) false) (negate_boolean false))),rich,0,6,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (grid_to_block $0) false) (negate_boolean true))),rich,0,7,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean true)) false)),rich,0,8,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean true)) true)),rich,0,9,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) false) true)),rich,1,4,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) true)),rich,1,5,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) false) false)),rich,1,6,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) false)),rich,1,7,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (remove_black_b (grid_to_block $0)) false) true)),rich,1,8,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) false)) true)),rich,1,9,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) false)),rich,2,0,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) true)),rich,2,2,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) true)),rich,2,5,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) false)),rich,3,4,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (filter_block_tiles (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) (lambda true)) false)),rich,3,8,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)) false) false)),rich,3,9,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (box_block (reflect (grid_to_block $0) false)) false)),rich,generation,entry,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_min_grid (reflect (box_block (grid_to_block $0)) false) false)),rich,generation,entry,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) false) (negate_boolean false))),rich,generation,entry,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) false) (negate_boolean true))),trimmed,0,9,False,create a left right mirror image of the input,create a right to left mirror image,,,,
67a3c6ac.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (reflect $0 false))) (grid_to_block $0))),trimmed,generation,entry,False,create a left right mirror image of the input,create a right to left mirror image,,,,
8efcae92.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_color $0 blue))) false) false)),rich,1,0,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles (remove_color $0 blue))) false) false)),rich,2,0,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles (remove_color $0 blue))) false) true)),rich,2,2,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_color $0 blue))) false) true)),rich,2,3,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (reflect (remove_color $0 blue) false))) false) true)),rich,2,4,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_color $0 blue))) false) grey) false)),rich,2,5,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_color $0 blue))) false) grey) true)),rich,2,6,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_color $0 blue))) false) yellow) false)),rich,2,7,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_color $0 blue))) false) yellow) true)),rich,2,8,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $1) 0)))) false) true)),rich,2,9,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color $0 blue))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_black_b (remove_color $0 blue)))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_black_b $0) blue))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (box_block $0) blue))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (reflect (remove_color $0 blue) false))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (reflect $0 false) blue))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color $0 blue) blue))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color $0 blue) yellow))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color $0 yellow) blue))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color $0 blue) pink))) $0)),rich,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles (remove_color $0 blue))))),trimmed,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (negate_boolean true) (lambda (get_num_tiles (remove_color $0 blue))))),trimmed,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) (lambda (get_num_tiles (remove_color $0 blue))))),trimmed,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (touches_any_boundary (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0)) (lambda (get_num_tiles (remove_color $0 blue))))),trimmed,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (is_tile (#(lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) $0)) (lambda (get_num_tiles (remove_color $0 blue))))),trimmed,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
8efcae92.json,(lambda (#(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles (remove_color $0 blue))))) $0)),trimmed,generation,entry,False,make the grid the same size as the shape and the two color s are just like in the shape,replicate the pattern of the chosen shape,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) blue)))) false)),rich,3,0,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) grey)))) false)),rich,4,1,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles $0)) false) blue)))) false)),rich,4,2,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles $0)) false) grey)))) false)),rich,4,3,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1))) false) blue)))) false)),rich,4,4,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1))) false) grey)))) false)),rich,4,5,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles (remove_color $0 blue))) false) blue)))) false)),rich,4,6,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles (remove_color $0 blue))) false) grey)))) false)),rich,4,7,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles (remove_color $0 grey))) false) blue)))) false)),rich,4,8,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false) false) (get_tile_color (get_block_center (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles (remove_color $0 grey))) false) grey)))) false)),rich,4,9,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false)),trimmed,4,0,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) 0)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false)),trimmed,4,1,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) 0)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false)),trimmed,4,2,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) true) 0)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false)),trimmed,4,3,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) true) 0)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false)),trimmed,4,4,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false)),trimmed,5,3,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
aabf363d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false)),trimmed,5,4,False,change the pattern to match the one colored square at the bottom and fill in the one square at the bottom to black,make the box at the bottom left corner black and the colored object at the center the color of the box at the bottom left corner,,,,
a740d043.json,(lambda (to_min_grid (remove_color (grid_to_block $0) blue) false)),rich,0,0,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) false false)),rich,0,1,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) false true)),rich,0,2,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 true false) false false)),rich,0,3,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 true false) false true)),rich,0,4,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (remove_color (grid_to_block $0) blue) (negate_boolean true))),rich,0,5,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (remove_black_b (remove_color (grid_to_block $0) blue)) false)),rich,0,6,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (remove_color (box_block (grid_to_block $0)) blue) false)),rich,0,7,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (remove_color (grid_to_block $0) blue) (is_tile (grid_to_block $0)))),rich,0,8,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (remove_color (remove_black_b (grid_to_block $0)) blue) false)),rich,0,9,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (merge_blocks (find_blocks_by_inferred_b $0 true false) true) false)),rich,1,5,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (merge_blocks (find_blocks_by_inferred_b $0 false false) true) false)),rich,1,6,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (merge_blocks (find_blocks_by_inferred_b $0 true false) false) false)),rich,1,7,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (merge_blocks (find_blocks_by_inferred_b $0 false false) false) false)),rich,1,8,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (to_min_grid (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue) false)),rich,3,0,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (negate_boolean false) false) false false)),rich,generation,entry,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) false (negate_boolean false))),rich,generation,entry,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (negate_boolean true) false) false false)),rich,generation,entry,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (negate_boolean true)) false false)),rich,generation,entry,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) false (negate_boolean true))),rich,generation,entry,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) false true)),trimmed,generation,entry,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
a740d043.json,(lambda (blocks_to_min_grid (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) false false)),trimmed,generation,entry,False,follow the insturction,make the pattern and if there is any more on the side s or any blue fill in with black,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) 3 north true) true)),rich,1,0,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) 3 north true) false)),rich,1,1,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (remove_black_b (grid_to_block $0)) true) 3 north true) true)),rich,1,2,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true)) true)),rich,1,3,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (remove_black_b (grid_to_block $0)) true) 3 north true) false)),rich,1,4,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true)) false)),rich,1,5,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (reflect (reflect (grid_to_block $0) true) true) true) 3 north true) false)),rich,1,6,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (reflect (reflect (grid_to_block $0) false) false) true) 3 north true) false)),rich,1,7,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (reflect (reflect (grid_to_block $0) false) true) false) 3 north true) false)),rich,1,8,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (move (reflect (reflect (reflect (grid_to_block $0) true) false) false) 3 north true) false)),rich,1,9,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true north false)),rich,2,0,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true north true)),rich,2,1,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (negate_boolean false) north false)),rich,2,2,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (negate_boolean false) north true)),rich,2,3,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true north (negate_boolean false))),rich,2,4,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true north (negate_boolean true))),rich,2,5,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) north false)),rich,2,6,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (touches_any_boundary (grid_to_block $0)) north false)),rich,2,7,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true north (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,2,8,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) north true)),rich,2,9,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true north (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,3,8,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north true $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (negate_boolean false) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (touches_any_boundary (grid_to_block $0)) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (is_rectangle (grid_to_block $0) false) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (touches_boundary (grid_to_block $0) east) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (touches_boundary (grid_to_block $0) south) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (is_rectangle (grid_to_block $0) true) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (touches_boundary (grid_to_block $0) north) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (touches_boundary (grid_to_block $0) north_east) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (touches_boundary (grid_to_block $0) west) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (has_min_tiles (grid_to_block $0) 1) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (has_min_tiles (grid_to_block $0) 0) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) north (has_min_tiles (grid_to_block $0) 2) $0)),rich,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 north true)) true)),trimmed,1,0,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 north true)) true)),trimmed,2,0,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true))) true)),trimmed,2,3,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 north true)) false)),trimmed,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true))) false)),trimmed,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 north true)) false)),trimmed,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (lambda (lambda (to_min_grid (box_block (move (reflect (grid_to_block $1) $0) 3 $2 true)) false)))) north $0 true)),trimmed,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
4c4377d9.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true)))),trimmed,generation,entry,False,copy the pattern as you see it on the bottom half of the grid into 3 by 4 once done flip the pattern up to the top half of the 3 by 4 grid,you should use the input grid block s and also mirror them to complete the output grid,,,,
5521c0d9.json,(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 true false) (lambda (move $0 (get_height $0) north false))) false true)),,,,True,count how many row s each object contain s and move it up that same amount of row s,decide how many row s the object ha s and move it up that same amount of row s,,,,
c59eb873.json,(lambda (to_min_grid (grow (grid_to_block $0) 1) false)),rich,0,0,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (grid_to_block $0) 1) true)),rich,0,1,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (grid_to_block $0) 1) (negate_boolean false))),rich,0,2,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (grid_to_block $0) 1) (negate_boolean true))),rich,0,3,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (box_block (grow (grid_to_block $0) 1)) false)),rich,0,4,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (box_block (grow (grid_to_block $0) 1)) true)),rich,0,5,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 1) false)),rich,0,6,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 1) true)),rich,0,7,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (grid_to_block $0) 1) (is_tile (grid_to_block $0)))),rich,0,8,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (grid_to_block $0) 1) (touches_any_boundary (grid_to_block $0)))),rich,0,9,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 1) false)),rich,1,2,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (remove_black_b (grow (grid_to_block $0) 1)) false)),rich,1,3,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (filter_block_tiles (grow (grid_to_block $0) 1) (lambda true)) true)),rich,1,4,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (filter_block_tiles (grid_to_block $0) (lambda true)) 1) true)),rich,1,5,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (filter_block_tiles (grow (grid_to_block $0) 1) (lambda true)) false)),rich,1,7,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (filter_block_tiles (grid_to_block $0) (lambda true)) 1) false)),rich,1,8,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) false)),rich,2,0,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (filter_block_tiles (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) (lambda true)) false)),rich,3,3,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)) 1) false)),rich,3,4,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 false false) false) 1) false)),rich,3,5,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 false false) true) 1) false)),rich,3,6,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 false true) false) 1) false)),rich,3,7,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 true false) false) 1) false)),rich,3,8,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (#(lambda (to_min_grid (grow $0 1) false)) (grid_to_block $0))),trimmed,generation,entry,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (#(lambda (to_min_grid $0 true)) (grow (grid_to_block $0) 1))),trimmed,generation,entry,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (grow (grid_to_block $0))) $0 1))),trimmed,generation,entry,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (#(lambda (grow (grid_to_block $0))) $0 1) (negate_boolean false))),trimmed,generation,entry,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (#(lambda (grow (grid_to_block $0))) $0 1) (negate_boolean true))),trimmed,generation,entry,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
c59eb873.json,(lambda (to_min_grid (box_block (#(lambda (grow (grid_to_block $0))) $0 1)) false)),trimmed,generation,entry,False,apply the grid size and fill the color s,divide each block into a 2 by 2 square in the same color as the original block so each block from the original input grid will become a 2 by 2 block of 4 square s of the same color as the original block,make the same design but now the black blue and red block s are made from four block s making one big square on each corner,,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (remove_black_b (grid_to_block $0))) east 1) false)),rich,0,0,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (singleton_block (find_same_color_blocks $0 true true)) east 1) false)),rich,0,1,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (singleton_block (find_same_color_blocks $0 true true)) east 1) true)),rich,0,2,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_same_color_blocks $0 true true) false) east 1) false)),rich,0,3,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_same_color_blocks $0 true true) true) east 1) false)),rich,0,4,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) east 1) false)),rich,0,5,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) east 1) true)),rich,0,6,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 true)))) east 1) false)),rich,0,7,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true)) east 1) false)),rich,0,8,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (map_block_tiles (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) (lambda $0)) east 1) false)),rich,0,9,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 east true)) true)),rich,1,0,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 east true)) false)),rich,1,1,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_same_color_blocks $0 true true) true) east 1) true)),rich,1,3,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_same_color_blocks $0 true true) false) east 1) true)),rich,1,5,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 west true)) true)),rich,1,8,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 west true)) false)),rich,1,9,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) east 1) false)),rich,3,1,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) east 1) true)),rich,3,4,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_blocks_by_inferred_b $0 true true) false) east 1) false)),rich,3,6,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_blocks_by_inferred_b $0 true true) false) east 1) true)),rich,3,7,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_blocks_by_inferred_b $0 true true) true) east 1) false)),rich,3,8,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (merge_blocks (find_blocks_by_inferred_b $0 true true) true) east 1) true)),rich,3,9,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (remove_black_b (grid_to_block $0))) east 1) true)),rich,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (remove_black_b (grid_to_block $0))) west 1) false)),rich,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (remove_black_b (grid_to_block $0))) west 1) true)),rich,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (remove_black_b (remove_black_b (grid_to_block $0)))) east 1) true)),rich,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (box_block (remove_black_b (grid_to_block $0)))) east 1) true)),rich,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (remove_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0))) east 1) true)),rich,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (duplicate (box_block (remove_black_b (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true))) east 1) true)),rich,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (move (grid_to_block $0) 3 east true)) (lambda (is_exterior $0 true))) false)),trimmed,1,8,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (move (grid_to_block $0) 3 east true)) (lambda (is_exterior $0 true))) true)),trimmed,1,9,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (move (grid_to_block $0) 3 east true)))),trimmed,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (move (grid_to_block $0) 3 west true)))),trimmed,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (remove_black_b (move (grid_to_block $0) 3 east true))) $0))),trimmed,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
28bf18c6.json,(lambda (to_min_grid (#(lambda (remove_black_b (move (grid_to_block $0) 3 east true))) $0) false)),trimmed,generation,entry,False,copy the figure two time s in that grid size,copy the figure two time s in that grid size,copy the same pattern into two time s,zoom into the shape to make the grid size correct and then copy and paste the shape beside the original shape,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 green lxor))))),rich,0,0,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 green lxor))))),rich,0,1,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $0 $1 green lxor))))),rich,0,2,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $1 $0 green lxor))))),rich,0,3,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 green lxor))))),rich,0,4,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 green lxor))))),rich,0,5,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 (color_logical $1 $1 green lor) green lxor))))),rich,0,6,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 (color_logical $0 $0 green lor) green lxor))))),rich,0,7,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $0 $1 green lxor))))),rich,0,8,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $1 $0 green lxor))))),rich,0,9,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 true))),rich,1,0,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (negate_boolean false)))),rich,1,1,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (touches_any_boundary (grid_to_block $0))))),rich,1,2,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (is_rectangle (grid_to_block $0) true)))),rich,1,3,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor (nth_primary_color (grid_to_block $0) 4) (split_grid $0 true))),rich,1,4,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (is_rectangle (grid_to_block $0) false)))),rich,1,5,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (has_min_tiles (grid_to_block $0) 1)))),rich,1,6,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (touches_boundary (grid_to_block $0) south)))),rich,1,7,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (touches_boundary (grid_to_block $0) east)))),rich,1,8,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (has_color (grid_to_block $0) blue)))),rich,1,9,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) $1 green (split_grid $0 true)))) lxor $0)),rich,2,0,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 4) (split_grid $0 true))),rich,3,3,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0))))),rich,3,5,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (touches_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0) east)))),rich,3,7,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor (nth_primary_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) 4) (split_grid $0 true))),rich,3,8,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true green)) $0 lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (negate_boolean false) green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (touches_any_boundary (grid_to_block $0)) green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_rectangle (grid_to_block $0) false) green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true (nth_primary_color (grid_to_block $0) 4) lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (touches_boundary (grid_to_block $0) east) green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (touches_boundary (grid_to_block $0) south) green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_rectangle (grid_to_block $0) true) green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
99b1bc43.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (has_color (grid_to_block $0) blue) green lxor)),rich,generation,entry,False,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,compare the square s in the top and bottom 4 by 4 square if they match both black or both color make the output square black if they do not match make the output square green,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 false true) false) black blue) false)),rich,2,0,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 false true) false) black blue) true)),rich,2,1,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 false true) true) black blue) false)),rich,2,2,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) false) black blue) false)),rich,2,3,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 false true) true) black blue) true)),rich,2,4,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) false) black blue) true)),rich,2,5,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) true) black blue) false)),rich,2,6,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) true) black blue) true)),rich,2,7,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_blocks_by_inferred_b $0 false true) false) black blue) false)),rich,2,8,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_blocks_by_inferred_b $0 true true) true) black blue) false)),rich,2,9,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) false $0 blue)),rich,3,0,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) true $0 blue)),rich,3,1,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (negate_boolean false) $0 blue)),rich,3,2,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (negate_boolean true) $0 blue)),rich,3,3,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) false $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 2))),rich,3,4,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) $0 blue)),rich,3,5,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) $0 blue)),rich,3,6,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false) $0 blue)),rich,3,7,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) true $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 2))),rich,3,8,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_interior (get_block_center (grid_to_block $0)) false) $0 blue)),rich,3,9,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) blue) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,5,0,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,6,1,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) blue) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true)),trimmed,6,2,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) blue) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (grid_to_block $1) 3 south true)))))) true)),trimmed,6,3,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true)),trimmed,6,4,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks (map_blocks (find_blocks_by_inferred_b $0 true (has_color (grid_to_block $0) blue)) (lambda (remove_color (box_block $0) teal))) true))),trimmed,generation,entry,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (map_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (#(lambda (remove_color (box_block $0) teal)) $0))))),trimmed,generation,entry,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (map_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (lambda (#(lambda (remove_color (box_block $0) teal)) $0))))),trimmed,generation,entry,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (map_blocks (map_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (#(lambda (remove_color (box_block $0) teal)) $0))) (lambda (#(lambda (remove_color (box_block $0) teal)) $0))))),trimmed,generation,entry,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (filter_blocks (map_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (#(lambda (remove_color (box_block $0) teal)) $0))) (lambda (is_symmetrical $0 false))))),trimmed,generation,entry,False,blue block add,fill in the missing corner s with a blue square,,,,
3aa6fb7a.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (filter_blocks (map_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (#(lambda (remove_color (box_block $0) teal)) $0))) (lambda (negate_boolean (touches_any_boundary $0)))))),trimmed,generation,entry,False,blue block add,fill in the missing corner s with a blue square,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true false)),rich,0,0,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) (negate_boolean false) false)),rich,0,1,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true (negate_boolean true))),rich,0,2,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) (touches_any_boundary (grid_to_block $0)) false)),rich,0,3,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true (is_tile (grid_to_block $0)))),rich,0,4,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (remove_black_b (extend_towards_until_edge $0 east)))) true false)),rich,0,5,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (to_original_grid_overlay (merge_blocks (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) false) true)),rich,0,6,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda (extend_towards_until_edge $0 east))) true false)),rich,0,7,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge (block_to_tile (tile_to_block $0)) east))) true false)),rich,0,8,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge (get_block_center (tile_to_block $0)) east))) true false)),rich,0,9,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) false east $0)),rich,1,0,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (negate_boolean true) east $0)),rich,1,1,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_tile (grid_to_block $0)) east $0)),rich,1,2,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_symmetrical (grid_to_block $0) true) east $0)),rich,1,3,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_symmetrical (grid_to_block $0) false) east $0)),rich,1,4,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_tile (remove_black_b (grid_to_block $0))) east $0)),rich,1,5,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (has_color (grid_to_block $0) invisible) east $0)),rich,1,6,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (has_color (grid_to_block $0) orange) east $0)),rich,1,7,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_tile (reflect (grid_to_block $0) true)) east $0)),rich,1,8,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_rectangle (remove_black_b (grid_to_block $0)) true) east $0)),rich,1,9,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) east $0)),rich,2,2,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_rectangle (#(lambda (remove_black_b (grid_to_block $0))) $0) true) east $0)),rich,2,5,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false) east $0)),rich,3,3,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) true) east $0)),rich,3,4,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_rectangle (#(lambda (remove_black_b (grid_to_block $0))) $0) false) east $0)),rich,3,7,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) (touches_any_boundary (replace_color (grid_to_block $0) orange grey)) false)),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true (is_tile (replace_color (grid_to_block $0) orange grey)))),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true (is_tile (wrap_block (grid_to_block $0) invisible false)))),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true (is_tile (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0))))),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) true $0 east)),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (negate_boolean false) $0 east)),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (touches_any_boundary (grid_to_block $0)) $0 east)),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
22eb0ac0.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (touches_any_boundary (replace_color (grid_to_block $0) orange grey)) $0 east)),rich,generation,entry,False,copy the input if two block s acros s from each other are the same color fill in the rest of that horizontal row with that color don t do anything with the block s acros s from each other that are different color s,one black row at the top then add a row of colored block s any color all the way through and then fill in one or two of the colored row s with the first block in that row color,,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,0,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true false) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,1,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,2,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 false false) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,3,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,4,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (get_num_tiles $0)) false) (is_interior $0 true))) $0)),rich,3,5,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (get_num_tiles (remove_color $0 grey))) false) false)) $0)),rich,3,6,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true false) (lambda (get_num_tiles (remove_color $0 grey))) false) false)) $0)),rich,3,7,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles (remove_color $0 grey))) false) false)) $0)),rich,3,8,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
1f642eb9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (move_until_overlaps_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles (remove_color $0 grey))) false) false)) $0)),rich,3,9,False,join the color,make a copy of each of the colored small square s and put those copy into the blue shape into the same line near to the same block,make one similiarly colored squar inside the light blue figure for each colored square around the exterior place the colored square s along the most outer edge of the blue figure closest to their corresponding block,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles $0)) false) false))) true true)),rich,1,0,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (get_num_tiles $0)) false) false))) true true)),rich,2,0,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true false) (lambda (get_num_tiles $0)) false) false))) true true)),rich,2,1,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles $0)) false) false))) true true)),rich,2,3,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true false) (lambda (get_num_tiles (remove_color $0 grey))) false) false))) true true)),rich,2,4,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles (remove_color $0 grey))) false) false))) true true)),rich,2,5,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true false) (lambda (get_num_tiles (remove_color $0 yellow))) false) false))) true true)),rich,2,6,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles (remove_color $0 yellow))) false) false))) true true)),rich,2,7,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles (remove_color $0 grey))) false) false))) true true)),rich,2,8,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles (remove_color $0 yellow))) false) false))) true true)),rich,2,9,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,0,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 false false) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,1,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 false true) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,2,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true false) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,3,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,4,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 false false) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,5,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 false true) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,6,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,7,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true true) (lambda (get_num_tiles $0)) false) false)) $0)),rich,3,8,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
d43fd935.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (get_width $0)) false) false)) $0)),rich,3,9,False,copy the input grid then connect the 2 by 2 green square to any and all other colored square s which you can reach with a straight line use the color of the square to which you are connecting the 2 by 2 green square fill in all of the black square s between that square and the 2 by 2 green square leave the rest of the grid including any colored square you can t reach with a straight line as they are,copy the input to the output look at each corner of the green box is there a colored square above or beside that corner then draw a line the same color as that square to connect it,fill the same color of any square that is vertical or horizontal to the corner of the green square,,,
0b148d64.json,(lambda (to_min_grid (remove_black_b (remove_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 1))) true)),rich,1,0,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 1)) true)),rich,1,1,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_black_b (remove_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 1))) false)),rich,1,2,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 1)) false)),rich,1,3,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (remove_black_b (remove_black_b (grid_to_block $0))) (nth_primary_color (grid_to_block $0) 1)) true)),rich,1,4,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (remove_black_b (remove_black_b (grid_to_block $0))) (nth_primary_color (grid_to_block $0) 1)) false)),rich,1,5,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (remove_black_b (grid_to_block $0)) (nth_primary_color (reflect (grid_to_block $0) true) 1)) true)),rich,1,6,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (reflect (reflect (remove_black_b (grid_to_block $0)) true) true) (nth_primary_color (grid_to_block $0) 1)) true)),rich,1,7,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (reflect (reflect (remove_black_b (grid_to_block $0)) true) true) (nth_primary_color (grid_to_block $0) 1)) false)),rich,1,8,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (reflect (reflect (remove_black_b (grid_to_block $0)) false) false) (nth_primary_color (grid_to_block $0) 1)) true)),rich,1,9,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) false)),rich,2,0,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) true)),rich,2,1,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (map_tiles (find_tiles_by_black_b $0) (lambda (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1))))),rich,2,2,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (filter_block_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) (lambda true)) false)),rich,2,3,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (map_tiles (find_tiles_by_black_b $0) (lambda (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1))))),rich,2,4,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_black_b (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0)) false)),rich,2,5,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (filter_block_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) (lambda true)) true)),rich,2,6,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (box_block (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0)) false)),rich,2,7,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_black_b (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0)) true)),rich,2,8,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) blue) false)),rich,2,9,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (to_min_grid (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) (negate_boolean false))),rich,3,9,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) false false) false false)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) true false) false false)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) false false) false true)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) false false) true false)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) false true) false false)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) false false) true true)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) false true) false true)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) false true) true false)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) true false) false true)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (blocks_to_min_grid (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 2) true false) true false)),rich,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1)))),trimmed,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0)))),trimmed,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
0b148d64.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (#(lambda (move (grid_to_block $0) 1 south false)) $0) 1)))),trimmed,generation,entry,False,copy the pattern that is a different color,make it the area that is a different color,make the output grid match the space of the colored area that is the odd color from the rest,,,
88a10436.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (center_block_on_tile (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles $0)) false) $0))) true true)),rich,2,0,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $1) grey) $0)) $0)),rich,3,0,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $1) (get_tile_color $0)) $0)) $0)),rich,3,1,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (first_of_sorted_object_list (find_blocks_by_inferred_b $1 false false) (lambda (get_num_tiles $0)) false) $0)) $0)),rich,3,2,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (first_of_sorted_object_list (find_blocks_by_inferred_b $1 false true) (lambda (get_num_tiles $0)) false) $0)) $0)),rich,3,3,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles $0)) false) $0)) $0)),rich,3,4,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true true) (lambda (get_num_tiles $0)) false) $0)) $0)),rich,3,5,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $1 false false) (lambda (get_num_tiles $0)) false) grey) $0)) $0)),rich,3,6,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles $0)) false) grey) $0)) $0)),rich,3,7,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles $0)) false) yellow) $0)) $0)),rich,3,8,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
88a10436.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles (remove_color $0 blue))) false) grey) $0)) $0)),rich,3,9,False,copy the input 3 by 3 multi colored shape ontop of the gray square this square comprise s the middle of the 3 by 3 copy,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the copied colorful shape is directly overlapping the gray square,copy the input then copy the colorful shape and paste it on top of the gray square making sure the center of the shape is directly above the square,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue true) false)),rich,0,0,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue true) true)),rich,0,1,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) blue true) false)),rich,0,2,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) blue true) true)),rich,0,3,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) blue true) false)),rich,0,4,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) blue true) true)),rich,0,5,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) false) false)) blue true) true)),rich,0,6,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) true) true)) blue true) false)),rich,0,7,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) true) true)) blue true) true)),rich,0,8,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) yellow) true) true)) blue true) true)),rich,0,9,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (remove_black_b (wrap_block (remove_black_b (grid_to_block $0)) blue true)) true)),rich,1,2,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (remove_black_b (grid_to_block $0))) blue true) true)),rich,1,3,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (remove_black_b (wrap_block (remove_black_b (grid_to_block $0)) blue true)) false)),rich,1,4,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (remove_black_b (grid_to_block $0))) blue true) false)),rich,1,5,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue true) true)),rich,1,6,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue true) true)),rich,1,7,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue true) false)),rich,1,8,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue true) false)),rich,1,9,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true) false)),rich,2,0,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true) true)),rich,2,1,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (remove_black_b (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) false)),rich,2,2,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) blue true) false)),rich,2,3,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (remove_black_b (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) true)),rich,2,4,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) blue true) true)),rich,2,5,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $1) blue true)) $0)),rich,3,0,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (tile_to_block $0) blue true)) $0)),rich,3,3,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) false) blue true)) $0)),rich,3,4,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) true) blue true)) $0)),rich,3,5,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $1) blue (is_exterior $0 false))) $0)),rich,3,6,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) blue true) false)),rich,3,7,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (filter_block_tiles (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $1) blue true) (lambda true))) $0)),rich,3,8,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $1) (lambda true)) blue true)) $0)),rich,3,9,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue (negate_boolean false)) false)),rich,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue true) (negate_boolean false))),rich,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (remove_color (grid_to_block $0) blue)) blue true) false)),rich,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (wrap_block (remove_black_b (grid_to_block $1)) blue true))) true false)),rich,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 2) true) false)),rich,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) blue true) false)),rich,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue true) (touches_any_boundary (remove_black_b (grid_to_block $0))))),rich,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_color (grid_to_block $0) black) blue true) false)),trimmed,0,6,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_color (grid_to_block $0) black) blue true) true)),trimmed,0,7,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue true) (negate_boolean true))),trimmed,0,9,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (#(lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) $0) false)),trimmed,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
4258a5f9.json,(lambda (to_original_grid_overlay (#(lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) $0) true)),trimmed,generation,entry,False,surround each grey box with blue,surround each of the grey boxe s with a 3 by 3 blue border,surround each of the grey boxe s with a blue border,,,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) true)),rich,1,0,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width $0)) false) true)),rich,1,1,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_height $0)) false) true)),rich,1,2,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles $0)) false) true)),rich,1,3,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) true)),rich,1,4,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) false)),rich,1,5,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_width $0)) false) true)),rich,1,6,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_width $0)) false) true)),rich,1,7,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width $0)) false) false)),rich,1,8,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_height $0)) false) false)),rich,1,9,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 false false))),rich,2,0,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 false true))),rich,2,1,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 true false))),rich,2,2,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 true true))),rich,2,3,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_inferred_b $0 false false))),rich,2,4,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_inferred_b $0 false true))),rich,2,5,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_inferred_b $0 true false))),rich,2,6,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_inferred_b $0 true true))),rich,2,7,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_black_b $0 false false))),rich,2,8,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_black_b $0 false true))),rich,2,9,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) (lambda (get_height $0)) false) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false true) (lambda (get_height $0)) false) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_width $0)) false) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) (lambda (get_height $0)) (negate_boolean true)) false)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) (lambda (get_height $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false true) (lambda (get_height $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_height $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_width $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_width $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height $0)) $0)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 false (lambda (get_width $0)) false true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 false (lambda (get_width $0)) true true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (negate_boolean true) (lambda (get_height $0)) false true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (negate_boolean true) (lambda (get_width $0)) false true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (negate_boolean true) (lambda (get_width $0)) true true)),rich,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) (negate_boolean true)) false)),trimmed,3,2,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) (is_tile (grid_to_block $0))) false)),trimmed,3,3,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) (is_tile (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false))) false)),trimmed,3,4,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles $0)) false) false)),trimmed,4,0,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles $0)) false) false)),trimmed,4,1,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) false)),trimmed,4,2,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_width $0)))),trimmed,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles $0)))),trimmed,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (negate_boolean true) (lambda (get_width $0)))),trimmed,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (is_tile (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true)) (lambda (get_width $0)))),trimmed,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
1f85a75f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (is_tile (reflect (grid_to_block $0) true)) (lambda (get_width $0)))),trimmed,generation,entry,False,copy only the biggest shape into the output grid,copy the significant pattern,copy the small dense part,copy the small dense part,you have to replicate just the serie s of like colored block s,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false) grey) false)),rich,2,0,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false) grey) true)),rich,2,1,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles (remove_color $0 teal))) false) grey) true)),rich,2,2,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles (remove_color $0 invisible))) false) grey) true)),rich,2,3,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles (remove_color $0 orange))) false) grey) true)),rich,2,4,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles (remove_color $0 green))) false) grey) true)),rich,2,5,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles (remove_color $0 maroon))) false) grey) true)),rich,2,6,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (reflect (reflect (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false) grey) false) false) true)),rich,2,7,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (filter_block_tiles (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false) grey) (lambda (is_exterior $0 false))) true)),rich,2,8,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) (is_symmetrical (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) false)) grey) true)),rich,2,9,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (remove_black_b (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false)) grey) true)),rich,3,2,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
48d8fb45.json,(lambda (to_min_grid (remove_color (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false) grey) grey) true)),rich,3,3,False,repeat the colored area that include s a grey square but do not include the gray square,repeat the colored area that include s a grey square but don t include the grey square,same pattern,same pattern,,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true) false)),rich,0,0,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true) true)),rich,0,1,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) false) false)),rich,0,2,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) false) true)),rich,0,3,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) false) true) false)),rich,0,4,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) false) true) true)),rich,0,5,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) true) false) false)),rich,0,6,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) true) false) true)),rich,0,7,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (remove_black_b (grid_to_block $0)) false) true) false)),rich,0,8,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (remove_black_b (grid_to_block $0)) true) false) false)),rich,0,9,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) true)),rich,1,8,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (remove_black_b (reflect (reflect (grid_to_block $0) false) true)) true)),rich,1,9,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 false)),rich,2,0,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 true)),rich,2,1,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (negate_boolean false))),rich,3,2,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (negate_boolean true))),rich,3,3,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (is_interior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) false))),rich,3,4,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,3,5,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,3,6,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (is_interior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) true))),rich,3,7,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (is_exterior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) false))),rich,3,8,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false))),rich,3,9,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) (negate_boolean false)) false) false)),rich,generation,entry,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) (negate_boolean false)) false)),rich,generation,entry,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) (negate_boolean true)) false)),trimmed,0,8,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) (negate_boolean true)) true)),trimmed,0,9,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (reflect $0 false))) (reflect (grid_to_block $0) true))) $0)),trimmed,generation,entry,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
3c9b0459.json,(lambda (#(lambda (to_min_grid $0 true)) (reflect (reflect (grid_to_block $0) false) true))),trimmed,generation,entry,False,change position for every grid,create the same pattern as the input just rotated 180 degree s done,reflect the grid,rotate the grid 180 degree s clockwi se that s it ju st fill in the grid with the original color s a s if the grid rotated twice to the right 180 degree s,turn color block,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) false)),rich,0,0,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) true)),rich,0,1,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) false)),rich,0,2,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) true)),rich,0,3,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (remove_black_b (grid_to_block $0)) 0)) false)),rich,0,4,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (reflect (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) false) false)),rich,0,5,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (reflect (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) true) false)),rich,0,6,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (duplicate (grid_to_block $0) east 1) 0)) false)),rich,0,7,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (move (grid_to_block $0) 1 south false) 0)) false)),rich,0,8,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (move (grid_to_block $0) 1 south false) (nth_primary_color (grid_to_block $0) 0)) false)),rich,0,9,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (grid_to_block $0)) $0)),rich,1,0,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (grid_to_block $1)) $0)),rich,1,1,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (grid_to_block $0) true)) $0)),rich,1,2,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (grid_to_block $1) true)) $0)),rich,1,3,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (grid_to_block $0) false)) $0)),rich,1,4,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (grid_to_block $1) false)) $0)),rich,1,5,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (filter_block_tiles (grid_to_block $0) (lambda true))) $0)),rich,1,6,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (filter_block_tiles (grid_to_block $1) (lambda true))) $0)),rich,1,7,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (box_block (grid_to_block $0))) $0)),rich,1,8,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (box_block (grid_to_block $1))) $0)),rich,1,9,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (merge_blocks (find_same_color_blocks $0 true true) false)) $0)),rich,3,6,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (merge_blocks (find_same_color_blocks $1 true true) false)) $0)),rich,3,7,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0))) $0)),rich,3,8,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (box_block (#(lambda (remove_black_b (grid_to_block $0))) $1))) $0)),rich,3,9,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (reflect (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) false) true)),rich,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grow (grid_to_block $0) 1) 0)) true)),rich,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (replace_color (grid_to_block $0) orange grey) 0)) true)),rich,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (replace_color (grid_to_block $0) orange grey) (nth_primary_color (grid_to_block $0) 0)) true)),rich,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (replace_color (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) orange grey) true)),rich,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (wrap_block (grid_to_block $0) invisible false) 0)) true)),rich,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) (nth_primary_color (grid_to_block $0) 0)) true)),rich,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) (negate_boolean false))),trimmed,0,4,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) (negate_boolean true))),trimmed,0,5,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) (negate_boolean false))),trimmed,0,6,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) (negate_boolean true))),trimmed,0,7,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_original_grid_overlay (fill_color (box_block (remove_black_b (grid_to_block $0))) (nth_primary_color (grid_to_block $0) 0)) false)),trimmed,1,8,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_original_grid_overlay (fill_color (box_block (remove_black_b (grid_to_block $0))) (nth_primary_color (grid_to_block $0) 0)) true)),trimmed,1,9,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (nth_primary_color (grid_to_block $0) 0) (grid_to_block $0))),trimmed,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (to_min_grid $0 true)) (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)))),trimmed,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0) (grid_to_block $0))),trimmed,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (#(lambda (to_min_grid $0 true)) (fill_color (grid_to_block $0) (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0)))),trimmed,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0)) false)),trimmed,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0)) false)),trimmed,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
5582e5ca.json,(lambda (to_min_grid (fill_color (grid_to_block $0) (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0)) (negate_boolean false))),trimmed,generation,entry,False,determine what color is used the most in the input grid and make the entire output grid that color,determine which color is used for the majority of the square s in the input grid then use that color for the entire output grid,determine which color is used the most in the input grid and make the entire grid that color,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 green lor))))),rich,0,0,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 green lor))))),rich,0,1,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $0 $1 green lor))))),rich,0,2,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $1 $0 green lor))))),rich,0,3,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 green lor))))),rich,0,4,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 green lor))))),rich,0,5,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 (color_logical $0 $1 green lxor) green lor))))),rich,0,6,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 (color_logical $1 $0 green lxor) green lor))))),rich,0,7,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $0 $1 green lor))))),rich,0,8,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $1 $0 green lor))))),rich,0,9,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 true))),rich,1,0,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (negate_boolean false)))),rich,1,1,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (touches_any_boundary (grid_to_block $0))))),rich,1,2,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (is_rectangle (grid_to_block $0) true)))),rich,1,3,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor (nth_primary_color (grid_to_block $0) 4) (split_grid $0 true))),rich,1,4,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (is_rectangle (grid_to_block $0) false)))),rich,1,5,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (has_min_tiles (grid_to_block $0) 1)))),rich,1,6,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (touches_boundary (grid_to_block $0) south)))),rich,1,7,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (touches_boundary (grid_to_block $0) east)))),rich,1,8,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (has_color (grid_to_block $0) blue)))),rich,1,9,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) $1 green (split_grid $0 true)))) lor $0)),rich,2,0,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 4) (split_grid $0 true))),rich,3,3,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0))))),rich,3,5,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor green (split_grid $0 (touches_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0) east)))),rich,3,7,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor (nth_primary_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) 4) (split_grid $0 true))),rich,3,8,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical (color_logical $0 $0 green lor) $1 green lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical (color_logical $0 $1 green lor) $0 green lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical (color_logical $0 $1 green lor) $1 green lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical (color_logical $1 $0 green lor) $0 green lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 (color_logical $0 $1 green lor) lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 (color_logical $1 $0 green lor) lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 (color_logical $0 $1 green lor) lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 (color_logical $1 $0 green lor) lor))))),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true green)) $0 lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true green lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true (nth_primary_color (grid_to_block $0) 4) lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (negate_boolean false) green lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (touches_any_boundary (grid_to_block $0)) green lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true (nth_primary_color (grid_to_block $0) (get_width (grid_to_block $0))) lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 true (nth_primary_color (grid_to_block $0) (get_original_grid_width (grid_to_block $0))) lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_rectangle (grid_to_block $0) false) green lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_rectangle (grid_to_block $0) true) green lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
ce4f8723.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (touches_boundary (grid_to_block $0) south) green lor)),rich,generation,entry,False,consider the long input as two section s as 4 by 4 grid s consider that the two section s as one then the leave that black space s as black then point the colored block s as green,join the upper and lower into one design leaving the black space s black and the other color s now green,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) false)),rich,0,0,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) true)),rich,0,1,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) false)),rich,0,2,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) true)),rich,0,3,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) (negate_boolean false))),rich,0,4,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) (negate_boolean true))),rich,0,5,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) (negate_boolean false))),rich,0,6,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) (negate_boolean true))),rich,0,7,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) orange grey)) false)),rich,0,8,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) orange grey)) true)),rich,0,9,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (remove_black_b (replace_color (grid_to_block $0) orange grey)) true)),rich,1,4,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (remove_black_b (grid_to_block $0)) orange grey) true)),rich,1,5,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (remove_black_b (replace_color (grid_to_block $0) orange grey)) false)),rich,1,6,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (remove_black_b (grid_to_block $0)) orange grey) false)),rich,1,7,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (remove_black_b (replace_color (grid_to_block $0) orange grey)) true)),rich,1,8,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (remove_black_b (grid_to_block $0)) orange grey) true)),rich,1,9,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) orange grey) false)),rich,2,0,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) orange grey) true)),rich,2,2,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) orange grey) true)),rich,2,5,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) orange grey) false)),rich,3,4,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_min_grid (replace_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) orange grey) true)),rich,3,8,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (replace_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) orange grey) true)),rich,3,9,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (to_original_grid_overlay (box_block (replace_color (grid_to_block $0) orange grey)) true)),rich,generation,entry,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $0) orange grey))),trimmed,generation,entry,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c8f0f002.json,(lambda (#(lambda (lambda (lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $2) $0 $1))))) $0 grey orange)),trimmed,generation,entry,False,change the yellow grid s into grey one,replace yellow grid with grey,,,,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) 3 east true) false)),,,,True,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) 3 east true) true)),rich,1,0,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) (get_height (grid_to_block $0)) east true) true)),rich,1,2,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) (get_width (grid_to_block $0)) east true) true)),rich,1,3,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) (get_height (grid_to_block $0)) east true) false)),rich,1,4,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) (get_width (grid_to_block $0)) east true) false)),rich,1,5,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) (get_original_grid_height (grid_to_block $0)) east true) true)),rich,1,6,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) false) (get_original_grid_width (grid_to_block $0)) east true) true)),rich,1,7,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (reflect (reflect (grid_to_block $0) false) true) true) 3 east true) true)),rich,1,8,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (move (reflect (reflect (reflect (grid_to_block $0) true) false) true) 3 east true) true)),rich,1,9,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east false)),rich,2,0,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east true)),rich,2,1,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (negate_boolean false))),rich,2,2,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (negate_boolean true) east false)),rich,2,3,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (negate_boolean true))),rich,2,4,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (negate_boolean true) east true)),rich,2,5,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,2,6,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,2,7,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (is_tile (grid_to_block $0)) east false)),rich,2,8,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (is_tile (grid_to_block $0)))),rich,2,9,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false))),rich,3,8,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (is_interior (get_block_center (grid_to_block $0)) false))),rich,3,9,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east false $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (negate_boolean true) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (is_tile (grid_to_block $0)) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (is_symmetrical (grid_to_block $0) false) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (negate_boolean (negate_boolean false)) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (is_exterior (get_block_center (grid_to_block $0)) false) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (has_color (grid_to_block $0) blue) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (has_color (grid_to_block $0) yellow) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (has_color (grid_to_block $0) pink) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) east (has_color (grid_to_block $0) grey) $0)),rich,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) false) 3 east true)) false)),trimmed,2,0,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) false) 3 east true)) true)),trimmed,2,1,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) false) true) true) 3 east true)) true)),trimmed,2,2,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) false) true) 3 east true)) true)),trimmed,2,3,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) true) false) 3 east true)) true)),trimmed,2,4,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (remove_color (grid_to_block $0) blue) false) 3 east true)) false)),trimmed,3,2,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (remove_color (grid_to_block $0) yellow) false) 3 east true)) false)),trimmed,3,3,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) false) true) true) 3 east true)) false)),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) false) true) 3 east true)) false)),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) true) false) 3 east true)) false)),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (box_block (move (reflect (grid_to_block $1) $0) 3 $2 true)) false)))) east $0 false)),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (box_block (move (reflect (grid_to_block $1) $0) 3 $2 true)) false)))) east $0 (negate_boolean true))),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (box_block (move (reflect (grid_to_block $1) $0) 3 $2 true)) false)))) east $0 (is_tile (reflect (grid_to_block $0) true)))),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (box_block (move (reflect (grid_to_block $1) $0) 3 $2 true)) false)))) east $0 (is_tile (fill_color (grid_to_block $0) teal)))),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
c9e6f938.json,(lambda (#(lambda (lambda (lambda (to_min_grid (box_block (move (reflect (grid_to_block $1) $0) 3 $2 true)) false)))) east $0 (is_tile (remove_color (grid_to_block $0) yellow)))),trimmed,generation,entry,False,copy the input image to the other half but in opposite position,copy the original pattern to the left half of the grid then mirror it on the right like an inkblot,create a left right mirror of pattern of the orange shape,make an identical grid next to it with same pattern as input grid,make the pattern mirror as left right with the same height and twice the row,
3428a4f5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (is_interior (get_block_center (grid_to_block $0)) true)))),rich,1,3,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (is_interior (get_block_center (grid_to_block $0)) false)))),rich,1,6,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lxor green (split_grid $0 (is_exterior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) true)))),rich,3,7,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 (color_logical $0 $1 green lor) lxor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 (color_logical $0 $1 green lxor) lor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 (color_logical $1 $0 green lor) lxor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 (color_logical $1 $0 green lxor) lor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 (color_logical $0 $1 green lor) lxor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 (color_logical $0 $1 green lxor) lor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 (color_logical $1 $0 green lor) lxor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
3428a4f5.json,(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 (color_logical $1 $0 green lxor) lor))))),rich,generation,entry,False,overlapping the two pattern s if the color s are the same then it is colored black if they are different then they are colored in a different color,the grid up so that it is on top of the top half if two red block s are on top of each other they turn black if a red block is on top of or below a black block it become s green if two black block s are on top of each other they stay black,,,,
a5f85a15.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_snakewise (extend_towards_until_edge $0 north_west) (make_colorpair invisible yellow))) $0)),rich,5,0,False,change every other square on each of the diagonal line s to yellow,change every other square on each of the diagonal line s to yellow starting with the 2nd square on each line,replicate the original input grid then starting from the top change every other square on each of the diagonal line s to yellow,,,
a5f85a15.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_snakewise (extend_towards_until_edge $0 north_west) (make_colorpair (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $1) 0) yellow))) $0)),rich,5,1,False,change every other square on each of the diagonal line s to yellow,change every other square on each of the diagonal line s to yellow starting with the 2nd square on each line,replicate the original input grid then starting from the top change every other square on each of the diagonal line s to yellow,,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) (negate_boolean true)) false)),rich,0,4,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) (negate_boolean true)) true)),rich,0,5,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) (negate_boolean true))) false)),rich,0,6,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) (negate_boolean true))) true)),rich,0,7,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) (negate_boolean false))),rich,0,8,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) (negate_boolean true))),rich,0,9,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (remove_black_b (grid_to_block $0)) false)) true)),rich,1,4,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (remove_black_b (reflect (grid_to_block $0) false))) true)),rich,1,5,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_black_b (remove_black_b (grid_to_block $0))) false) true)),rich,1,6,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_black_b (remove_black_b (grid_to_block $0))) false) false)),rich,1,7,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (remove_black_b (grid_to_block $0)) false)) false)),rich,1,8,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (remove_black_b (reflect (grid_to_block $0) false))) false)),rich,1,9,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) false) false)),rich,2,2,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false)) false)),rich,2,3,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) false) true)),rich,2,5,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_black_b (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false)) true)),rich,2,6,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (merge_blocks (find_same_color_blocks $0 false false) false) false) false)),rich,3,4,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (filter_block_tiles (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) (lambda true)) true)),rich,3,5,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)) false) true)),rich,3,6,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (merge_blocks (find_same_color_blocks $0 false false) false) false) true)),rich,3,7,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (merge_blocks (find_same_color_blocks $0 false true) false) false) false)),rich,3,8,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (merge_blocks (find_same_color_blocks $0 true false) false) false) false)),rich,3,9,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) black) false) false)),rich,generation,entry,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_color (reflect (grid_to_block $0) false) black) false)),rich,generation,entry,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (remove_color (reflect (grid_to_block $0) false) black) true)),rich,generation,entry,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) black) false) true)),rich,generation,entry,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (reflect $0 false))) (#(lambda (remove_black_b (grid_to_block $0))) $0))),trimmed,generation,entry,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
7468f01a.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (reflect (grid_to_block $0) false)))),trimmed,generation,entry,False,copy and mirror the colored object,copy the large colored object with smaller colored object in it then mirror the small colored object left to right,flip s the smaller object s to 180 degree s,the output is the colored shape inverted to the side,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) blue true) blue))) true false)),rich,0,0,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) blue true) blue))) true true)),rich,0,1,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) invisible true) blue))) true false)),rich,0,2,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) invisible true) blue))) true true)),rich,0,3,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) false) false)) blue true) blue))) true true)),rich,0,4,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) false) false)) invisible true) blue))) true true)),rich,0,5,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) blue true) blue))) true false)),rich,0,6,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) blue true) blue))) true true)),rich,0,7,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) invisible true) blue))) true false)),rich,0,8,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) invisible true) blue))) true true)),rich,0,9,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) blue true) blue) true)),rich,1,0,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) blue true) blue) false)),rich,1,1,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) invisible true) blue) true)),rich,1,2,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) invisible true) blue) false)),rich,1,3,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) black true) blue) true)),rich,1,4,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) black true) blue) false)),rich,1,5,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 1) true) blue) false)),rich,1,6,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true) blue) false)),rich,2,0,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true) blue) true)),rich,2,1,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) invisible true) blue) false)),rich,2,2,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) black true) blue) false)),rich,2,3,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) invisible true) blue) true)),rich,2,4,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) black true) blue) true)),rich,2,5,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1) true) blue) false)),rich,2,6,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $1) blue true) blue)) $0)),rich,3,0,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $1) blue) blue true)) $0)),rich,3,1,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $1) red true) blue)) $0)),rich,3,2,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue) blue true) false)),rich,3,4,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue) blue true) true)),rich,3,6,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $1) grey true) blue)) $0)),rich,3,7,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $1) teal true) blue)) $0)),rich,3,8,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) red true) blue) false)),rich,3,9,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue) black true) false)),trimmed,1,4,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue) black true) true)),trimmed,1,5,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue) blue true) false)),trimmed,1,6,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue) blue true) true)),trimmed,1,7,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) blue true) false)),trimmed,1,8,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (wrap_block (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) blue true) true)),trimmed,1,9,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (#(lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) $0))),trimmed,generation,entry,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (#(lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) $0) blue) false)),trimmed,generation,entry,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) black true))),trimmed,generation,entry,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
ce22a75a.json,(lambda (to_original_grid_overlay (fill_color (#(lambda (wrap_block $0 invisible true)) (#(lambda (remove_black_b (grid_to_block $0))) $0)) blue) false)),trimmed,generation,entry,False,9 square s that go all around it into blue,change every gray square and the 9 square s around it into blue,change every gray square and the 9 square s that go all around it into blue,change the gray block s to blue and the square s that go around it to turn it into a blue block of 9,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 false true) false) black red) false)),rich,2,0,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) black red) false)),rich,2,1,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (singleton_block (find_same_color_blocks $0 false true)) black red) false)),rich,2,2,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 false true) false) black red) true)),rich,2,3,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 false true) true) black red) false)),rich,2,4,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) false) black red) false)),rich,2,5,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) black red) true)),rich,2,6,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (singleton_block (find_same_color_blocks $0 false true)) black red) true)),rich,2,7,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (singleton_block (find_same_color_blocks $0 true true)) black red) false)),rich,2,8,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) false) black red) true)),rich,2,9,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) false $0 red)),rich,3,0,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) true $0 red)),rich,3,1,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (negate_boolean false) $0 red)),rich,3,2,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (negate_boolean true) $0 red)),rich,3,3,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) $0 red)),rich,3,4,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) $0 red)),rich,3,5,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false) $0 red)),rich,3,6,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) false $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 3))),rich,3,7,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) true) $0 red)),rich,3,8,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (touches_any_boundary (grid_to_block $0)) $0 red)),rich,3,9,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,5,0,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,6,0,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 0) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,6,1,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) true) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,6,3,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true)),trimmed,6,4,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) teal))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_color (box_block (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0))) teal))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (nth_primary_color (grid_to_block $0) 3) (remove_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) teal))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_color (remove_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) blue) teal))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_color (remove_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) teal) blue))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_color (box_block (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) true)) teal))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_color (remove_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) teal) teal))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (#(lambda (remove_color (box_block $0) teal)) (#(lambda (remove_black_b (grid_to_block $0))) $0)))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (#(lambda (remove_color (box_block $0) teal)) (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0))))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (#(lambda (remove_color (box_block $0) teal)) (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) true)))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (nth_primary_color (grid_to_block $0) 3) (#(lambda (remove_color (box_block $0) teal)) (#(lambda (remove_black_b (grid_to_block $0))) $0)))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
6d75e8bb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_color (#(lambda (remove_color (box_block $0) teal)) (#(lambda (remove_black_b (grid_to_block $0))) $0)) teal))),trimmed,generation,entry,False,fill in the area of the large section with red to make a rectangular section background remain the same color,make the blue are a complete rectangle except you fill in the missing square s with red the black background remain s the same,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height $0)) true) false)),rich,0,0,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height $0)) true) true)),rich,0,1,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) true) false)),rich,0,2,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) true) true)),rich,0,3,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width $0)) true) false)),rich,0,4,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width $0)) true) true)),rich,0,5,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height (box_block $0))) true) false)),rich,0,6,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height (remove_black_b $0))) true) false)),rich,0,7,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (box_block $0))) true) false)),rich,0,8,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width (box_block $0))) true) false)),rich,0,9,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_height $0)) true) true)),rich,1,3,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_height $0)) true) true)),rich,1,4,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles $0)) true) true)),rich,1,6,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) true) true)),rich,1,7,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_width $0)) true) true)),rich,1,9,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_same_color_blocks $0 false true))),rich,2,0,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_same_color_blocks $0 true false))),rich,2,1,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_same_color_blocks $0 true true))),rich,2,2,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,3,0,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_same_color_blocks $0 false false))),rich,3,1,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (map_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda $0)))),rich,3,5,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (negate_boolean false) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,3,6,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (filter_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda true)))),rich,3,7,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (map_blocks (find_same_color_blocks $0 false false) (lambda $0)))),rich,3,8,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles $0)) true) false)),rich,3,9,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_height $0)) true) false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles $0)) true) true)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_height $0)) true) true)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_height $0)) true) false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_height $0)) true) false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_num_tiles $0)) false false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_num_tiles $0)) false true)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_num_tiles $0)) true false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_num_tiles $0)) true true)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_height $0)) false false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_height $0)) false true)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_height $0)) true false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_height $0)) true true)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_width $0)) false false)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_width $0)) false true)),rich,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height (fill_color $0 blue))) true) true)),trimmed,1,6,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (fill_color $0 blue))) true) true)),trimmed,1,7,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height (fill_color $0 (nth_primary_color (grid_to_block $1) 0)))) true) true)),trimmed,1,8,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (fill_color $0 (nth_primary_color (grid_to_block $1) 0)))) true) true)),trimmed,1,9,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_width $0)) true) false)),trimmed,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_width $0)) true) false)),trimmed,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
23b5c85d.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 true (lambda (get_height $0)))),trimmed,generation,entry,False,change the grid size with the colored object with the smallest area and fill the same color,copy the exact color s in the small inner grid pattern,,,,
fcb5c309.json,(lambda (to_min_grid (replace_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) (nth_primary_color (remove_black_b (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false)) 0) (nth_primary_color (remove_black_b (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false)) 0)) false)),,,,True,copy the largest squared border including colored square s inside but make all colored square s the same color as interior square s,recreate the largest shape from the input instead using the color of the random pixel s from the input using that same color fill in any random pixel s that occured in the shape in the input in the same position they are in in the input shape,,,,
67385a82.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true)),trimmed,3,0,False,any green colored block s that are more than 2 connected block s 1 by 2 2 by 1 2 by 2 or other shape s should be changed to light blue,change so that the top left corner color change s to light blue instead of green same with lower green 2by 2 grid,,,,
67385a82.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true))))) true)),trimmed,4,1,False,any green colored block s that are more than 2 connected block s 1 by 2 2 by 1 2 by 2 or other shape s should be changed to light blue,change so that the top left corner color change s to light blue instead of green same with lower green 2by 2 grid,,,,
67385a82.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true)),trimmed,4,2,False,any green colored block s that are more than 2 connected block s 1 by 2 2 by 1 2 by 2 or other shape s should be changed to light blue,change so that the top left corner color change s to light blue instead of green same with lower green 2by 2 grid,,,,
67385a82.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true)),trimmed,4,3,False,any green colored block s that are more than 2 connected block s 1 by 2 2 by 1 2 by 2 or other shape s should be changed to light blue,change so that the top left corner color change s to light blue instead of green same with lower green 2by 2 grid,,,,
67385a82.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) true) true)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true)),trimmed,4,4,False,any green colored block s that are more than 2 connected block s 1 by 2 2 by 1 2 by 2 or other shape s should be changed to light blue,change so that the top left corner color change s to light blue instead of green same with lower green 2by 2 grid,,,,
60b61512.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) false) black orange) false)),rich,2,0,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) false) black orange) true)),rich,2,1,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) true) black orange) false)),rich,2,2,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $0 true true) true) black orange) true)),rich,2,3,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) false $0 orange)),rich,3,0,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) true $0 orange)),rich,3,1,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (negate_boolean false) $0 orange)),rich,3,2,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (negate_boolean true) $0 orange)),rich,3,3,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) false $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 7))),rich,3,4,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) true $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 7))),rich,3,5,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) false $0 (nth_primary_color (grid_to_block $0) 7))),rich,3,6,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) $0 orange)),rich,3,7,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) $0 orange)),rich,3,8,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (#(lambda (lambda (lambda (to_original_grid_overlay (replace_color (merge_blocks (find_same_color_blocks $1 $2 true) false) black $0) $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false) $0 orange)),rich,3,9,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,6,0,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) (nth_primary_color (grid_to_block $0) 7)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,6,1,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true)),trimmed,7,2,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (grid_to_block $1) 3 east true)))))) true)),trimmed,7,3,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
60b61512.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (grid_to_block $1) 3 south true)))))) true)),trimmed,7,4,False,complete the square s using the color orange,keep the shape s in the same place but fill the gap s in the shape with the color orange until they form square s,,,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles $0)) false) true)),rich,1,1,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false) true)),rich,1,4,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false false) (lambda (get_num_tiles $0)) false) true)),rich,1,5,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) false) false)),rich,1,6,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 true false) (lambda (get_num_tiles $0)) false) true)),rich,1,7,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false false) (lambda (get_num_tiles $0)) false) false)),rich,1,8,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 true false) (lambda (get_num_tiles $0)) false) false)),rich,1,9,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_black_b $0 true false))),rich,2,5,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (map_blocks (find_same_color_blocks $0 false false) (lambda $0)))),rich,2,6,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (filter_blocks (find_same_color_blocks $0 false false) (lambda true)))),rich,2,7,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (map_blocks (find_same_color_blocks $0 true false) (lambda $0)))),rich,2,8,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (filter_blocks (find_same_color_blocks $0 true false) (lambda true)))),rich,2,9,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 (negate_boolean false) false))),rich,3,9,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) (lambda (get_num_tiles $0)) false) true)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) (lambda (get_num_tiles $0)) (negate_boolean true)) false)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) (lambda (get_num_tiles $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 true false) (lambda (get_num_tiles $0)) (negate_boolean true)) false)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 true false) (lambda (get_num_tiles $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (negate_boolean true)) true)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles $0)) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (reflect $0 false))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_black_b $0))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (reflect $0 true))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (grow $0 1))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (grow $0 0))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (grow $0 2))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color $0 black))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (fill_color $0 blue))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (filter_block_tiles $0 (lambda true)))) $0)),rich,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (box_block (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false)) false)),trimmed,4,3,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (to_min_grid (remove_black_b (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false)) false)),trimmed,4,4,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles (remove_black_b $0))))),trimmed,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles (wrap_block (remove_black_b $0) black true))))),trimmed,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles (remove_black_b $0))))) $0)),trimmed,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles (remove_color $0 black))))),trimmed,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 false (lambda (get_num_tiles (remove_color $0 green))))),trimmed,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
be94b721.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (negate_boolean true) (lambda (get_num_tiles (remove_black_b $0))))),trimmed,generation,entry,False,copy and paste the biggest object and the black boxe s that make up the rectangle,copy the pattern as a full square or rectangle including black boxe s,fully copy the pattern of the largest colored shape zoomed as much as possible,fully zoomed pattern of a highest color count among the gird,,
50cb2852.json,(lambda (blocks_to_original_grid (map_blocks (find_blocks_by_black_b $0 true false) (lambda (fill_color (filter_block_tiles $0 (lambda (is_interior $0 true))) teal))) true true)),,,,True,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (fill_color (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true))) teal) true)),rich,1,0,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) teal) (lambda (is_interior $0 true))) true)),rich,1,1,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) teal) (lambda (is_interior $0 true))) true)),rich,1,2,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true false) false) teal) (lambda (is_interior $0 true))) true)),rich,1,3,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) teal) (lambda (is_interior $0 true))) true)),rich,1,4,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) teal) (lambda (is_interior $0 (is_interior $0 true)))) true)),rich,1,5,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false))) false) teal) (lambda (is_interior $0 true))) true)),rich,1,6,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (#(lambda (remove_black_b (grid_to_block $0))) $0))),rich,2,0,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false))),rich,2,1,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)))),rich,2,2,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true))),rich,2,3,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (merge_blocks (find_same_color_blocks $0 false false) false))),rich,2,4,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,2,5,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (merge_blocks (find_same_color_blocks $0 false false) true))),rich,2,6,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (merge_blocks (find_same_color_blocks $0 false true) false))),rich,2,7,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (merge_blocks (find_same_color_blocks $0 true false) false))),rich,2,8,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) teal (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue))),rich,2,9,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) teal) (lambda (is_interior $0 true))) true)),trimmed,3,3,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) teal) (lambda (is_interior $0 true))) true)),trimmed,3,4,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) teal (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0))),trimmed,generation,entry,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) teal (map_block_tiles (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0) (lambda $0)))),trimmed,generation,entry,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (nth_primary_color (grid_to_block $0) 8) (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0))),trimmed,generation,entry,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (nth_primary_color (fill_color (grid_to_block $0) teal) 0) (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0))),trimmed,generation,entry,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
50cb2852.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (nth_primary_color (box_block (fill_color (grid_to_block $0) teal)) 0) (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0))),trimmed,generation,entry,False,color the inside of each colored area with light blue leave the outside of the colored shape s the example color one cube deep all the way around,fill the inside of each shape with light blue square s,fill the shape s in with light blue color s but leave the cube s on the edge the same color as the input grid,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) false)),rich,0,0,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) true)),rich,0,1,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) false)),rich,0,2,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) true)),rich,0,3,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) (negate_boolean false))),rich,0,4,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) (negate_boolean true))),rich,0,5,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible (negate_boolean true)) false)),rich,0,6,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible (negate_boolean true)) true)),rich,0,7,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) (negate_boolean false))),rich,0,8,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) (negate_boolean true))),rich,0,9,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (remove_black_b (wrap_block (grid_to_block $0) invisible false)) true)),rich,1,4,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (remove_black_b (wrap_block (grid_to_block $0) invisible false)) false)),rich,1,5,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (remove_black_b (wrap_block (grid_to_block $0) black false)) true)),rich,1,6,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (remove_black_b (wrap_block (grid_to_block $0) black false)) false)),rich,1,7,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (filter_block_tiles (grid_to_block $0) (lambda true)) invisible false) true)),rich,1,9,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (filter_block_tiles (wrap_block (grid_to_block $0) invisible false) (lambda true)) false)),rich,3,4,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (filter_block_tiles (grid_to_block $0) (lambda true)) invisible false) false)),rich,3,5,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (filter_block_tiles (wrap_block (grid_to_block $0) black false) (lambda true)) false)),rich,3,6,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (filter_block_tiles (grid_to_block $0) (lambda true)) black false) false)),rich,3,7,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (merge_blocks (find_same_color_blocks $0 true true) false) invisible false) false)),rich,3,8,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (merge_blocks (find_same_color_blocks $0 true true) false) black false) false)),rich,3,9,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (box_block (wrap_block (grid_to_block $0) black false)) false)),rich,generation,entry,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (box_block (wrap_block (grid_to_block $0) invisible false)) false)),rich,generation,entry,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) black (negate_boolean true)) false)),trimmed,1,4,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (to_min_grid (wrap_block (grid_to_block $0) black (negate_boolean true)) true)),trimmed,1,5,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (#(lambda (to_min_grid $0 true)) (wrap_block (grid_to_block $0) invisible false))),trimmed,generation,entry,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
49d1d64f.json,(lambda (#(lambda (to_min_grid $0 true)) (wrap_block (grid_to_block $0) black false))),trimmed,generation,entry,False,make input pattern as center for output and color s should be same the adjacent color s are also same all four corner color s should be black,use the color from the input corner to make 4 by 4 block s of the same color s in the corresponding corner of the output use color s in the middle outside block s of the input grid to create 1 by 2 or 2 by 1 block s in the corresponding middle outside space in the output black out each corner block of the output grid if the output is not even in it s number of block s in height and width black out the center of the grid,,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true))) false)),rich,0,0,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true))) true)),rich,0,1,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (is_interior $0 true))) false)),rich,0,2,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) true)) (lambda (is_interior $0 true))) false)),rich,0,3,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (remove_black_b (grid_to_block $0)) false)) (lambda (is_interior $0 true))) false)),rich,0,4,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (remove_black_b (grid_to_block $0)) true)) (lambda (is_interior $0 true))) false)),rich,0,5,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (lambda (is_interior $0 true))) false)),rich,0,6,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) true)) (lambda (is_interior $0 true))) false)),rich,0,7,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) (lambda (is_interior $0 true))) false)),rich,0,8,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) (lambda (is_interior $0 true))) false)),rich,0,9,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (remove_black_b (grid_to_block $0))) (lambda (is_interior $0 true))) true)),rich,1,2,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (remove_black_b (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true)))) true)),rich,1,3,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (remove_black_b (grid_to_block $0))) (lambda (is_interior $0 true))) false)),rich,1,4,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (remove_black_b (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true)))) false)),rich,1,5,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) true)) (lambda (is_interior $0 true))) true)),rich,1,6,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (is_interior $0 true))) true)),rich,1,7,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true))) false)),rich,2,0,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true))) true)),rich,2,1,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) (lambda (is_interior $0 true))) false)),rich,2,2,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (remove_black_b (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) false)),rich,2,3,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) (lambda (is_interior $0 true))) true)),rich,2,4,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (remove_black_b (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) true)),rich,2,5,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 (is_interior $0 false)))) false)),rich,3,2,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 (is_interior $0 false)))) true)),rich,3,3,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) (lambda (is_interior $0 true))) false)),rich,3,4,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (reflect (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true))) false) false)),rich,3,5,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true))) (lambda true)) false)),rich,3,6,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)) (lambda (is_interior $0 true))) false)),rich,3,7,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (merge_blocks (find_same_color_blocks $0 false false) false) (lambda (is_interior $0 true))) false)),rich,3,8,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 (is_exterior $0 true)))) false)),rich,3,9,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) (has_color (grid_to_block $0) teal)) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (wrap_block (grid_to_block $1) blue false) (nth_primary_color $0 2)))) $0)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda 1) (has_color (remove_color (grid_to_block $0) blue) teal)) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) (has_color (remove_color (grid_to_block $0) blue) teal)) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda 1) (has_color (move (grid_to_block $0) 1 south false) teal)) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) (has_color (move (grid_to_block $0) 1 south false) teal)) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (box_block (remove_black_b (grow (grid_to_block $0) 1))) 2) false false) (lambda 1) true) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (box_block (remove_black_b (grow (grid_to_block $0) 1))) 2) false false) (lambda (get_num_tiles $0)) true) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles (remove_color (box_block (duplicate $0 north_east 3)) blue))) true) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles (remove_color (box_block (duplicate $0 north_east 3)) blue))) true) true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (has_color (grid_to_block $0) teal) (lambda 1) true true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (has_color (remove_color (grid_to_block $0) blue) teal) (lambda 1) false true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (has_color (remove_color (grid_to_block $0) blue) teal) (lambda 1) true true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (has_color (move (grid_to_block $0) 1 south false) teal) (lambda 1) false true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (has_color (move (grid_to_block $0) 1 south false) teal) (lambda 1) true true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_num_tiles (remove_color (box_block (duplicate $0 north_east 3)) blue))) false true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda (get_num_tiles (remove_color (box_block (duplicate $0 north_east 3)) blue))) true true)),rich,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (move (grid_to_block $0) 1 south false)) (lambda (is_interior $0 true))) false)),trimmed,1,6,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (move (grid_to_block $0) 1 south false)) (lambda (is_interior $0 true))) true)),trimmed,1,7,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (move (grid_to_block $0) 3 south false)) (lambda (is_interior $0 true))) false)),trimmed,1,8,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (move (grid_to_block $0) 3 south false)) (lambda (is_interior $0 true))) true)),trimmed,1,9,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0))),trimmed,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (to_min_grid (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0) false)),trimmed,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
d9fac9be.json,(lambda (#(lambda (to_min_grid $0 true)) (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (is_interior $0 true))))),trimmed,generation,entry,False,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the different colored center block from the input grid and make it the only colored block,zoom into the light blue center block,,,
72ca375d.json,(lambda (blocks_to_min_grid (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_tile $0))) false false)),,,,True,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false)))) true)),rich,1,0,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) true)),rich,1,1,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false)))) false)),rich,1,2,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) false)),rich,1,3,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (reflect (singleton_block (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false)))) false) false)),rich,1,4,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false))) (lambda (get_num_tiles $0)) true) false)),rich,1,5,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false))) (lambda (get_num_tiles $0)) false) false)),rich,1,6,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false))) (lambda (get_num_tiles $0)) false) false)),rich,1,7,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (filter_blocks (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false))) (lambda (is_symmetrical $0 false)))) false)),rich,1,8,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (filter_blocks (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false))) (lambda (is_symmetrical $0 false)))) false)),rich,1,9,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,2,0,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (blocks_to_min_grid (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false false)),rich,2,2,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) false)),rich,2,3,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0)) false)),rich,2,4,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (blocks_to_min_grid (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false true)),rich,2,5,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (blocks_to_min_grid (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true false)),rich,2,6,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) true)),rich,2,7,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true) false)),rich,2,8,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (singleton_block (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0)) true)),rich,2,9,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (to_min_grid (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true) true)),rich,3,8,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (blocks_to_min_grid (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true true)),rich,3,9,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 3))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 south_west 3))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 2))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 4))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 5))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 6))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 7))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 8))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 north_east 9))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_height (duplicate $0 south_west 2))) $0)),rich,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (filter_blocks (find_blocks_by_inferred_b $0 true (has_color (grid_to_block $0) blue)) (lambda (is_symmetrical $0 (has_color (grid_to_block $1) blue)))))),trimmed,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (filter_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (is_symmetrical $0 false))))),trimmed,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (filter_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (is_symmetrical $0 (touches_any_boundary $0)))))),trimmed,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (filter_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (is_symmetrical (#(lambda (remove_color (box_block $0) teal)) $0) false))))),trimmed,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (blocks_to_min_grid (filter_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (is_symmetrical $0 false))) false false)),trimmed,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
72ca375d.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (filter_blocks (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0) (lambda (is_symmetrical $0 (has_color (grid_to_block $1) blue)))))),trimmed,generation,entry,False,copy one of the figure s and just that figure,copy one of the figure s and just that figure,copy one of the shape s by itself and keep the black square s if there are any,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) true)),rich,0,0,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) (negate_boolean false))) true)),rich,0,1,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) (negate_boolean false))),rich,0,2,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_color (reflect (grid_to_block $0) true) black) true)),rich,0,3,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (box_block (remove_black_b (reflect (grid_to_block $0) true))) true)),rich,0,4,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (box_block (reflect (grid_to_block $0) true))) true)),rich,0,5,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (box_block (grid_to_block $0)) true)) true)),rich,0,6,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) (touches_any_boundary (grid_to_block $0)))) true)),rich,0,7,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) (touches_any_boundary (grid_to_block $0)))),rich,0,8,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (reflect (grid_to_block $0) true))) true)),rich,0,9,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (#(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) true)) $0)),rich,1,0,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) true)) (lambda true)) true)),rich,1,3,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (filter_block_tiles (reflect (grid_to_block $0) true) (lambda true))) true)),rich,1,4,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
f25ffba3.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (filter_block_tiles (grid_to_block $0) (lambda true)) true)) true)),rich,1,5,False,reflect down side to top,reflect the pattern upside down like it wa s up against a mirror,,,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) true) false)),rich,0,0,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 0) true) false)),rich,0,1,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 0) true) true)),rich,0,2,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) false)),rich,0,3,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) true)),rich,0,4,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 2) true) false)),rich,0,5,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 2) true) true)),rich,0,6,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 3) true) false)),rich,0,7,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 3) true) true)),rich,0,8,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 4) true) false)),rich,0,9,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) true) true)),rich,1,1,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 2) true) true)),rich,1,5,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 2) true) false)),rich,1,7,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (map_blocks (find_same_color_blocks $0 true false) (lambda $0)))),rich,3,3,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (negate_boolean false) (find_same_color_blocks $0 true false))),rich,3,6,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_same_color_blocks $0 (negate_boolean false) false))),rich,3,7,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (filter_blocks (find_same_color_blocks $0 true false) (lambda true)))),rich,3,8,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (map_blocks (find_same_color_blocks $0 true true) (lambda $0)))),rich,3,9,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 0) true) false)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 0) true) true)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 3) true) false)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda 1) true false)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda 1) true true)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda 0) true false)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda 2) true false)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda 0) true true)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 true (lambda 2) true true)),rich,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 4) true) true)),trimmed,0,9,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 true (lambda 1))),trimmed,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
39a8645d.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 true (lambda 0))),trimmed,generation,entry,False,count the number of copie s of each shape zoom in on the shape with the most copie s,create a pattern same as the original one but only for the light blue and yellow colored pattern s,just change size to contain the yellow or light blue object s,successfully,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) 3 south true) true)),rich,1,0,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) 3 south true) false)),rich,1,1,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_height (grid_to_block $0)) south true) true)),rich,1,2,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_width (grid_to_block $0)) south true) true)),rich,1,3,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_height (grid_to_block $0)) south true) false)),rich,1,4,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_width (grid_to_block $0)) south true) false)),rich,1,5,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_original_grid_height (grid_to_block $0)) south true) true)),rich,1,6,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_original_grid_width (grid_to_block $0)) south true) true)),rich,1,7,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_original_grid_height (grid_to_block $0)) south true) false)),rich,1,8,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (move (reflect (grid_to_block $0) true) (get_original_grid_width (grid_to_block $0)) south true) false)),rich,1,9,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true south false)),rich,2,0,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true south true)),rich,2,1,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (negate_boolean false) south false)),rich,2,2,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (negate_boolean false) south true)),rich,2,3,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true south (negate_boolean false))),rich,2,4,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true south (negate_boolean true))),rich,2,5,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) south false)),rich,2,6,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (is_interior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) false) south false)),rich,2,7,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (touches_any_boundary (grid_to_block $0)) south false)),rich,2,8,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true south (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,2,9,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (is_interior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) true) south false)),rich,3,8,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true south (is_interior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) false))),rich,3,9,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south true $0)),rich,generation,entry,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true)) false)),trimmed,1,0,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true)) true)),trimmed,1,1,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 south true)) false)),trimmed,1,2,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 south true)) true)),trimmed,1,3,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 south (negate_boolean false))) false)),trimmed,1,4,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 south (negate_boolean false))) true)),trimmed,1,5,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (remove_black_b (grid_to_block $0)) true))) 3 south true)) false)),trimmed,1,6,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (remove_black_b (grid_to_block $0)) true))) 3 south true)) true)),trimmed,1,7,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (reflect (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 south true)) true) false)),trimmed,1,8,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (reflect (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 south true)) true) true)),trimmed,1,9,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 south true)) true)),trimmed,2,0,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true))) true)),trimmed,2,3,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 south true)) false)),trimmed,generation,entry,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true))) false)),trimmed,generation,entry,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (lambda (lambda (to_min_grid (box_block (move (reflect (grid_to_block $1) $0) 3 $2 true)) false)))) south $0 true)),trimmed,generation,entry,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
6fa7a44f.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true)))),trimmed,generation,entry,False,mirror the exact pattern of the 3 by 3 grid at the bottom,place the input grid in the top 3 by 3 space and create a mirror image in the bottom 3 by 3 space,,,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) false))))),rich,2,0,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) true))))),rich,2,1,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true) false))))),rich,2,2,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) false))))),rich,2,3,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (overlap_split_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) false)) (lambda (lambda $0)))),rich,2,4,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (overlap_split_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) false)) (lambda (lambda $1)))),rich,2,5,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true) true))))),rich,2,6,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) true))))),rich,2,7,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true) false))))),rich,2,8,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (splitblocks_to_blocks (split_grid $0 (is_rectangle (merge_blocks (find_same_color_blocks $0 false true) false) false))))),rich,2,9,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
7b7f7511.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (splitblocks_to_blocks (split_grid $0 (is_symmetrical (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true) true))))),rich,3,9,False,copy one half of the input,copy one half of the input,cut the grid in half to take away one of the pattern s and leave one of the pattern s,get rid off one half of the input may it be right left or bottom half,,
68b16354.json,(lambda (to_min_grid (reflect (grid_to_block $0) true) false)),rich,0,0,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (grid_to_block $0) true) true)),rich,0,1,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) true) false)),rich,0,2,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) true) true)),rich,0,3,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean false)) false)),rich,0,4,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean false)) true)),rich,0,5,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (grid_to_block $0) true) (negate_boolean false))),rich,0,6,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (grid_to_block $0) true) (negate_boolean true))),rich,0,7,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean false)) false)),rich,0,8,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean false)) true)),rich,0,9,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) true) true)),rich,1,5,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) true)) true)),rich,1,6,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) true) false)),rich,1,7,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) true)) false)),rich,1,8,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) true) false)),rich,2,1,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) true) true)),rich,2,3,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) true) false)),rich,3,5,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) true) true)),rich,3,6,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_min_grid (filter_block_tiles (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) true) (lambda true)) false)),rich,3,9,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) true) (negate_boolean false))),trimmed,0,8,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (to_original_grid_overlay (reflect (grid_to_block $0) true) (negate_boolean true))),trimmed,0,9,False,flip the input grid vertically,flip the original grid vertically,,,,
68b16354.json,(lambda (#(lambda (to_min_grid $0 true)) (reflect (grid_to_block $0) true))),trimmed,generation,entry,False,flip the input grid vertically,flip the original grid vertically,,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $0 $1 red land))))),rich,0,0,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $1 $0 red land))))),rich,0,1,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $0 $1 red land))))),rich,0,2,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $1 $0 red land))))),rich,0,3,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 red land))))),rich,0,4,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 red land))))),rich,0,5,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $0 $1 red land))))),rich,0,6,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $1 $0 red land))))),rich,0,7,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $0 $1 red land))))),rich,0,8,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $1 $0 red land))))),rich,0,9,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 false))),rich,1,0,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (negate_boolean true)))),rich,1,1,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (is_tile (grid_to_block $0))))),rich,1,2,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (is_exterior (get_block_center (grid_to_block $0)) true)))),rich,1,3,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (is_exterior (get_block_center (grid_to_block $0)) false)))),rich,1,4,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (is_symmetrical (grid_to_block $0) false)))),rich,1,5,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land (nth_primary_color (grid_to_block $0) 3) (split_grid $0 false))),rich,1,6,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (has_color (grid_to_block $0) red)))),rich,1,7,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (has_color (grid_to_block $0) green)))),rich,1,8,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land (nth_primary_color (grid_to_block $0) (get_height (grid_to_block $0))) (split_grid $0 false))),rich,1,9,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0))))),rich,3,2,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (is_interior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) true)))),rich,3,3,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land red (split_grid $0 (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false)))),rich,3,4,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) land (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 3) (split_grid $0 false))),rich,3,5,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false red land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false (nth_primary_color (grid_to_block $0) 3) land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (negate_boolean true) red land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false (nth_primary_color (grid_to_block $0) (get_height (grid_to_block $0))) land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_tile (grid_to_block $0)) red land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_symmetrical (grid_to_block $0) false) red land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false (nth_primary_color (grid_to_block $0) (get_original_grid_height (grid_to_block $0))) land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_exterior (get_block_center (grid_to_block $0)) false) red land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false (nth_primary_color (reflect (grid_to_block $0) false) 3) land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
0520fde7.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_exterior (get_block_center (grid_to_block $0)) true) red land)),rich,generation,entry,False,imagine taking out the line grey block s and sliding the left half over until it line s up with the right side if two blue block s are on top of each other the block become s red otherwise the block is black,look at both the left and right part s of the input grid you will notice that the left and right part s are 3 by 3 for each square that is colored on both the left and right part s color the output grid with red on the new 3 by 3,place the right grid on top of the left grid any square that is colored on both grid become s red every other square including those that are blue become s black,,,
46f33fce.json,(lambda (to_min_grid (wrap_block (grow (remove_black_b (grid_to_block $0)) 1) invisible true) false)),rich,0,0,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true) false)),rich,0,1,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (box_block (grow (grid_to_block $0) 1))) invisible true) false)),rich,0,2,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (remove_black_b (grid_to_block $0)) 1)) invisible true) false)),rich,0,3,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (map_block_tiles (grow (remove_black_b (grid_to_block $0)) 1) (lambda $0)) invisible true) false)),rich,0,4,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (map_block_tiles (grow (grid_to_block $0) 1) (lambda $0))) invisible true) false)),rich,0,5,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (grow (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) 1) invisible true) false)),rich,0,6,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (grow (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) 1) invisible true) false)),rich,0,7,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (reflect (reflect (grow (grid_to_block $0) 1) false) false)) invisible true) false)),rich,0,8,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (reflect (reflect (grow (grid_to_block $0) 1) true) true)) invisible true) false)),rich,0,9,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (grow (remove_black_b (grid_to_block $0)) 1) black true) false)),rich,1,2,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) black true) false)),rich,1,3,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) invisible true) false)),rich,2,0,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) black true) false)),rich,2,1,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1)) invisible true) false)),rich,2,2,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (map_block_tiles (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) (lambda $0)) invisible true) false)),rich,2,5,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) (get_num_tiles (remove_color (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles $0)) false) grey))) black true) false)),rich,3,8,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) (nth_primary_color (grid_to_block $0) 0) true) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (remove_black_b (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true)) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (remove_black_b (grow (grid_to_block $0) 1))) invisible true) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (reflect (reflect (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true) false) false) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) false) 1)) invisible true) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (move (grid_to_block $0) 1 south false) 1)) invisible true) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (remove_color (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true) (nth_primary_color (grid_to_block $0) 0)) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (replace_color (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true) orange grey) false)),rich,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) black true) (negate_boolean true))),trimmed,1,2,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true) (negate_boolean true))),trimmed,1,3,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (remove_black_b (grid_to_block $0)) 1)) black true) false)),trimmed,1,4,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (duplicate (remove_black_b (grow (remove_black_b (move (grid_to_block $0) 1 east true)) 1)) south 1) false)),trimmed,1,6,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (duplicate (remove_black_b (grow (remove_black_b (move (grid_to_block $0) 1 south true)) 1)) west 1) false)),trimmed,1,7,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (remove_black_b (move (grid_to_block $0) 1 south false)) 1)) black true) false)),trimmed,1,8,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (grow (remove_black_b (move (grid_to_block $0) 3 south false)) 1)) black true) false)),trimmed,1,9,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (#(lambda (wrap_block $0 invisible true)) (remove_black_b (#(lambda (grow (grid_to_block $0))) $0 1))) false)),trimmed,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (#(lambda (wrap_block $0 invisible true)) (remove_black_b (#(lambda (grow (grid_to_block $0))) $0 1))) (negate_boolean true))),trimmed,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (remove_black_b (#(lambda (wrap_block $0 invisible true)) (remove_black_b (#(lambda (grow (grid_to_block $0))) $0 1)))) false)),trimmed,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (#(lambda (grow (grid_to_block $0))) $0 1)) black true) false)),trimmed,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
46f33fce.json,(lambda (to_min_grid (wrap_block (remove_black_b (#(lambda (grow (grid_to_block $0))) $0 1)) black true) (negate_boolean true))),trimmed,generation,entry,False,fill the same color by 4 by 4 grid size,for each color square you change them to a 4 by 4 block of that color you will remove black square s in between them so that when you have the 4 by 4 color s the color s will be touching the color s should also start by touching the outside of the grid,for each single square 15 more square s will appear around the original to form a 4 by 4 square shape of the same color,keep the square s in there same location based on the lower left corner double there size keep same color,,
9ecd008a.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) false)),trimmed,4,0,False,fill the black spot s with the exact same pattern that need to be filled in the original grid,finish the pattern that would be in the black square section,,,,
9ecd008a.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,5,1,False,fill the black spot s with the exact same pattern that need to be filled in the original grid,finish the pattern that would be in the black square section,,,,
9ecd008a.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) true)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,5,2,False,fill the black spot s with the exact same pattern that need to be filled in the original grid,finish the pattern that would be in the black square section,,,,
9ecd008a.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) false)),trimmed,5,3,False,fill the black spot s with the exact same pattern that need to be filled in the original grid,finish the pattern that would be in the black square section,,,,
9ecd008a.json,(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true)),trimmed,5,4,False,fill the black spot s with the exact same pattern that need to be filled in the original grid,finish the pattern that would be in the black square section,,,,
4347f46a.json,(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 false false) (lambda (filter_block_tiles $0 (lambda (is_exterior $0 false))))) false true)),,,,True,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 false))) false)),rich,0,0,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 true))) false)),rich,0,1,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (lambda (is_exterior $0 true))) false)),rich,0,2,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) (lambda (is_exterior $0 true))) false)),rich,0,3,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) false) false)) (lambda (is_exterior $0 true))) false)),rich,0,4,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) true) true)) (lambda (is_exterior $0 true))) false)),rich,0,5,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) false) false)) (lambda (is_exterior $0 true))) false)),rich,0,6,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) true) true)) (lambda (is_exterior $0 true))) false)),rich,0,7,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (reflect (reflect (grid_to_block $0) true) false) true) false)) (lambda (is_exterior $0 true))) false)),rich,0,8,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (reflect (reflect (grid_to_block $0) true) true) false) false)) (lambda (is_exterior $0 true))) false)),rich,0,9,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (remove_black_b (grid_to_block $0))) (lambda (is_exterior $0 true))) false)),rich,1,2,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (remove_black_b (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 true)))) false)),rich,1,3,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (remove_black_b (grid_to_block $0))) (lambda (is_exterior $0 false))) false)),rich,1,4,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (merge_blocks (find_same_color_blocks $0 true true) true) (lambda (is_exterior $0 true))) false)),rich,1,5,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 (is_exterior $0 true)))) false)),rich,1,6,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 (is_interior $0 true)))) false)),rich,1,7,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (negate_boolean (is_interior $0 true)))) false)),rich,1,8,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (merge_blocks (find_blocks_by_inferred_b $0 false false) false) (lambda (is_exterior $0 true))) false)),rich,1,9,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_exterior $0 false))) false)),rich,2,0,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_exterior $0 true))) false)),rich,2,1,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_exterior $0 (is_exterior $0 true)))) false)),rich,2,2,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_exterior $0 (is_interior $0 true)))) false)),rich,2,3,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) (lambda (is_exterior $0 false))) false)),rich,2,4,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) (lambda (is_exterior $0 true))) false)),rich,2,5,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (remove_black_b (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_exterior $0 true)))) false)),rich,2,6,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (negate_boolean (is_interior $0 true)))) false)),rich,2,7,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (#(lambda (remove_black_b (grid_to_block $0))) $0))),rich,3,0,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false))),rich,3,1,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true))),rich,3,2,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)))),rich,3,3,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (merge_blocks (find_same_color_blocks $0 false false) false))),rich,3,4,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (merge_blocks (find_same_color_blocks $0 false false) true))),rich,3,5,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (merge_blocks (find_same_color_blocks $0 false true) false))),rich,3,6,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (merge_blocks (find_same_color_blocks $0 true false) false))),rich,3,7,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue))),rich,3,8,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) black (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,3,9,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 false))) (negate_boolean true))),trimmed,1,2,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 true))) (negate_boolean true))),trimmed,1,3,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (lambda (is_exterior $0 false))) false)),trimmed,1,4,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) (lambda (is_exterior $0 false))) false)),trimmed,1,6,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) false) false)) (lambda (is_exterior $0 false))) false)),trimmed,1,8,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) true) true)) (lambda (is_exterior $0 false))) false)),trimmed,1,9,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (#(lambda (remove_black_b (grid_to_block $0))) $0))),trimmed,generation,entry,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (remove_black_b (reflect (reflect (grid_to_block $0) false) false)))),trimmed,generation,entry,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_exterior $0 false))) (negate_boolean true))),trimmed,generation,entry,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
4347f46a.json,(lambda (to_original_grid_overlay (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_exterior $0 true))) (negate_boolean true))),trimmed,generation,entry,False,make black square s in the square,remove the center of the block s with black and have a single block wide line for each square,replace all colored block s inside the rectangular shape s with black so there is only a colored outline of the shape s,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color $0 blue) teal))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color $0 teal) blue))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (grid_to_block $1) (nth_primary_color $0 0)))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (filter_block_tiles $0 (lambda (has_color (tile_to_block $0) red))))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color (remove_color $0 blue) blue) teal))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color (remove_color $0 blue) teal) blue))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color (remove_color $0 blue) teal) teal))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color (remove_color $0 blue) teal) yellow))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color (remove_color $0 blue) yellow) teal))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
e50d258f.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda (get_num_tiles (remove_color (remove_color (remove_color $0 teal) blue) blue))) $0)),rich,generation,entry,False,copy the rectangular shape with the most red square s exactly,create the pattern with the most red square s inside,,,,
ded97339.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles (extend_until_touches_block $1 $0 false))) false) false))) true true)),rich,2,0,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (extend_until_touches_block $1 $0 false))) false)) $0)),rich,3,0,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (extend_until_touches_block $1 $0 false))) true)) $0)),rich,3,1,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (find_same_color_blocks $1 false false) (lambda (extend_until_touches_block $1 $0 false))) false)) $0)),rich,3,2,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (find_same_color_blocks $1 false false) (lambda (extend_until_touches_block $1 $0 false))) true)) $0)),rich,3,3,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (find_same_color_blocks $1 false true) (lambda (extend_until_touches_block $1 $0 false))) false)) $0)),rich,3,4,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (find_same_color_blocks $1 true false) (lambda (extend_until_touches_block $1 $0 false))) false)) $0)),rich,3,5,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) (lambda (extend_until_touches_block $1 $0 false))) false)) $0)),rich,3,6,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (merge_blocks (map_blocks (find_blocks_by_inferred_b $1 true false) (lambda (extend_until_touches_block $1 $0 false))) false)) $0)),rich,3,7,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $1) (lambda (get_num_tiles (extend_until_touches_block $1 $0 false))) false) false)) $0)),rich,3,8,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
ded97339.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (first_of_sorted_object_list (find_same_color_blocks $1 true true) (lambda (get_num_tiles (extend_until_touches_block $1 $0 false))) false) false)) $0)),rich,3,9,False,connect the magenta boxe s except 1 magenta box look like l shape 2 line shape,connect the magenta boxe s that are directly vertical and horizontal to each other,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (grid_to_block $0)) false)),rich,0,0,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (grid_to_block $0)) true)),rich,0,1,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (grid_to_block $0)) (negate_boolean false))),rich,0,2,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (grid_to_block $0)) (negate_boolean true))),rich,0,3,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_color (grid_to_block $0) black) false)),rich,0,4,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_color (grid_to_block $0) black) true)),rich,0,5,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (box_block (remove_black_b (grid_to_block $0))) false)),rich,0,6,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (box_block (remove_black_b (grid_to_block $0))) true)),rich,0,7,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (box_block (grid_to_block $0))) false)),rich,0,8,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (box_block (grid_to_block $0))) true)),rich,0,9,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (remove_black_b (grid_to_block $0))) true)),rich,1,2,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (remove_black_b (grid_to_block $0))) false)),rich,1,3,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (blocks_to_min_grid (find_same_color_blocks $0 true true) true true)),rich,1,4,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (blocks_to_min_grid (find_same_color_blocks $0 false true) true true)),rich,1,5,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (blocks_to_min_grid (find_same_color_blocks $0 true false) true true)),rich,1,6,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (blocks_to_min_grid (find_same_color_blocks $0 true true) false true)),rich,1,7,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (blocks_to_min_grid (find_same_color_blocks $0 true true) true false)),rich,1,8,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (blocks_to_min_grid (find_same_color_blocks $0 true false) false true)),rich,1,9,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (#(lambda (remove_black_b (grid_to_block $0))) $0) false)),rich,2,0,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (#(lambda (remove_black_b (grid_to_block $0))) $0) true)),rich,2,1,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) false)),rich,2,2,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) true)),rich,2,3,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 0) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 3) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 1) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 2) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 4) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 5) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 6) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 7) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 8) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 false false) $1 false) true))) (lambda 9) $0)),rich,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (grid_to_block $0)) (is_tile (grid_to_block $0)))),trimmed,0,8,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (remove_black_b (grid_to_block $0)) (touches_any_boundary (grid_to_block $0)))),trimmed,0,9,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (remove_black_b (grid_to_block $0))) $0))),trimmed,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (to_min_grid (#(lambda (remove_black_b (grid_to_block $0))) $0) (negate_boolean false))),trimmed,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
1cf80156.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_color (grid_to_block $0) black))),trimmed,generation,entry,False,you have to you need to make sure the colored image is exactly,you just need to make sure the colored image is exactly top bottom left right in the new grid no color change,,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red false false) false) blue true)) $0)),rich,3,0,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red true false) false) blue true)) $0)),rich,3,1,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red false false) true) blue true)) $0)),rich,3,2,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red false true) false) blue true)) $0)),rich,3,3,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red false true) true) blue true)) $0)),rich,3,4,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red true false) true) blue true)) $0)),rich,3,5,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red true true) false) blue true)) $0)),rich,3,6,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red true false) false) blue (is_exterior $0 false))) $0)),rich,3,7,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red (is_exterior $0 false) false) false) blue true)) $0)),rich,3,8,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
dc1df850.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (wrap_block (merge_blocks (find_blocks_by_color $1 red true (is_interior $0 true)) false) blue true)) $0)),rich,3,9,False,draw a blue border around each red square so it will look like a 3 by 3 blue square with a red square in the center but if the red square is in the corner just fill in 3 blue block s around it,draw a blue border around the red pixel s fill in each pixel around the red pixel with blue if the red pixel is near the border of the grid fill in the pixel s around it against the border,surround only the red square s with a blue border that is one square wide,,,
496994bd.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (reflect (grid_to_block $0) false) true)) true)),rich,1,3,False,copy the input grid and then mirror the colored line s on the other end of the grid,mirror the top pattern below,,,,
496994bd.json,(lambda (to_original_grid_overlay (reflect (remove_black_b (reflect (grid_to_block $0) true)) false) true)),rich,1,4,False,copy the input grid and then mirror the colored line s on the other end of the grid,mirror the top pattern below,,,,
496994bd.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) true)),rich,1,5,False,copy the input grid and then mirror the colored line s on the other end of the grid,mirror the top pattern below,,,,
f25fbde4.json,(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 true false) true) 1) false)),,,,True,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 1) (negate_boolean true))),rich,0,2,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (remove_color (grid_to_block $0) black) 1) false)),rich,0,3,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_black_b (grow (grid_to_block $0) 1)) (negate_boolean true))),rich,0,4,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_color (grow (grid_to_block $0) 1) black) false)),rich,0,5,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (box_block (remove_black_b (grid_to_block $0))) 1) true)),rich,0,6,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (remove_black_b (box_block (grid_to_block $0))) 1) false)),rich,0,7,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 1) (is_tile (grid_to_block $0)))),rich,0,8,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (remove_black_b (remove_black_b (grid_to_block $0))) 1) false)),rich,0,9,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_black_b (grow (remove_black_b (grid_to_block $0)) 1)) false)),rich,1,3,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_black_b (remove_black_b (grow (grid_to_block $0) 1))) false)),rich,1,4,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (singleton_block (find_same_color_blocks $0 true true)) 1) true)),rich,1,5,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 true true) true) 1) true)),rich,1,6,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (singleton_block (find_same_color_blocks $0 true true)) 1) false)),rich,1,7,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 false true) true) 1) true)),rich,1,8,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 true true) true) 1) false)),rich,1,9,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)) 1) false)),rich,2,1,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_black_b (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1)) false)),rich,2,2,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_color (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) blue) false)),rich,3,9,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (singleton_block (find_blocks_by_inferred_b $0 true false)) 1) false)),rich,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_color (remove_black_b (grow (grid_to_block $0) 1)) blue) false)),rich,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_color (remove_black_b (grow (grid_to_block $0) 1)) teal) false)),rich,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_black_b (grow (replace_color (grid_to_block $0) pink grey) 1)) false)),rich,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_black_b (grow (replace_color (grid_to_block $0) orange grey) 1)) false)),rich,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (box_block (remove_black_b (grid_to_block $0))) 1) false)),trimmed,0,6,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (#(lambda (to_min_grid (grow $0 1) false)) (#(lambda (remove_black_b (grid_to_block $0))) $0))),trimmed,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (#(lambda (to_min_grid (grow $0 1) false)) (remove_color (grid_to_block $0) black))),trimmed,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) (negate_boolean true))),trimmed,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_black_b (#(lambda (grow (grid_to_block $0))) $0 1)) false)),trimmed,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
f25fbde4.json,(lambda (to_min_grid (remove_color (#(lambda (grow (grid_to_block $0))) $0 1) black) false)),trimmed,generation,entry,False,copy the colored shape but make it twice the size as the input shape,create a 2 time size yellow pattern,create the input shape again just twice the size in the bigger grid,double pattern and fit the re sulting pattern to scale if it s 1 by 5 the re sult should be 2 by 10,,
b1948b0a.json,(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) false)),rich,0,0,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) true)),rich,0,1,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) false)),rich,0,2,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) true)),rich,0,3,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) (negate_boolean false))),rich,0,4,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) (negate_boolean true))),rich,0,5,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) (negate_boolean false))),rich,0,6,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) (negate_boolean true))),rich,0,7,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) pink red)) false)),rich,0,8,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) pink red)) true)),rich,0,9,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (remove_black_b (replace_color (grid_to_block $0) pink red)) true)),rich,1,4,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (remove_black_b (grid_to_block $0)) pink red) true)),rich,1,5,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (remove_black_b (replace_color (grid_to_block $0) pink red)) false)),rich,1,6,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (remove_black_b (grid_to_block $0)) pink red) false)),rich,1,7,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (remove_black_b (replace_color (grid_to_block $0) pink red)) true)),rich,1,8,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (replace_color (remove_black_b (grid_to_block $0)) pink red) true)),rich,1,9,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) pink red) false)),rich,2,0,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) pink red) true)),rich,2,2,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) pink red) true)),rich,2,5,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_original_grid_overlay (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) pink red) false)),rich,3,4,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (fill_color (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) orange) red) true)),rich,3,8,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (fill_color (remove_color (grid_to_block $0) orange) red) true)),rich,3,9,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (to_min_grid (replace_color (box_block (grid_to_block $0)) pink red) false)),rich,generation,entry,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $0) pink red))),trimmed,generation,entry,False,replace all the purple square s with red,turn the not orange color into light red,,,,
b1948b0a.json,(lambda (#(lambda (lambda (lambda (#(lambda (to_min_grid $0 true)) (replace_color (grid_to_block $2) $0 $1))))) $0 red pink)),trimmed,generation,entry,False,replace all the purple square s with red,turn the not orange color into light red,,,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1) blue) $0)) $0)),rich,3,0,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1) (get_tile_color $0)) $0)) $0)),rich,3,1,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (center_block_on_tile (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1) blue) $0) $0)) $0)),rich,3,2,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1) blue) blue) $0)) $0)),rich,3,3,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (center_block_on_tile (remove_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1) blue) $0) blue) $0)) $0)),rich,3,6,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $2))) false) grey) $0)) $0)),rich,3,7,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles (remove_color $0 grey))) false) grey) $0)) $0)),rich,3,8,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (first_of_sorted_object_list (find_blocks_by_inferred_b $1 true false) (lambda (get_num_tiles (remove_color $0 yellow))) false) grey) $0)) $0)),rich,3,9,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
363442ee.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (center_block_on_tile (remove_color (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $1) grey) blue) $0)) $0)),rich,4,2,False,copy colored box pattern on left onto each blue square,copy the pattern on the left and recreate the same pattern over each blue square on the right side such that the center of the pattern is where the blue square wa s,copy the pattern on the left of the grey bar and paste it so that it is directly over each blue square such that the center square of the pattern is located exactly where the blue square wa s,use the blue square as the middle square and recreate the same pattern replacing the blue square with the same color in the middle as the pattern,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_inferred_b $0 true false) true) grey) true)),rich,1,0,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) true) grey) true)),rich,1,1,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_inferred_b $0 true false) false) grey) true)),rich,1,2,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) grey) true)),rich,1,3,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) grey) (lambda true)) true)),rich,1,4,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) grey) (negate_boolean false))),rich,1,5,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) blue) grey) true)),rich,1,6,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) teal) grey) true)),rich,1,7,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) grey) grey) true)),rich,1,8,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_blocks_by_inferred_b $0 true false) false) grey) (lambda (is_exterior $0 true))) true)),rich,1,9,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (fill_color (fill_color (merge_blocks (find_blocks_by_inferred_b $0 true false) true) blue) grey) true)),rich,2,7,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_blocks_by_inferred_b $0 true false) false) grey) (lambda true)) true)),rich,3,5,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (find_blocks_by_inferred_b $0 false false) false))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (find_blocks_by_inferred_b $0 false false) true))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (find_blocks_by_inferred_b $0 true false) false))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (find_blocks_by_inferred_b $0 true false) true))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (remove_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) true))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) false))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (negate_boolean true)))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (negate_boolean false)))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9565186b.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) grey (remove_black_b (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) true)))),trimmed,generation,entry,False,keep the color with the most square s and everything else should be gray,replace minority color s with gray,,,,
9172f3a0.json,(lambda (to_min_grid (grow (grid_to_block $0) 2) false)),rich,0,0,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (grid_to_block $0) 2) true)),rich,0,1,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (grid_to_block $0) 2) (negate_boolean false))),rich,0,2,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (grid_to_block $0) 2) (negate_boolean true))),rich,0,3,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (box_block (grow (grid_to_block $0) 2)) false)),rich,0,4,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (box_block (grow (grid_to_block $0) 2)) true)),rich,0,5,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 2) false)),rich,0,6,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 2) true)),rich,0,7,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (grid_to_block $0) 2) (is_tile (grid_to_block $0)))),rich,0,8,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (grid_to_block $0) 2) (touches_any_boundary (grid_to_block $0)))),rich,0,9,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 2) true)),rich,1,2,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (remove_black_b (grow (grid_to_block $0) 2)) true)),rich,1,3,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 2) false)),rich,1,4,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (remove_black_b (grow (grid_to_block $0) 2)) false)),rich,1,5,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (filter_block_tiles (grid_to_block $0) (lambda true)) 2) true)),rich,1,6,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (filter_block_tiles (grow (grid_to_block $0) 2) (lambda true)) true)),rich,1,7,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (filter_block_tiles (grid_to_block $0) (lambda true)) 2) false)),rich,1,9,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 2) false)),rich,2,0,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 2) true)),rich,2,2,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (filter_block_tiles (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 2) (lambda true)) false)),rich,3,4,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)) 2) false)),rich,3,5,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 false false) false) 2) false)),rich,3,6,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (filter_block_tiles (grow (#(lambda (remove_black_b (grid_to_block $0))) $0) 2) (lambda true)) true)),rich,3,7,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)) 2) true)),rich,3,8,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (grow (merge_blocks (find_same_color_blocks $0 false false) true) 2) false)),rich,3,9,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (#(lambda (to_min_grid $0 true)) (grow (grid_to_block $0) 2))),trimmed,generation,entry,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (grow (grid_to_block $0))) $0 2))),trimmed,generation,entry,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (#(lambda (grow (grid_to_block $0))) $0 2) false)),trimmed,generation,entry,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (#(lambda (grow (grid_to_block $0))) $0 2) (negate_boolean false))),trimmed,generation,entry,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (#(lambda (grow (grid_to_block $0))) $0 2) (negate_boolean true))),trimmed,generation,entry,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
9172f3a0.json,(lambda (to_min_grid (box_block (#(lambda (grow (grid_to_block $0))) $0 2)) false)),trimmed,generation,entry,False,copy the same color s in the same position for every single grid in the input it should be changed to a 3 by 3 of color each in the output,each tile in the input grid is a 3 by 3 grid pattern on the output keep same color and pattern but increase to a 9 by 9 grid,make a 9 by 9 grid that will have 3 by 3 grid s filled with the color s from each box in the input grid,make the output 9 by 9 then fill in the color pattern so that 9 square s represent one on the input side,use the same color s in the same position,
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (remove_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 1)))) false)),rich,1,0,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0))) false)),rich,2,0,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0))) true)),rich,2,1,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (reflect (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) false))) false)),rich,2,2,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (map_tiles (find_tiles_by_black_b $0) (lambda (grow (grid_to_block $1) (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1))))))),rich,2,3,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (filter_block_tiles (grow (grid_to_block $0) (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0))) (lambda true)) false)),rich,2,4,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (filter_block_tiles (grid_to_block $0) (lambda true)) (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0))) false)),rich,2,5,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) (lambda true)))) false)),rich,2,6,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (reflect (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) false))) true)),rich,2,7,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (reflect (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) true))) false)),rich,2,8,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (map_tiles (find_tiles_by_black_b $0) (lambda (grow (grid_to_block $1) (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $1))))))),rich,2,9,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (filter_block_tiles (grid_to_block $0) (lambda true)) (get_num_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0))) true)),rich,3,8,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) (lambda true)))) true)),rich,3,9,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (remove_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 2)))) false)),rich,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) false)),trimmed,4,0,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_black_b (move (reflect (grid_to_block $0) false) 1 south true)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))))) true)),trimmed,5,0,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) true)),trimmed,5,2,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (fill_color (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) blue) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) true)),trimmed,5,3,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (fill_color (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) true)),trimmed,5,4,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (to_min_grid $0 true)) (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $0)) (lambda (tile_overlaps_block $0 (box_block (#(lambda (remove_black_b (grid_to_block $0))) $1))))))))),trimmed,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (to_min_grid $0 true)) (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) teal) (lambda (tile_overlaps_block $0 (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $1))))))))),trimmed,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (grow (grid_to_block $0))) $0 (get_num_tiles (filter_block_tiles (#(lambda (remove_color (box_block $0) teal)) (#(lambda (remove_black_b (grid_to_block $0))) $0)) (lambda (tile_overlaps_block $0 (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $1))))))))),trimmed,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (grow (grid_to_block $0))) $0 (get_num_tiles (filter_block_tiles (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $0)) (lambda (tile_overlaps_block $0 (box_block (#(lambda (remove_black_b (grid_to_block $0))) $1))))))))),trimmed,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (grow (grid_to_block $0))) $0 (get_num_tiles (filter_block_tiles (#(lambda (remove_color (box_block $0) teal)) (#(lambda (remove_black_b (move (grid_to_block $0) 3 east true))) $0)) (lambda (tile_overlaps_block $0 (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $1))))))))),trimmed,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (grow (grid_to_block $0))) $0 (get_num_tiles (filter_block_tiles (#(lambda (remove_color (box_block $0) teal)) (merge_blocks (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) true)) (lambda (tile_overlaps_block $0 (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $1))))))))),trimmed,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
ac0a08a4.json,(lambda (#(lambda (to_min_grid $0 true)) (#(lambda (grow (grid_to_block $0))) $0 (get_num_tiles (filter_block_tiles (#(lambda (remove_color (box_block $0) teal)) (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue)) (lambda (tile_overlaps_block $0 (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $1))))))))),trimmed,generation,entry,False,fill each area of the output grid with the same color of the input grid,follow the instruction,make new fill square big by the number of original fill,make the new grid size in black then move the grid color s to the new grid in the same relative spot s the colored area s will be the number of colored square s squared,output grid successfully solved,zoom out and give each block it s on space
5117e062.json,(lambda (to_min_grid (fill_color (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true false) (lambda (has_color $0 teal))) true) (nth_primary_color (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true false) (lambda (has_color $0 teal))) true) 0)) false)),,,,True,copy the shape with the light blue dot but replace the light blue dot with the shape color,replace the light blue color with the color that surround it,,,,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 true))) false)),rich,0,0,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_snakewise (grid_to_block $0) (make_colorpair teal teal)) (lambda (is_exterior $0 true))) false)),rich,0,1,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_snakewise (move (grid_to_block $0) 1 south false) (make_colorpair teal teal)) (lambda (is_exterior $0 true))) false)),rich,0,2,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (fill_color (filter_block_tiles (grid_to_block $0) (lambda (is_exterior $0 true))) teal) true)),rich,1,0,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 true))) true)),rich,1,1,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (fill_color (filter_block_tiles (grid_to_block $0) (lambda (is_exterior $0 false))) teal) true)),rich,1,2,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (fill_color (filter_block_tiles (grid_to_block $0) (lambda (is_exterior $0 true))) teal) false)),rich,1,3,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) true)),rich,1,4,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) false)),rich,1,6,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (fill_color (filter_block_tiles (grid_to_block $0) (lambda (is_exterior $0 true))) teal) true)),rich,1,7,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 true))) true)),rich,1,8,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 true))) false)),rich,1,9,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (fill_color (filter_block_tiles (grid_to_block $0) (lambda (is_exterior $0 false))) teal) false)),rich,3,0,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) false)),rich,3,8,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) true)),rich,3,9,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (fill_color (grid_to_block $0) teal)) (lambda (is_exterior $0 false))) false)),trimmed,1,4,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (fill_color (grid_to_block $0) teal)) (lambda (is_exterior $0 false))) true)),trimmed,1,5,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 8)) (lambda (is_exterior $0 false))) false)),trimmed,1,6,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 8)) (lambda (is_exterior $0 false))) true)),trimmed,1,7,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 8)) (lambda (is_exterior $0 false))) false)),trimmed,1,8,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 8)) (lambda (is_exterior $0 false))) true)),trimmed,1,9,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (fill_color (grid_to_block $0) teal))),trimmed,generation,entry,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (remove_black_b (fill_color (grid_to_block $0) teal)))),trimmed,generation,entry,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
6f8cd79b.json,(lambda (#(lambda (to_min_grid $0 true)) (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))))),trimmed,generation,entry,False,create a light blue border around the grid so any square s that are touching the edge s are filled in with light blue the rest of the square s inside the light blue border remain black,create a light blue border around the grid so any tile s that are touching the edge s are filled in with light blue the rest of the tile s remain black,make a blue shape around the outside of the entire grid the center square s should be black but the blue shape should go all the way around the perimeter of the grid,use light blue color to draw the border of the grid with only one cell as width,you should create light blue border around the black grid,
c909285e.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false))) (lambda (get_num_tiles $0)) false) true)),rich,1,0,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (map_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda $0)))),rich,2,1,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (filter_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda true)))),rich,2,2,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (negate_boolean true) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,2,3,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (to_min_grid (first_of_sorted_object_list (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) (lambda (get_num_tiles $0)) false) true)),rich,2,4,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,2,5,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_tile (grid_to_block $0)) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,2,6,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,2,7,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_rectangle (#(lambda (remove_black_b (grid_to_block $0))) $0) false) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,2,8,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_symmetrical (grid_to_block $0) false) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,2,9,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) true) (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0))),rich,3,7,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles (remove_color (grid_to_block $1) (nth_primary_color $0 0)))) false) true)),rich,generation,entry,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles (remove_color (grid_to_block $1) (nth_primary_color $0 0)))) (has_color (grid_to_block $0) orange)) true)),rich,generation,entry,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles (remove_color (grid_to_block $1) (nth_primary_color $0 0)))) (has_color (grid_to_block $0) maroon)) true)),rich,generation,entry,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 false (lambda (get_num_tiles (remove_color (grid_to_block $1) (nth_primary_color $0 0)))) true true)),rich,generation,entry,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (has_color (grid_to_block $0) orange) (lambda (get_num_tiles (remove_color (grid_to_block $1) (nth_primary_color $0 0)))) true true)),rich,generation,entry,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
c909285e.json,(lambda (#(lambda (lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $3 $0 false) $1 $2)))))) $0 (has_color (grid_to_block $0) maroon) (lambda (get_num_tiles (remove_color (grid_to_block $1) (nth_primary_color $0 0)))) true true)),rich,generation,entry,False,copy the entire small square grid without change in the pattern or the color s along with the border,count the number of square s in the colored border and resize the output to that number then you color all the block s to match the input,,,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue) true)),rich,0,0,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) true)),rich,0,1,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) blue))) true false)),rich,0,2,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) blue))) true true)),rich,0,3,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block (get_block_center (tile_to_block $0))) blue))) true true)),rich,0,4,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (fill_color (tile_to_block $0) blue) blue))) true false)),rich,0,5,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (fill_color (tile_to_block $0) blue) blue))) true true)),rich,0,6,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) (nth_primary_color (grid_to_block $1) 2)))) true false)),rich,0,7,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) (nth_primary_color (grid_to_block $1) 2)))) true true)),rich,0,8,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (fill_color (tile_to_block $0) (nth_primary_color (grid_to_block $1) 0)) blue))) true false)),rich,0,9,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) red blue) true)),rich,1,2,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda true))) true) blue) true)),rich,1,3,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (remove_black_b (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true)) blue) true)),rich,1,4,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (replace_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) red blue) true)),rich,1,5,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda true))) false) blue) true)),rich,1,6,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (remove_black_b (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false)) blue) true)),rich,1,7,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (tile_to_block $0) blue)) $0)),rich,3,0,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (extend_until_touches_block $0 (grid_to_block $1) false) blue)) $0)),rich,3,1,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) blue)) $0)),rich,3,2,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (extend_until_touches_block $0 (grid_to_block $1) true) blue)) $0)),rich,3,3,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) blue)) $0)),rich,3,4,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (replace_color (tile_to_block $0) red blue)) $0)),rich,3,5,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (extend_towards_until $0 east (lambda true)) blue)) $0)),rich,3,6,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (move_towards_until $0 east (lambda true)) blue)) $0)),rich,3,7,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (fill_color (extend_towards_until $0 south (lambda true)) blue)) $0)),rich,3,9,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda (fill_color $0 blue))) true false)),trimmed,0,4,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (blocks_to_original_grid (map_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda (fill_color $0 blue))) true true)),trimmed,0,5,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) (negate_boolean false)) blue) true)),trimmed,0,8,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) (negate_boolean true)) blue) true)),trimmed,0,9,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false))),trimmed,generation,entry,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true))),trimmed,generation,entry,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
aedd82e4.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (tiles_to_blocks (find_tiles_by_black_b $0)))),trimmed,generation,entry,False,color in the colored square s with blue that stand by themselve s or have no side connect with other square s,color shape s made of a single square blue,color smaller shape s dark blue,copy the input grid any shape s which only contain one single square should be colored blue,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south false) false)),rich,0,0,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (center_block_on_tile (grid_to_block $0) (block_to_tile (move_towards_until_edge (get_block_center (grid_to_block $0)) south))) false)),rich,0,1,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (center_block_on_tile (grid_to_block $0) (get_block_center (move_towards_until_edge (get_block_center (grid_to_block $0)) south))) false)),rich,0,2,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south (negate_boolean true)) false)),rich,0,3,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south false) (negate_boolean true))),rich,0,4,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (remove_black_b (grid_to_block $0)) 1 south false) false)),rich,0,5,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (remove_black_b (move (grid_to_block $0) 1 south false)) false)),rich,0,6,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (remove_color (grid_to_block $0) yellow) 1 south false) false)),rich,0,7,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (duplicate (grid_to_block $0) east 1) 1 south false) false)),rich,0,8,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (replace_color (grid_to_block $0) orange red) 1 south false) false)),rich,0,9,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (filter_block_tiles (move (grid_to_block $0) 1 south false) (lambda true)) false)),rich,1,5,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (filter_block_tiles (grid_to_block $0) (lambda true)) 1 south false) false)),rich,1,6,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (box_block (move (grid_to_block $0) 1 south false)) false)),rich,1,7,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (box_block (grid_to_block $0)) 1 south false) false)),rich,1,8,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (move (grid_to_block $0) 1 south false))) false)),rich,1,9,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (#(lambda (remove_black_b (grid_to_block $0))) $0))),rich,2,0,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (grid_to_block $0))),rich,2,1,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (filter_block_tiles (grid_to_block $0) (lambda true)))),rich,2,2,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (box_block (grid_to_block $0)))),rich,2,3,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)))),rich,3,2,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (merge_blocks (find_same_color_blocks $0 false false) false))),rich,3,3,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (merge_blocks (find_same_color_blocks $0 false false) true))),rich,3,4,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (merge_blocks (find_same_color_blocks $0 false true) false))),rich,3,5,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (merge_blocks (find_same_color_blocks $0 true false) false))),rich,3,6,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,3,8,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (merge_blocks (find_same_color_blocks $0 true false) true))),rich,3,9,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (replace_color (move (grid_to_block $0) 1 south false) pink grey) false)),rich,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (replace_color (move (grid_to_block $0) 1 south false) pink red) false)),rich,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (replace_color (move (grid_to_block $0) 1 south false) orange grey) false)),rich,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (replace_color (move (grid_to_block $0) 1 south false) orange red) false)),rich,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (duplicate (grid_to_block $0) north_east 3) 1 south false) false)),rich,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) true) 1 south false) false)),rich,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south (is_tile (grid_to_block $0))) false)),trimmed,0,5,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south false) (is_tile (grid_to_block $0)))),trimmed,0,6,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (remove_black_b (move (grid_to_block $0) 1 south (negate_boolean true))) false)),trimmed,1,9,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (#(lambda (move (grid_to_block $0) 1 south false)) $0) false)),trimmed,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (#(lambda (move (grid_to_block $0) 1 south false)) $0) (negate_boolean true))),trimmed,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
25ff71a9.json,(lambda (to_original_grid_overlay (box_block (#(lambda (move (grid_to_block $0) 1 south false)) $0)) false)),trimmed,generation,entry,False,drop 3 blue cell down one cell as a group,move all the blue color move down by one grid,,,,
6d0aefbc.json,(lambda (to_min_grid (move (reflect (remove_black_b (grid_to_block $0)) false) 3 east true) true)),rich,1,8,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (move (remove_black_b (reflect (grid_to_block $0) false)) 3 east true) true)),rich,1,9,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) east false)),rich,2,6,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (is_exterior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) false) east false)),rich,2,9,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 false east (is_interior (get_block_center (#(lambda (remove_black_b (grid_to_block $0))) $0)) false))),rich,3,6,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) false)),trimmed,1,0,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) true)),trimmed,1,1,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) false))) 3 east true)) false)),trimmed,1,2,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) false))) 3 east true)) true)),trimmed,1,3,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) false))) 3 east (negate_boolean false))) false)),trimmed,1,4,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) false))) 3 east (negate_boolean false))) true)),trimmed,1,5,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (remove_black_b (grid_to_block $0)) false))) 3 east true)) false)),trimmed,1,6,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (remove_black_b (grid_to_block $0)) false))) 3 east true)) true)),trimmed,1,7,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (reflect (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) false))) 3 east true)) false) false)),trimmed,1,8,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (reflect (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) false))) 3 east true)) false) true)),trimmed,1,9,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true))) true)),trimmed,2,3,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true))) false)),trimmed,generation,entry,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
6d0aefbc.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)))),trimmed,generation,entry,False,copy the grid and reflect it on the other half,copy the grid and reflect on the other half,copy the pattern and flip it to the other side,,,
32597951.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) green (#(lambda (remove_color (box_block $0) teal)) (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue)))),trimmed,generation,entry,False,change the dark blue boxe s to green boxe s where they cover part s of the rectangle created by the light blue boxe s once changed the rectangle shape should be clear with no dark blue boxe s within it s border s,replace the blue square s with green square s to complete a square of a rectangle with the light blue block s,,,,
32597951.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) green (#(lambda (remove_color (box_block $0) teal)) (remove_color (#(lambda (wrap_block (#(lambda (remove_black_b (grid_to_block $0))) $0) blue true)) $0) blue)))),trimmed,generation,entry,False,change the dark blue boxe s to green boxe s where they cover part s of the rectangle created by the light blue boxe s once changed the rectangle shape should be clear with no dark blue boxe s within it s border s,replace the blue square s with green square s to complete a square of a rectangle with the light blue block s,,,,
32597951.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) green (#(lambda (remove_color (box_block $0) teal)) (#(lambda (remove_color (box_block $0) teal)) (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue))))),trimmed,generation,entry,False,change the dark blue boxe s to green boxe s where they cover part s of the rectangle created by the light blue boxe s once changed the rectangle shape should be clear with no dark blue boxe s within it s border s,replace the blue square s with green square s to complete a square of a rectangle with the light blue block s,,,,
32597951.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) green (#(lambda (remove_color (box_block $0) teal)) (remove_color (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue) blue)))),trimmed,generation,entry,False,change the dark blue boxe s to green boxe s where they cover part s of the rectangle created by the light blue boxe s once changed the rectangle shape should be clear with no dark blue boxe s within it s border s,replace the blue square s with green square s to complete a square of a rectangle with the light blue block s,,,,
32597951.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) green (#(lambda (remove_color (box_block $0) teal)) (remove_color (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue) yellow)))),trimmed,generation,entry,False,change the dark blue boxe s to green boxe s where they cover part s of the rectangle created by the light blue boxe s once changed the rectangle shape should be clear with no dark blue boxe s within it s border s,replace the blue square s with green square s to complete a square of a rectangle with the light blue block s,,,,
d037b0a7.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until $0 south (lambda (touches_boundary (tile_to_block $0) south))))) false true)),,,,True,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) false false)),rich,0,0,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) false true)),rich,0,1,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) true false)),rich,0,2,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) true true)),rich,0,3,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 2) false)),rich,0,4,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 2) true)),rich,0,5,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 3) false)),rich,0,6,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 3) true)),rich,0,7,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 4) false)),rich,0,8,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 4) true)),rich,0,9,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) true south $0)),rich,1,0,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) false south $0)),rich,1,1,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (negate_boolean true) south $0)),rich,1,2,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (negate_boolean false) south $0)),rich,1,3,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_tile (grid_to_block $0)) south $0)),rich,1,4,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (touches_any_boundary (grid_to_block $0)) south $0)),rich,1,5,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_exterior (get_block_center (grid_to_block $0)) true) south $0)),rich,1,6,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_exterior (get_block_center (grid_to_block $0)) false) south $0)),rich,1,7,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_interior (get_block_center (grid_to_block $0)) true) south $0)),rich,1,8,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_symmetrical (grid_to_block $0) true) south $0)),rich,1,9,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_towards_until_edge $0 south)) $0)),rich,3,2,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) south $0)),rich,3,5,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0)) south $0)),rich,3,6,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false) south $0)),rich,3,7,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_interior (get_block_center (grid_to_block $0)) false) south $0)),rich,3,8,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 $2))) true $2)))) (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) true) south $0)),rich,3,9,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (blocks_to_original_grid (map_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda (extend_towards_until_edge $0 south))) false false)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 5) false)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 6) false)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 7) false)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) false $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) true $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (negate_boolean false) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (negate_boolean true) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (touches_any_boundary (grid_to_block $0)) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (is_tile (grid_to_block $0)) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (is_rectangle (grid_to_block $0) false) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (is_symmetrical (grid_to_block $0) false) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (is_rectangle (grid_to_block $0) true) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (#(lambda (lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $1) (lambda (extend_towards_until_edge $0 $1))) $2 false)))) (is_symmetrical (grid_to_block $0) true) $0 south)),rich,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 5) true)),trimmed,0,7,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 6) true)),trimmed,0,9,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (#(lambda (remove_black_b (grid_to_block $0))) $0) south 2) false)),trimmed,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (#(lambda (remove_black_b (grid_to_block $0))) $0) south 3) false)),trimmed,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (#(lambda (remove_black_b (grid_to_block $0))) $0) south 4) false)),trimmed,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (#(lambda (remove_black_b (grid_to_block $0))) $0) south 2) true)),trimmed,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
d037b0a7.json,(lambda (to_original_grid_overlay (duplicate (#(lambda (remove_black_b (grid_to_block $0))) $0) south 3) true)),trimmed,generation,entry,False,fill in the black under any color with the same color,wherever you see a color other than black make square s below that color the same color down to the border,,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (negate_boolean (has_color (grid_to_block $0) blue))) false)),rich,1,0,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true)) true)),rich,1,1,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true)) false)),rich,1,2,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_rectangle (remove_color (grid_to_block $0) blue) false)) false)),rich,1,3,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (reflect (grid_to_block $0) true) blue)) true)) false)),rich,1,4,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (reflect (grid_to_block $0) false) blue)) true)) false)),rich,1,5,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (has_color (replace_color (grid_to_block $0) teal red) red)) false)),rich,1,6,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (has_color (remove_color (grid_to_block $0) blue) (nth_primary_color (grid_to_block $0) 1))) false)),rich,1,7,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (touches_boundary (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) north)) false)),rich,1,8,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (touches_boundary (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) north_east)) false)),rich,1,9,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true) (find_same_color_blocks $0 true false))),rich,2,0,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true) (find_blocks_by_inferred_b $0 true false))),rich,2,1,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_interior (get_block_center (remove_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) blue)) true) (find_same_color_blocks $0 true false))),rich,2,2,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_interior (get_block_center (remove_color (remove_color (grid_to_block $0) blue) blue)) true) (find_same_color_blocks $0 true false))),rich,2,3,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true)) true)),rich,2,7,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (is_interior (get_block_center (remove_color (wrap_block (grid_to_block $0) blue true) blue)) true) (find_same_color_blocks $0 true false))),rich,3,6,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_rectangle (remove_color (grid_to_block $0) blue) true)) false)),trimmed,4,1,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (to_min_grid (box_block (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true))) true)),trimmed,5,4,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_any_boundary (first_of_sorted_object_list (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (lambda (get_num_tiles (remove_color $0 yellow))) true))) (lambda (get_num_tiles (remove_color $0 blue))) true))),trimmed,generation,entry,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_black_b $0 true (has_color (grid_to_block $0) blue)))),trimmed,generation,entry,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_inferred_b $0 true (has_color (grid_to_block $0) blue)))),trimmed,generation,entry,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_same_color_blocks $0 true (has_color (grid_to_block $0) blue)))),trimmed,generation,entry,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_black_b $0 true (has_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue)))),trimmed,generation,entry,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_inferred_b $0 true (has_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue)))),trimmed,generation,entry,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
88a62173.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (#(lambda (lambda (find_blocks_by_inferred_b $1 true (has_color (grid_to_block $0) blue)))) $0 $0))),trimmed,generation,entry,False,replicate any of the 4 by 4 color pattern,replicate one of the colored shape s,replicate one of the pattern s in one of the corner s bottom right bottom left top right or top left,,,
6150a2bd.json,(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) false) true) false)),rich,0,8,False,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture it you can create the output grid,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture that you can create the output grid,rotate the whole grid two time s imagine that the entire grid ha s been flipped vertically and horizontally,,,
6150a2bd.json,(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) true) false) false)),rich,0,9,False,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture it you can create the output grid,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture that you can create the output grid,rotate the whole grid two time s imagine that the entire grid ha s been flipped vertically and horizontally,,,
6150a2bd.json,(lambda (to_original_grid_overlay (reflect (remove_black_b (reflect (grid_to_block $0) true)) false) false)),rich,1,8,False,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture it you can create the output grid,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture that you can create the output grid,rotate the whole grid two time s imagine that the entire grid ha s been flipped vertically and horizontally,,,
6150a2bd.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (reflect (grid_to_block $0) false) true)) false)),rich,1,9,False,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture it you can create the output grid,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture that you can create the output grid,rotate the whole grid two time s imagine that the entire grid ha s been flipped vertically and horizontally,,,
6150a2bd.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (is_interior (get_block_center (grid_to_block $0)) false))),rich,3,7,False,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture it you can create the output grid,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture that you can create the output grid,rotate the whole grid two time s imagine that the entire grid ha s been flipped vertically and horizontally,,,
6150a2bd.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) true))),rich,3,8,False,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture it you can create the output grid,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture that you can create the output grid,rotate the whole grid two time s imagine that the entire grid ha s been flipped vertically and horizontally,,,
6150a2bd.json,(lambda (#(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true))) $0 (touches_any_boundary (grid_to_block $0)))),rich,3,9,False,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture it you can create the output grid,imagine that the entire grid ha s been flipped both horizontally and vertically once you picture that you can create the output grid,rotate the whole grid two time s imagine that the entire grid ha s been flipped vertically and horizontally,,,
a5313dff.json,(lambda (blocks_to_original_grid (map_blocks (filter_blocks (find_blocks_by_color $0 black false false) (lambda (negate_boolean (touches_any_boundary $0)))) (lambda (fill_color $0 blue))) true true)),,,,True,changed the grid and the color,color the inside blue but if the border of shape goe s outside the grid leave inside black,,,,
a5313dff.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks (filter_blocks (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0) true false) (lambda (negate_boolean (touches_any_boundary $0)))) true))),trimmed,generation,entry,False,changed the grid and the color,color the inside blue but if the border of shape goe s outside the grid leave inside black,,,,
a5313dff.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (filter_blocks (#(lambda (lambda (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $1) true false))) $0 $0) (lambda (negate_boolean (touches_any_boundary $0)))))),trimmed,generation,entry,False,changed the grid and the color,color the inside blue but if the border of shape goe s outside the grid leave inside black,,,,
a5313dff.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (filter_blocks (#(lambda (lambda (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $1) true false))) $0 $0) (lambda (negate_boolean (touches_any_boundary (#(lambda (remove_color (box_block $0) teal)) $0))))))),trimmed,generation,entry,False,changed the grid and the color,color the inside blue but if the border of shape goe s outside the grid leave inside black,,,,
a5313dff.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (filter_blocks (filter_blocks (#(lambda (lambda (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $1) true false))) $0 $0) (lambda (is_symmetrical $0 false))) (lambda (negate_boolean (touches_any_boundary $0)))))),trimmed,generation,entry,False,changed the grid and the color,color the inside blue but if the border of shape goe s outside the grid leave inside black,,,,
a5313dff.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (filter_blocks (filter_blocks (#(lambda (lambda (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $1) true false))) $0 $0) (lambda (negate_boolean (touches_any_boundary $0)))) (lambda (is_symmetrical $0 false))))),trimmed,generation,entry,False,changed the grid and the color,color the inside blue but if the border of shape goe s outside the grid leave inside black,,,,
a5313dff.json,(lambda (#(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) blue (merge_blocks $0 true))) (filter_blocks (filter_blocks (#(lambda (lambda (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $1) true false))) $0 $0) (lambda (negate_boolean (touches_any_boundary $0)))) (lambda (negate_boolean (touches_any_boundary $0)))))),trimmed,generation,entry,False,changed the grid and the color,color the inside blue but if the border of shape goe s outside the grid leave inside black,,,,
d23f8c26.json,(lambda (to_min_grid (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) (nth_primary_color (grid_to_block $0) 0)) true)),rich,0,0,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false) (nth_primary_color (grid_to_block $1) 0)))) true false)),rich,0,1,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false) (nth_primary_color (grid_to_block $1) 0)))) true true)),rich,0,2,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) true) (nth_primary_color (grid_to_block $1) 0)))) true false)),rich,0,3,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) true) (nth_primary_color (grid_to_block $1) 0)))) true true)),rich,0,4,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_exterior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true false)),rich,0,5,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_exterior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true true)),rich,0,6,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_interior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true false)),rich,0,7,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_interior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true true)),rich,0,8,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true)) $0)),rich,1,0,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) true)) $0)),rich,1,1,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) false)) $0)),rich,1,2,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false)) $0)),rich,1,3,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (remove_black_b (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true))) $0)),rich,1,4,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (remove_black_b (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) true))) $0)),rich,1,5,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (remove_black_b (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) false))) $0)),rich,1,6,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (remove_black_b (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false))) $0)),rich,1,7,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) true)) $0)),rich,1,8,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) true) true)) $0)),rich,1,9,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) false) false)) $0)),rich,3,4,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false) false)) $0)),rich,3,5,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (filter_block_tiles (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) false) (lambda true))) $0)),rich,3,6,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (filter_block_tiles (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false) (lambda true))) $0)),rich,3,7,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_min_grid (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) false) black) true)),rich,3,8,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (#(lambda (lambda (to_min_grid (fill_color ($1 $0) (nth_primary_color (grid_to_block $0) 0)) true))) (lambda (reflect (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false) true)) $0)),rich,3,9,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_min_grid (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) black) true)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) black) true)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_min_grid (reflect (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) black) false) true)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_min_grid (box_block (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) black)) false)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_original_grid_overlay (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) (nth_primary_color (grid_to_block $0) 0)) true)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_min_grid (remove_color (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) black) blue) true)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_min_grid (fill_color (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) black) black) true)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
d23f8c26.json,(lambda (to_min_grid (box_block (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) (nth_primary_color (grid_to_block $0) 0))) false)),rich,generation,entry,False,keep the vertical middle line of square s the same and color the rest of the square s black,turn everything black but keep the middle vertical line of colored square s,,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 blue true false) (lambda (get_num_tiles $0)) false) true)),rich,1,0,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 blue true (negate_boolean true)) (lambda (get_num_tiles $0)) false) true)),rich,1,1,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 blue (negate_boolean false) false) (lambda (get_num_tiles $0)) false) true)),rich,1,2,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (box_block (first_of_sorted_object_list (find_blocks_by_color $0 blue true false) (lambda (get_num_tiles $0)) false)) false)),rich,1,3,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 blue true (is_tile (grid_to_block $0))) (lambda (get_num_tiles $0)) false) true)),rich,1,4,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_color $0 blue true false) (lambda (get_num_tiles $0)) false) yellow) true)),rich,1,5,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (filter_block_tiles (first_of_sorted_object_list (find_blocks_by_color $0 blue true false) (lambda (get_num_tiles $0)) false) (lambda (is_exterior $0 true))) true)),rich,1,6,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_blocks_by_color $0 blue true false) (lambda (get_num_tiles $0)) false) (nth_primary_color (grid_to_block $0) 1)) true)),rich,1,7,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 blue true (is_tile (grow (remove_black_b (grid_to_block $0)) 1))) (lambda (get_num_tiles $0)) false) true)),rich,1,8,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 blue true (is_symmetrical (duplicate (grid_to_block $0) east 1) false)) (lambda (get_num_tiles $0)) false) true)),rich,1,9,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_color $0 blue true false))),rich,2,0,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (map_blocks (find_blocks_by_color $0 blue true false) (lambda $0)))),rich,2,1,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (filter_blocks (find_blocks_by_color $0 blue true false) (lambda true)))),rich,2,2,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_color $0 blue (negate_boolean false) false))),rich,2,3,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (negate_boolean true) (find_blocks_by_color $0 blue true false))),rich,2,4,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_color $0 blue true (negate_boolean true)))),rich,2,5,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 1) true false))),rich,2,6,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_color $0 blue (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) false))),rich,2,7,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_color $0 blue (touches_any_boundary (grid_to_block $0)) false))),rich,2,9,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_blocks_by_color $0 blue (is_interior (get_block_center (grid_to_block $0)) false) false))),rich,3,9,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false false) (lambda (get_num_tiles (remove_color $0 blue))) true))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false false) (lambda (get_num_tiles (remove_color $0 blue))) true) false)),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false false) (lambda (get_num_tiles (remove_color $0 blue))) true)))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false false) (lambda (get_num_tiles (remove_color $0 blue))) true) pink red))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (first_of_sorted_object_list (find_blocks_by_inferred_b $0 false false) (lambda (get_num_tiles (remove_color $0 blue))) true) pink grey))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (lambda (get_num_tiles (remove_color $0 blue))) true))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (to_min_grid (first_of_sorted_object_list (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (lambda (get_num_tiles (remove_color $0 blue))) true) false)),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_black_b (first_of_sorted_object_list (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (lambda (get_num_tiles (remove_color $0 blue))) true)))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (first_of_sorted_object_list (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (lambda (get_num_tiles (remove_color $0 blue))) true) pink red))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (first_of_sorted_object_list (#(lambda (find_blocks_by_inferred_b $0 false false)) $0) (lambda (get_num_tiles (remove_color $0 blue))) true) orange red))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
ae4f1146.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (#(lambda (find_blocks_by_inferred_b $0 false false)) $0))),trimmed,generation,entry,False,copy the 3 by 3 square from the input grid that ha s the most blue pixel s,copy the square with five blue square s in it,mirror the square with the most dark block s,,,
bb43febb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_blocks_by_inferred_b $0 false false) false) red) (lambda (is_interior $0 true))) true)),rich,1,0,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (#(lambda (remove_black_b (grid_to_block $0))) $0))),rich,2,0,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false))),rich,2,1,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)))),rich,2,2,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true))),rich,2,3,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (merge_blocks (find_same_color_blocks $0 false false) false))),rich,2,4,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (remove_black_b (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,2,5,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (merge_blocks (find_same_color_blocks $0 false false) true))),rich,2,6,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (merge_blocks (find_same_color_blocks $0 false true) false))),rich,2,7,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (merge_blocks (find_same_color_blocks $0 true false) false))),rich,2,8,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (filter_block_tiles (fill_color $0 $1) (lambda (is_interior $0 true))) true))) red (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) blue))),rich,2,9,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) red) (lambda (is_interior $0 true))) true)),trimmed,3,0,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 3)) (lambda (is_interior $0 true))) true)),trimmed,3,1,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) red) (lambda (is_interior $0 true))) true)),trimmed,3,2,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) red) (lambda (is_interior $0 true))) true)),trimmed,3,3,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) true) true)) red) (lambda (is_interior $0 true))) true)),trimmed,4,4,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0))),trimmed,generation,entry,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) (nth_primary_color (grid_to_block $0) 3) (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0))),trimmed,generation,entry,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (remove_black_b (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0)))),trimmed,generation,entry,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (#(lambda (lambda (to_original_grid_overlay (fill_color $0 $1) true))) red (map_block_tiles (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0) (lambda $0)))),trimmed,generation,entry,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
bb43febb.json,(lambda (to_original_grid_overlay (fill_color (#(lambda (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda (is_interior $0 true)))) $0) red) true)),trimmed,generation,entry,False,color in the center of each gray square red but make sure you leave a 1 square gray border around it so if it s a 5 by 5 gray square you would color a red 3 by 3 square in side it leaving a gray border around the red square,fill in the rectangle s until only a one square border of the original color remain s,fill the inside of both shape s with red leaving a border the same color as original,,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) false)),rich,0,0,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) true)),rich,0,1,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) false)),rich,0,2,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) true)),rich,0,3,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) (negate_boolean false))),rich,0,4,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) (negate_boolean true))),rich,0,5,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) (negate_boolean false))),rich,0,6,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) (negate_boolean true))),rich,0,7,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (box_block (grid_to_block $0)) west 1) false)),rich,0,8,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (box_block (grid_to_block $0)) west 1) true)),rich,0,9,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (filter_block_tiles (grid_to_block $0) (lambda true)) east 1) true)),rich,1,4,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (filter_block_tiles (duplicate (grid_to_block $0) east 1) (lambda true)) true)),rich,1,5,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (move (grid_to_block $0) (get_width (grid_to_block $0)) east true) true)),rich,1,7,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (filter_block_tiles (grid_to_block $0) (lambda true)) east 1) false)),rich,1,8,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (filter_block_tiles (duplicate (grid_to_block $0) east 1) (lambda true)) false)),rich,1,9,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (box_block (duplicate (grid_to_block $0) east 1)) false)),rich,3,8,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (box_block (grid_to_block $0)) east 1) false)),rich,3,9,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (move (grid_to_block $0) (get_width (grid_to_block $0)) east true) false)),rich,generation,entry,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (to_min_grid (duplicate (box_block (grid_to_block $0)) east 1) true)),trimmed,1,9,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (#(lambda (to_min_grid $0 true)) (duplicate (grid_to_block $0) east 1))),trimmed,generation,entry,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
a416b8f3.json,(lambda (#(lambda (to_min_grid $0 true)) (duplicate (grid_to_block $0) west 1))),trimmed,generation,entry,False,copy the pattern exactly to the new empty section there should be two of the same pattern side by side,copy the whole rectangle on the right side same rectangle grid,double side,place the input design all the way on the left half and then duplicate the exact same design and color s on the right half the final grid is two of the original grid next to each other,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) false false))),rich,2,0,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false))),rich,2,1,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 0) true false))),rich,2,2,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) true false))),rich,2,3,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) 0) false false))),rich,2,4,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (#(lambda (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) (nth_primary_color (grid_to_block $0) 1))) $0) 0) true false))),rich,2,5,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) 0) true false))),rich,2,6,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (box_block (#(lambda (remove_black_b (grid_to_block $0))) $0)) 0) true false))),rich,2,7,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (remove_color (grid_to_block $0) blue) 0) true false))),rich,2,8,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (duplicate (grid_to_block $0) east 1) 0) true false))),rich,2,9,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) true (find_blocks_by_color $0 (nth_primary_color (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) 0) false false))),rich,3,6,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda (get_num_tiles $0)) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (map_blocks (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda $0)) (lambda (get_num_tiles $0)) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda true)) (lambda (get_num_tiles $0)) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda (get_num_tiles (remove_color $0 blue))) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda (negate_boolean false))) (lambda (get_num_tiles $0)) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda (get_num_tiles (remove_color $0 (nth_primary_color $0 2)))) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (map_blocks (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda $0)) (lambda (get_num_tiles (remove_color $0 blue))) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda true)) (lambda (get_num_tiles (remove_color $0 blue))) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda (get_num_tiles (remove_color $0 (nth_primary_color (grid_to_block $1) 2)))) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda true)) (lambda (get_num_tiles (remove_color $0 (nth_primary_color $0 2)))) true) true)),rich,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) true false) (lambda (get_num_tiles (remove_color $0 blue))) true))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list (find_blocks_by_color $0 (nth_primary_color (grid_to_block $0) 0) false false) (lambda (get_num_tiles (remove_color $0 blue))) true))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0) true false))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0) false false))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0) true (negate_boolean true)))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0) (negate_boolean true) false))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $0) false (negate_boolean true)))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
2dc579da.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (first_of_sorted_object_list $0 (lambda (get_num_tiles (remove_color $0 blue))) true))) (#(lambda (lambda (find_blocks_by_color $0 (#(lambda (nth_primary_color (grid_to_block $0) 0)) $1) true false))) $0 $0))),trimmed,generation,entry,False,select the quadrant with the different colored square then copy and paste the quadrant as the output,zoom in on the section with an off color square,,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (is_interior (get_block_center (grid_to_block $0)) false) south false)),rich,2,9,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) south true)),rich,3,8,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $2) $1) 3 $0 true))))) $0 true south (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)))),rich,3,9,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (negate_boolean false) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (touches_any_boundary (grid_to_block $0)) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (is_rectangle (grid_to_block $0) false) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (touches_boundary (grid_to_block $0) east) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (touches_boundary (grid_to_block $0) south) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (is_interior (get_block_center (grid_to_block $0)) false) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (is_rectangle (grid_to_block $0) true) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (has_color (grid_to_block $0) blue) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (lambda (lambda (to_min_grid (move (reflect (grid_to_block $0) $1) 3 $2 true) true)))) south (touches_boundary (grid_to_block $0) north_west) $0)),rich,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) false) true) false) 3 south true)) true)),trimmed,2,2,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) false) false) 3 south true)) true)),trimmed,2,3,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) true) true) 3 south true)) true)),trimmed,2,4,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) false) false) 3 south true)) false)),trimmed,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) true) true) 3 south true)) false)),trimmed,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (to_min_grid (box_block (move (box_block (move (reflect (grid_to_block $0) true) 3 south true)) 3 north true)) false)),trimmed,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
8be77c9e.json,(lambda (#(lambda (to_min_grid $0 true)) (box_block (move (reflect (grid_to_block $0) true) 3 south true)))),trimmed,generation,entry,False,copy the input grid into the top of the new output grid then you will turn the input grid upside down and copy it in the bottom of the output grid this will create a mirror image top to bottom,fill the top of the grid with the same as original and fill the bottom of the grid with a mirror image of the original,mirror the grid on the new grid,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (replace_color (grid_to_block $0) teal red) 1 south false) false)),rich,0,0,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (fill_snakewise (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) (make_colorpair red red)) 1 south false) false)),rich,0,1,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (replace_color (remove_black_b (grid_to_block $0)) teal red) 1 south false) false)),rich,1,1,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (replace_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 1) red) 1 south false) false)),rich,1,2,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (replace_color (grid_to_block $0) teal red) 1 south (negate_boolean true)) false)),rich,1,3,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (box_block (replace_color (grid_to_block $0) teal red)) 1 south false) false)),rich,1,4,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (replace_color (duplicate (grid_to_block $0) east 1) teal red) 1 south false) false)),rich,1,5,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (move (replace_color (grid_to_block $0) teal red) 1 south false)) (lambda (is_exterior $0 true))) false)),rich,1,7,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (replace_color (singleton_block (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false)))) teal red) 1 south false) false)),rich,1,8,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (move (replace_color (singleton_block (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) teal red) 1 south false) false)),rich,1,9,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) teal red))),rich,2,0,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (replace_color (grid_to_block $0) teal red))),rich,2,1,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (replace_color (singleton_block (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0)) teal red))),rich,2,2,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (box_block (replace_color (grid_to_block $0) teal red)))),rich,2,3,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (replace_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 1) red))),rich,2,4,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (replace_color (duplicate (grid_to_block $0) east 1) teal red))),rich,2,5,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (fill_snakewise (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) (make_colorpair red red)))),rich,2,6,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (replace_color (singleton_block (filter_blocks (find_same_color_blocks $0 true true) (lambda (is_symmetrical $0 false)))) teal red))),rich,2,8,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) red))),rich,3,0,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (fill_color (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) false) red))),rich,3,3,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (fill_color (merge_blocks (#(lambda (filter_blocks (find_same_color_blocks $0 true false) (lambda (is_symmetrical $0 false)))) $0) true) red))),rich,3,4,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (fill_snakewise (#(lambda (remove_black_b (grid_to_block $0))) $0) (make_colorpair red red)))),rich,3,5,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (fill_color (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) red))),rich,3,6,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (reflect (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) red) false))),rich,3,7,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (fill_color (filter_block_tiles (#(lambda (remove_black_b (grid_to_block $0))) $0) (lambda true)) red))),rich,3,8,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (move $0 1 south false) false)) (filter_block_tiles (fill_color (#(lambda (remove_black_b (grid_to_block $0))) $0) red) (lambda true)))),rich,3,9,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (fill_color (remove_black_b (move (grid_to_block $0) 1 south false)) red) false)),trimmed,3,0,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (move (grid_to_block $0) 1 south false)) red) (lambda (is_exterior $0 false))) false)),trimmed,4,1,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (fill_color (remove_black_b (move (reflect (reflect (grid_to_block $0) false) false) 1 south false)) red) false)),trimmed,4,2,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (fill_color (remove_black_b (move (reflect (reflect (grid_to_block $0) true) true) 1 south false)) red) false)),trimmed,4,3,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (wrap_block (remove_black_b (move (grid_to_block $0) 1 south false)) invisible true) red) (lambda (is_interior $0 true))) false)),trimmed,4,4,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (fill_color (remove_black_b (move (grid_to_block $0) 1 south false)) red))),trimmed,generation,entry,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (fill_color (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $0)) red))),trimmed,generation,entry,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (replace_color (#(lambda (move (grid_to_block $0) 1 south false)) $0) teal red) false)),trimmed,generation,entry,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (to_original_grid_overlay (fill_color (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $0)) red) false)),trimmed,generation,entry,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (replace_color (remove_black_b (#(lambda (move (grid_to_block $0) 1 south false)) $0)) teal red))),trimmed,generation,entry,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
a79310a0.json,(lambda (#(lambda (to_original_grid_overlay (filter_block_tiles $0 (lambda (is_exterior $0 false))) false)) (fill_color (remove_color (#(lambda (move (grid_to_block $0) 1 south false)) $0) black) red))),trimmed,generation,entry,False,copy those specific shape s one block below and change the color to red,move colored square one line down and change to red,,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) yellow) false) true)),rich,0,0,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (remove_color (reflect (grid_to_block $0) false) yellow) true)),rich,0,1,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (reflect (remove_color (grid_to_block $0) yellow) false) true)),rich,0,2,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (remove_color (reflect (grid_to_block $0) false) yellow) true)),rich,0,3,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (remove_black_b (reflect (remove_color (grid_to_block $0) yellow) false)) true)),rich,0,4,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (remove_color (grid_to_block $0) yellow) false)) true)),rich,0,5,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) false) true) true)),rich,0,6,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) true) false) true)),rich,0,7,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) yellow) false) true)) true)),rich,0,8,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) yellow) true) false)) true)),rich,0,9,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (replace_color (grid_to_block $0) yellow invisible) false) true)),rich,1,4,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (replace_color (reflect (grid_to_block $0) false) yellow invisible) true)),rich,1,5,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_color (remove_black_b (grid_to_block $0)) yellow) false) true)),rich,1,6,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (remove_black_b (remove_color (reflect (grid_to_block $0) false) yellow)) true)),rich,1,8,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (remove_color (reflect (remove_black_b (grid_to_block $0)) false) yellow) true)),rich,1,9,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) yellow) false) true)),rich,2,0,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (remove_color (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) yellow) true)),rich,2,1,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (reflect (remove_color (#(lambda (remove_black_b (grid_to_block $0))) $0) yellow) false) true)),rich,3,4,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (remove_color (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) yellow) true)),rich,3,5,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (replace_color (#(lambda (remove_black_b (grid_to_block $0))) $0) yellow invisible) false) true)),rich,3,8,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (replace_color (reflect (#(lambda (remove_black_b (grid_to_block $0))) $0) false) yellow invisible) true)),rich,3,9,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) yellow) false) (negate_boolean false))),rich,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) yellow) (negate_boolean true)) true)),rich,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_black_b (remove_color (grid_to_block $0) yellow)) false) true)),rich,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) yellow) false) (touches_any_boundary (grid_to_block $0)))),rich,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) yellow) (is_tile (grid_to_block $0))) true)),rich,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (replace_color (reflect (grid_to_block $0) false) yellow invisible) true)),trimmed,0,5,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_original_grid_overlay (reflect (replace_color (grid_to_block $0) yellow invisible) false) true)),trimmed,0,7,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (to_min_grid (remove_color (reflect (grid_to_block $0) (negate_boolean true)) yellow) true)),trimmed,0,9,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (#(lambda (#(lambda (to_min_grid $0 true)) (reflect $0 false))) (remove_color (grid_to_block $0) yellow))),trimmed,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (#(lambda (to_min_grid $0 true)) (remove_color (reflect (grid_to_block $0) false) yellow))),trimmed,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
b8825c91.json,(lambda (#(lambda (to_min_grid $0 true)) (replace_color (reflect (grid_to_block $0) false) yellow invisible))),trimmed,generation,entry,False,change the yellow square s to finish the pattern,remove the yellow rectangle s and replace the all of the yellow square s with the appropriate color in order to create a pattern that is both horizontally and vertically symmetrical,remove the yellow rectangle s and replace the color to match the existing pattern,,,
d5d6de2d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (is_interior $0 true))) false)),rich,2,0,False,fill in the hole s of the boxe s with green then black out the outline s of the boxe s,fill the black boxe s with green,,,,
d5d6de2d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) true) green) (lambda (is_interior $0 true))) false)),rich,2,1,False,fill in the hole s of the boxe s with green then black out the outline s of the boxe s,fill the black boxe s with green,,,,
d5d6de2d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_blocks_by_inferred_b $0 true true) false) green) (lambda (is_interior $0 true))) false)),rich,3,2,False,fill in the hole s of the boxe s with green then black out the outline s of the boxe s,fill the black boxe s with green,,,,
d5d6de2d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) false)),trimmed,6,1,False,fill in the hole s of the boxe s with green then black out the outline s of the boxe s,fill the black boxe s with green,,,,
d5d6de2d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) false)),trimmed,7,2,False,fill in the hole s of the boxe s with green then black out the outline s of the boxe s,fill the black boxe s with green,,,,
d5d6de2d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (reflect (grid_to_block $1) true) 1 east true)))))) false)),trimmed,7,3,False,fill in the hole s of the boxe s with green then black out the outline s of the boxe s,fill the black boxe s with green,,,,
d5d6de2d.json,(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (reflect (grid_to_block $1) true) 1 south true)))))) false)),trimmed,7,4,False,fill in the hole s of the boxe s with green then black out the outline s of the boxe s,fill the black boxe s with green,,,,
a87f7484.json,(lambda (to_min_grid (remove_black_b (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false)) true)),rich,1,2,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_black_b $0))) false) true)),rich,1,4,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles (remove_black_b $0))) false) true)),rich,1,5,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (remove_black_b $0))) false) false)),rich,1,6,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles (remove_black_b $0))) false) false)),rich,1,7,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (to_min_grid (first_of_sorted_object_list (filter_blocks (find_same_color_blocks $0 true false) (lambda true)) (lambda (get_num_tiles $0)) false) true)),rich,1,8,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (to_min_grid (first_of_sorted_object_list (map_blocks (find_same_color_blocks $0 true false) (lambda $0)) (lambda (get_num_tiles $0)) false) true)),rich,1,9,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) (negate_boolean true) (find_same_color_blocks $0 true false))),rich,2,4,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 true (negate_boolean true)))),rich,2,5,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 (touches_any_boundary (#(lambda (remove_black_b (grid_to_block $0))) $0)) false))),rich,2,7,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 (touches_any_boundary (grid_to_block $0)) false))),rich,2,9,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (#(lambda (lambda (to_min_grid (first_of_sorted_object_list $0 (lambda (get_num_tiles $0)) $1) true))) false (find_same_color_blocks $0 true (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0))))),rich,3,9,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) blue) false)),trimmed,4,4,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
a87f7484.json,(lambda (#(lambda (lambda (lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $2 true true) $0 $1) $1)))) $0 (is_tile (grid_to_block $0)) (lambda (get_num_tiles (remove_black_b $0))))),trimmed,generation,entry,False,changed,find the color with the most space s colored and put that pattern into the 3 by 3,,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) false))) true true)),rich,2,0,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) false))) true true)),rich,2,1,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) blue) false))) true true)),rich,2,2,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (remove_black_b (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true)) false))) true true)),rich,2,3,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) blue) false))) true true)),rich,2,4,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) teal) false))) true true)),rich,2,5,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) teal) false))) true true)),rich,2,6,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) grey) false))) true true)),rich,2,7,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) grey) false))) true true)),rich,2,8,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_until_touches_block $0 (replace_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) black red) false))) true true)),rich,2,9,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) false)) $0)),rich,3,0,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) false)) $0)),rich,3,1,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $1) (lambda true))) false) false)) $0)),rich,3,2,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $1) (lambda true))) true) false)) $0)),rich,3,3,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) (is_interior $0 false)) false)) $0)),rich,3,4,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) (is_interior $0 false))) $0)),rich,3,5,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (filter_block_tiles (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) (lambda true)) false)) $0)),rich,3,6,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) (is_interior $0 true)) false)) $0)),rich,3,7,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true) (is_interior $0 false))) $0)),rich,3,8,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
22168020.json,(lambda (#(lambda (lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) $1) true true))) (lambda (extend_until_touches_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false) (is_interior $0 true))) $0)),rich,3,9,False,copy the input grid then close and fill in the shape s so that they look a little like weird triangle s,fill in the area above the four square base until you get to the top of the colored area,fill up the black block s in all the colored block s with their individual color s,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $0 $1 pink lor))))),rich,0,0,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $1 $0 pink lor))))),rich,0,1,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $0 $1 pink lor))))),rich,0,2,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $1 $0 pink lor))))),rich,0,3,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 pink lor))))),rich,0,4,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 pink lor))))),rich,0,5,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $0 $1 pink lor))))),rich,0,6,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $1 $0 pink lor))))),rich,0,7,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $0 $1 pink lor))))),rich,0,8,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $1 $0 pink lor))))),rich,0,9,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 false))),rich,1,0,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (negate_boolean true)))),rich,1,1,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (is_tile (grid_to_block $0))))),rich,1,2,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (is_symmetrical (grid_to_block $0) true)))),rich,1,3,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor (nth_primary_color (grid_to_block $0) 6) (split_grid $0 false))),rich,1,4,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (is_symmetrical (grid_to_block $0) false)))),rich,1,5,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (has_color (grid_to_block $0) blue)))),rich,1,6,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor (nth_primary_color (grid_to_block $0) (get_width (grid_to_block $0))) (split_grid $0 false))),rich,1,7,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (has_color (grid_to_block $0) red)))),rich,1,8,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor (nth_primary_color (grid_to_block $0) (get_original_grid_width (grid_to_block $0))) (split_grid $0 false))),rich,1,9,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor (nth_primary_color (#(lambda (remove_black_b (grid_to_block $0))) $0) 6) (split_grid $0 false))),rich,3,2,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (is_tile (#(lambda (remove_black_b (grid_to_block $0))) $0))))),rich,3,4,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) false)))),rich,3,5,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (is_symmetrical (#(lambda (remove_black_b (grid_to_block $0))) $0) true)))),rich,3,6,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (overlap_split_blocks $0 (lambda (lambda (color_logical $0 $1 $3 $4))))))) lor pink (split_grid $0 (is_rectangle (#(lambda (remove_black_b (grid_to_block $0))) $0) false)))),rich,3,9,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $0 (color_logical $0 $1 pink lor) pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $0 (color_logical $1 $0 pink lor) pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $0 (color_logical $1 $1 pink lor) pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $1 (color_logical $0 $0 pink lor) pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $1 (color_logical $0 $1 pink lor) pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $1 (color_logical $1 $0 pink lor) pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical (color_logical $0 $0 pink lor) $1 pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical (color_logical $0 $1 pink lor) $0 pink lor))))),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false pink lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false (nth_primary_color (grid_to_block $0) 6) lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (negate_boolean true) pink lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_tile (grid_to_block $0)) pink lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false (nth_primary_color (grid_to_block $0) (get_width (grid_to_block $0))) lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 false (nth_primary_color (grid_to_block $0) (get_original_grid_width (grid_to_block $0))) lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_symmetrical (grid_to_block $0) false) pink lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (is_symmetrical (grid_to_block $0) true) pink lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (has_color (grid_to_block $0) blue) pink lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
dae9d2b5.json,(lambda (#(lambda (lambda (lambda (lambda (overlap_split_blocks (split_grid $3 $2) (lambda (lambda (color_logical $0 $1 $3 $2)))))))) $0 (has_color (grid_to_block $0) pink) pink lor)),rich,generation,entry,False,copy and paste the left side of the input the yellow side onto the output grid then draw the green pattern on the output grid on top of the yellow do not copy and paste because the black will overwrite the yellow your output grid should now have green and yellow on a black background then recolor each green and yellow square pink so your output is only pink and black,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (has_color (grid_to_block $0) red)) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (negate_boolean (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles $0)) true)))) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (touches_boundary (remove_black_b (grid_to_block $0)) north)) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (has_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) red)) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (touches_boundary (remove_black_b (grid_to_block $0)) north_west)) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (has_color (grid_to_block $0) red)) (lambda (get_num_tiles (remove_color $0 blue))) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (negate_boolean (has_color (grid_to_block $0) pink))) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false (has_color (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles $0)) true) red)) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) (has_color (grid_to_block $0) teal)))) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
358ba94e.json,(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (touches_boundary (remove_black_b (grid_to_block $0)) north_west)) (lambda (get_num_tiles $0)) true) false)),rich,generation,entry,False,,,,,,
