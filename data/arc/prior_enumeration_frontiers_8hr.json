{"0ca9ddb6.json": [], "09629e4f.json": [], "2204b7a8.json": [], "67e8384a.json": [], "794b24be.json": [], "75b8110e.json": [], "a3325580.json": [], "e21d9049.json": [], "63613498.json": [], "d0f5fe59.json": [], "31aa019c.json": [], "ba26e723.json": [], "253bf280.json": [], "d13f3404.json": [], "67a3c6ac.json": ["(lambda (to_original_grid_overlay (reflect (grid_to_block $0) false) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) false) false))", "(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean true)) false))", "(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean true)) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean true)) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean true)) false))", "(lambda (to_original_grid_overlay (reflect (grid_to_block $0) false) false))", "(lambda (to_min_grid (reflect (grid_to_block $0) false) (negate_boolean true)))", "(lambda (to_min_grid (reflect (grid_to_block $0) false) (negate_boolean false)))", "(lambda (to_min_grid (reflect (grid_to_block $0) false) true))"], "8731374e.json": [], "b91ae062.json": [], "8efcae92.json": [], "e5062a87.json": [], "aabf363d.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) 0)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) 0)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) false))"], "9edfc990.json": [], "025d127b.json": [], "8d5021e8.json": [], "3de23699.json": [], "662c240a.json": [], "d687bc17.json": [], "239be575.json": [], "a740d043.json": ["(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 true false) false false))", "(lambda (to_min_grid (remove_color (grid_to_block $0) blue) (is_tile (grid_to_block $0))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 true false) false true))", "(lambda (to_min_grid (remove_color (box_block (grid_to_block $0)) blue) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) false false))", "(lambda (to_min_grid (remove_color (grid_to_block $0) blue) (negate_boolean true)))", "(lambda (to_min_grid (remove_black_b (remove_color (grid_to_block $0) blue)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) false true))", "(lambda (to_min_grid (remove_color (remove_black_b (grid_to_block $0)) blue) false))", "(lambda (to_min_grid (remove_color (grid_to_block $0) blue) false))"], "b27ca6d3.json": [], "b7249182.json": [], "4c4377d9.json": ["(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true))) true))", "(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 north true)) true))", "(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true)) true))", "(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 north true)) false))", "(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 north true)) true))"], "5521c0d9.json": [], "6a1e5592.json": [], "c59eb873.json": ["(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 1) false))", "(lambda (to_min_grid (grow (grid_to_block $0) 1) false))", "(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 1) true))", "(lambda (to_min_grid (grow (grid_to_block $0) 1) (negate_boolean false)))", "(lambda (to_min_grid (box_block (grow (grid_to_block $0) 1)) true))", "(lambda (to_min_grid (grow (grid_to_block $0) 1) (is_tile (grid_to_block $0))))", "(lambda (to_min_grid (box_block (grow (grid_to_block $0) 1)) false))", "(lambda (to_min_grid (grow (grid_to_block $0) 1) (negate_boolean true)))", "(lambda (to_min_grid (grow (grid_to_block $0) 1) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (grow (grid_to_block $0) 1) true))"], "28bf18c6.json": ["(lambda (to_min_grid (duplicate (box_block (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 true)))) east 1) false))", "(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 east true)) false))", "(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 west true)) false))", "(lambda (to_min_grid (duplicate (merge_blocks (find_same_color_blocks $0 true true) true) east 1) false))", "(lambda (to_min_grid (duplicate (box_block (remove_black_b (grid_to_block $0))) east 1) false))", "(lambda (to_min_grid (duplicate (map_block_tiles (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) (lambda $0)) east 1) false))", "(lambda (to_min_grid (duplicate (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) east 1) false))", "(lambda (to_min_grid (duplicate (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) east 1) true))", "(lambda (to_min_grid (duplicate (box_block (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true)) east 1) false))", "(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 west true)) true))", "(lambda (to_min_grid (remove_black_b (move (grid_to_block $0) 3 east true)) true))", "(lambda (to_min_grid (duplicate (singleton_block (find_same_color_blocks $0 true true)) east 1) true))", "(lambda (to_min_grid (duplicate (singleton_block (find_same_color_blocks $0 true true)) east 1) false))", "(lambda (to_min_grid (duplicate (merge_blocks (find_same_color_blocks $0 true true) false) east 1) false))"], "7837ac64.json": [], "ce602527.json": [], "94f9d214.json": [], "3af2c5a8.json": [], "98cf29f8.json": [], "99b1bc43.json": ["(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $0 $1 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 (color_logical $1 $1 green lor) green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 (color_logical $0 $0 green lor) green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $0 $1 green lxor)))))"], "2c608aff.json": [], "00d62c1b.json": [], "f1cefba8.json": [], "8e5a5113.json": [], "1c786137.json": [], "b782dc8a.json": [], "ec883f72.json": [], "95990924.json": [], "fafffa47.json": [], "29c11459.json": [], "3aa6fb7a.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) blue) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) (nth_primary_color (grid_to_block $0) 2)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) blue) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) blue) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (grid_to_block $1) 3 south true)))))) true))"], "22eb0ac0.json": ["(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true (negate_boolean true)))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true (is_tile (grid_to_block $0))))", "(lambda (to_original_grid_overlay (merge_blocks (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) false) true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge (get_block_center (tile_to_block $0)) east))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge (block_to_tile (tile_to_block $0)) east))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) (negate_boolean false) false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 east))) (touches_any_boundary (grid_to_block $0)) false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (remove_black_b (extend_towards_until_edge $0 east)))) true false))", "(lambda (blocks_to_original_grid (map_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda (extend_towards_until_edge $0 east))) true false))"], "941d9a10.json": [], "1bfc4729.json": [], "1f642eb9.json": [], "53b68214.json": [], "d43fd935.json": [], "b0c4d837.json": [], "0b148d64.json": [], "5ad4f10b.json": [], "88a10436.json": [], "150deff5.json": [], "4258a5f9.json": ["(lambda (to_original_grid_overlay (wrap_block (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue true) false))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) blue true) false))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) blue true) true))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) true) true)) blue true) true))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) true) true)) blue true) false))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue true) false))", "(lambda (to_original_grid_overlay (wrap_block (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue true) false))", "(lambda (to_original_grid_overlay (wrap_block (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue true) true))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) false) false)) blue true) true))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) blue true) false))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) yellow) true) true)) blue true) true))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) blue true) true))", "(lambda (to_original_grid_overlay (wrap_block (remove_black_b (grid_to_block $0)) blue true) true))"], "d2abd087.json": [], "6aa20dc0.json": [], "4522001f.json": [], "d4a91cb9.json": [], "fcc82909.json": [], "1f85a75f.json": ["(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_num_tiles $0)) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles $0)) false) false))"], "a9f96cdd.json": [], "48d8fb45.json": [], "f8ff0b80.json": [], "3c9b0459.json": ["(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) false) false))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) true) false) true))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) true) false) false))", "(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true) true))", "(lambda (to_min_grid (reflect (reflect (remove_black_b (grid_to_block $0)) true) false) false))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) false) true) true))", "(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) false) true))", "(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true) false))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) false) true) false))", "(lambda (to_min_grid (reflect (reflect (remove_black_b (grid_to_block $0)) false) true) false))"], "3631a71a.json": [], "d9f24cd1.json": [], "ea32f347.json": [], "2bcee788.json": [], "7e0986d6.json": [], "5582e5ca.json": ["(lambda (to_min_grid (reflect (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) false) false))", "(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) true))", "(lambda (to_min_grid (fill_color (move (grid_to_block $0) 1 south false) (nth_primary_color (grid_to_block $0) 0)) false))", "(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) (negate_boolean false)))", "(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) false))", "(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) false))", "(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) true))", "(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (duplicate (grid_to_block $0) east 1) 0)) false))", "(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (move (grid_to_block $0) 1 south false) 0)) false))", "(lambda (to_min_grid (reflect (fill_color (grid_to_block $0) (nth_primary_color (grid_to_block $0) 0)) true) false))", "(lambda (to_min_grid (fill_color (grid_to_block $0) (nth_primary_color (remove_black_b (grid_to_block $0)) 0)) false))"], "22233c11.json": [], "ce4f8723.json": ["(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 (color_logical $1 $0 green lxor) green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $1 $0 green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $0 $1 green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $1 $0 green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 (color_logical $0 $1 green lxor) green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 green lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $0 $1 green lor)))))"], "e26a3af2.json": [], "3bdb4ada.json": [], "9dfd6313.json": [], "1e32b0e9.json": [], "c8f0f002.json": ["(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) (negate_boolean false)))", "(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) true))", "(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) (negate_boolean true)))", "(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) orange grey)) false))", "(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) true))", "(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) (negate_boolean false)))", "(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) orange grey) false))", "(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) false))", "(lambda (to_min_grid (replace_color (grid_to_block $0) orange grey) (negate_boolean true)))", "(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) orange grey)) true))"], "c9e6f938.json": ["(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) false) true) true) 3 east true)) true))", "(lambda (to_min_grid (box_block (move (reflect (remove_color (grid_to_block $0) yellow) false) 3 east true)) false))", "(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) false) 3 east true)) false))", "(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) false) 3 east true)) true))", "(lambda (to_min_grid (box_block (move (reflect (remove_color (grid_to_block $0) blue) false) 3 east true)) false))"], "3428a4f5.json": ["(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $0 $1 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 (color_logical $1 $1 green lor) green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 (color_logical $0 $0 green lor) green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (touches_any_boundary (move (grid_to_block $0) 1 south false))) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $0 $1 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 true) (lambda (lambda (color_logical $1 $0 green lxor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean false)) (lambda (lambda (color_logical $0 $1 green lxor)))))"], "017c7c7b.json": [], "feca6190.json": [], "543a7ed5.json": [], "2dd70a9a.json": [], "44f52bb0.json": [], "a3df8b1e.json": [], "6773b310.json": [], "1e0a9b12.json": [], "a5f85a15.json": [], "57aa92db.json": [], "eb5a1d5d.json": [], "e76a88a6.json": [], "ef135b50.json": [], "6e19193c.json": [], "6cf79266.json": [], "7468f01a.json": ["(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) (negate_boolean true))) true))", "(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) false) false))", "(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) (negate_boolean false)))", "(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) (negate_boolean true))) false))", "(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) false) true))", "(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) (negate_boolean true)) false))", "(lambda (to_min_grid (reflect (remove_black_b (grid_to_block $0)) (negate_boolean true)) true))", "(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) false))", "(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) true))", "(lambda (to_min_grid (remove_black_b (reflect (grid_to_block $0) false)) (negate_boolean true)))", "(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) black) false) false))"], "1f0c79e5.json": [], "bbc9ae5d.json": [], "6cdd2623.json": [], "af902bf9.json": [], "f2829549.json": [], "b527c5c6.json": [], "484b58aa.json": [], "d4f3cd78.json": [], "694f12f3.json": [], "8d510a79.json": [], "ce22a75a.json": ["(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) black true) blue) true))", "(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) blue true) blue) false))", "(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) invisible true) blue) false))", "(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) black true) blue) false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) blue true) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) blue true) blue))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) invisible true) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) invisible true) blue))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) blue true) blue))) true true))", "(lambda (to_original_grid_overlay (fill_color (wrap_block (remove_black_b (grid_to_block $0)) blue true) blue) true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) true) true)) invisible true) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) false) false)) blue true) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) blue true) blue))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (reflect (reflect (grid_to_block $1) false) false)) invisible true) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (wrap_block (remove_black_b (grid_to_block $1)) invisible true) blue))) true false))"], "de1cd16c.json": [], "6d75e8bb.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) true) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 0) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) red) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))"], "e3497940.json": [], "890034e9.json": [], "2bee17df.json": [], "7f4411dc.json": [], "23b5c85d.json": ["(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width $0)) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height $0)) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width $0)) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles (box_block $0))) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_width (box_block $0))) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false true) (lambda (get_height $0)) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height $0)) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height (box_block $0))) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_height (remove_black_b $0))) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda (get_num_tiles $0)) true) true))"], "f8a8fe49.json": [], "d631b094.json": [], "fcb5c309.json": [], "f9012d9b.json": [], "54d9e175.json": [], "a64e4611.json": [], "62c24649.json": [], "28e73c20.json": [], "834ec97d.json": [], "3618c87e.json": [], "3f7978a0.json": [], "6e02f1e3.json": [], "41e4d17e.json": [], "36d67576.json": [], "264363fd.json": [], "228f6490.json": [], "46442a0e.json": [], "3e980e27.json": [], "8eb1be9a.json": [], "40853293.json": [], "42a50994.json": [], "7447852a.json": [], "56ff96f3.json": [], "67385a82.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) true))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) true) true)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))) true))"], "60b61512.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (grid_to_block $1) 3 east true)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) (nth_primary_color (grid_to_block $0) 7)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (grid_to_block $1) 3 south true)))))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) orange) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) true))"], "bdad9b1f.json": [], "e8593010.json": [], "be94b721.json": ["(lambda (to_min_grid (box_block (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 false false) (lambda (get_num_tiles $0)) false) false))", "(lambda (to_min_grid (remove_black_b (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false)) false))"], "d364b489.json": [], "a8c38be5.json": [], "50cb2852.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) teal) (lambda (is_interior $0 true))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) teal) (lambda (is_interior $0 true))) true))", "(lambda (to_original_grid_overlay (fill_color (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true))) teal) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) teal) (lambda (is_interior $0 true))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) teal) (lambda (is_interior $0 true))) true))"], "cf98881b.json": [], "3ac3eb23.json": [], "b2862040.json": [], "49d1d64f.json": ["(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible (negate_boolean true)) true))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) (negate_boolean false)))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) black (negate_boolean true)) false))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) true))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) (negate_boolean true)))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) false))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) true))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible false) false))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) (negate_boolean true)))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) black false) (negate_boolean false)))", "(lambda (to_min_grid (wrap_block (grid_to_block $0) invisible (negate_boolean true)) false))"], "e9614598.json": [], "77fdfe62.json": [], "d9fac9be.json": ["(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) true)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_interior $0 true))) true))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (is_interior $0 true))) true))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (remove_black_b (grid_to_block $0)) false)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (remove_black_b (grid_to_block $0)) true)) (lambda (is_interior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) true)) (lambda (is_interior $0 true))) false))"], "bc1d5164.json": [], "9f236235.json": [], "99fa7670.json": [], "d07ae81c.json": [], "27a28665.json": [], "a1570a43.json": [], "6ecd11f4.json": [], "5614dbcf.json": [], "3eda0437.json": [], "3345333e.json": [], "8403a5d5.json": [], "a2fd1cf0.json": [], "47c1f68c.json": [], "2013d3e2.json": [], "74dd1130.json": [], "6430c8c4.json": [], "ed36ccf7.json": [], "d406998b.json": [], "72ca375d.json": [], "50846271.json": [], "f25ffba3.json": ["(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) (negate_boolean false)))", "(lambda (to_original_grid_overlay (remove_color (reflect (grid_to_block $0) true) black) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (box_block (grid_to_block $0)) true)) true))", "(lambda (to_original_grid_overlay (box_block (remove_black_b (reflect (grid_to_block $0) true))) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) (touches_any_boundary (grid_to_block $0)))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (reflect (grid_to_block $0) true))) true))", "(lambda (to_original_grid_overlay (remove_black_b (box_block (reflect (grid_to_block $0) true))) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) (negate_boolean false))) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) true))"], "aba27056.json": [], "39a8645d.json": ["(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 3) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 3) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 0) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 4) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 2) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 2) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda 1) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 0) true) false))"], "6b9890af.json": [], "746b3537.json": [], "8a004b2b.json": [], "4290ef0e.json": [], "05269061.json": [], "25d487eb.json": [], "05f2a901.json": [], "6fa7a44f.json": ["(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true)) true))", "(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 south true)) true))", "(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) true))) 3 south true)) false))", "(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true)) false))", "(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) true) 3 south true))) true))"], "7b7f7511.json": [], "dc433765.json": [], "ae3edfdc.json": [], "e48d4e1a.json": [], "90c28cc7.json": [], "7c008303.json": [], "f5b8619d.json": [], "e6721834.json": [], "68b16354.json": ["(lambda (to_min_grid (reflect (grid_to_block $0) true) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean false)) false))", "(lambda (to_min_grid (reflect (grid_to_block $0) true) (negate_boolean false)))", "(lambda (to_original_grid_overlay (reflect (grid_to_block $0) true) false))", "(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean false)) false))", "(lambda (to_original_grid_overlay (reflect (grid_to_block $0) (negate_boolean false)) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean false)) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) true) false))", "(lambda (to_min_grid (reflect (grid_to_block $0) true) (negate_boolean true)))", "(lambda (to_original_grid_overlay (reflect (grid_to_block $0) true) true))"], "cdecee7f.json": [], "dc0a314f.json": [], "bd4472b8.json": [], "0520fde7.json": ["(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $0 $1 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $1 $0 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $0 $1 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $1 $0 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $0 $1 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $0 $1 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $1 $0 red land)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $1 $0 red land)))))"], "4612dd53.json": [], "4093f84a.json": [], "46f33fce.json": ["(lambda (to_min_grid (wrap_block (remove_black_b (box_block (grow (grid_to_block $0) 1))) invisible true) false))", "(lambda (to_min_grid (wrap_block (remove_black_b (grow (remove_black_b (grid_to_block $0)) 1)) invisible true) false))", "(lambda (to_min_grid (wrap_block (grow (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) 1) invisible true) false))", "(lambda (to_min_grid (wrap_block (grow (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) 1) invisible true) false))", "(lambda (to_min_grid (wrap_block (grow (remove_black_b (grid_to_block $0)) 1) invisible true) false))", "(lambda (to_min_grid (wrap_block (remove_black_b (map_block_tiles (grow (grid_to_block $0) 1) (lambda $0))) invisible true) false))", "(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true) (negate_boolean true)))", "(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) black true) false))", "(lambda (to_min_grid (wrap_block (remove_black_b (reflect (reflect (grow (grid_to_block $0) 1) true) true)) invisible true) false))", "(lambda (to_min_grid (wrap_block (map_block_tiles (grow (remove_black_b (grid_to_block $0)) 1) (lambda $0)) invisible true) false))", "(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) black true) (negate_boolean true)))", "(lambda (to_min_grid (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true) false))", "(lambda (to_min_grid (remove_black_b (wrap_block (remove_black_b (grow (grid_to_block $0) 1)) invisible true)) false))", "(lambda (to_min_grid (wrap_block (remove_black_b (reflect (reflect (grow (grid_to_block $0) 1) false) false)) invisible true) false))"], "963e52fc.json": [], "7ddcd7ec.json": [], "36fdfd69.json": [], "39e1d7f9.json": [], "681b3aeb.json": [], "9ecd008a.json": ["(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) true)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) false))", "(lambda (to_min_grid (filter_block_tiles (remove_black_b (reflect (grid_to_block $0) false)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) true))"], "b230c067.json": [], "caa06a1f.json": [], "cbded52d.json": [], "5c0a986e.json": [], "25d8a9c8.json": [], "4938f0c2.json": [], "4347f46a.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 true))) (negate_boolean true)))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 false))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (reflect (reflect (grid_to_block $0) true) false) true) false)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) (lambda (is_exterior $0 false))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 false))) (negate_boolean true)))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (reflect (reflect (grid_to_block $0) true) true) false) false)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (grid_to_block $0)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) true) true)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) true) true)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) false) false)) (lambda (is_exterior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (remove_black_b (reflect (reflect (remove_black_b (grid_to_block $0)) false) false)) (lambda (is_exterior $0 true))) false))"], "4c5c2cf0.json": [], "5daaa586.json": [], "c3e719e8.json": [], "73251a56.json": [], "c444b776.json": [], "a48eeaf7.json": [], "b775ac94.json": [], "e50d258f.json": [], "ded97339.json": [], "1cf80156.json": ["(lambda (to_min_grid (remove_black_b (grid_to_block $0)) (negate_boolean false)))", "(lambda (to_min_grid (remove_color (grid_to_block $0) black) true))", "(lambda (to_min_grid (remove_black_b (box_block (grid_to_block $0))) false))", "(lambda (to_min_grid (box_block (remove_black_b (grid_to_block $0))) false))", "(lambda (to_min_grid (remove_color (grid_to_block $0) black) false))", "(lambda (to_min_grid (box_block (remove_black_b (grid_to_block $0))) true))", "(lambda (to_min_grid (remove_black_b (grid_to_block $0)) true))", "(lambda (to_min_grid (remove_black_b (box_block (grid_to_block $0))) true))", "(lambda (to_min_grid (remove_black_b (grid_to_block $0)) (negate_boolean true)))", "(lambda (to_min_grid (remove_black_b (grid_to_block $0)) false))"], "d06dbe63.json": [], "444801d8.json": [], "e73095fd.json": [], "11852cab.json": [], "dc1df850.json": [], "db93a21d.json": [], "0a938d79.json": [], "29ec7d0e.json": [], "0e206a2e.json": [], "045e512c.json": [], "496994bd.json": ["(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) (negate_boolean false)))", "(lambda (to_original_grid_overlay (remove_color (reflect (grid_to_block $0) true) black) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (box_block (grid_to_block $0)) true)) true))", "(lambda (to_original_grid_overlay (box_block (remove_black_b (reflect (grid_to_block $0) true))) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) (touches_any_boundary (grid_to_block $0)))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (reflect (grid_to_block $0) true))) true))", "(lambda (to_original_grid_overlay (remove_black_b (box_block (reflect (grid_to_block $0) true))) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) (negate_boolean false))) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (grid_to_block $0) true)) true))"], "1b60fb0c.json": [], "54d82841.json": [], "ba97ae07.json": [], "e9afcf9a.json": [], "f25fbde4.json": ["(lambda (to_min_grid (grow (box_block (remove_black_b (grid_to_block $0))) 1) true))", "(lambda (to_min_grid (remove_black_b (grow (grid_to_block $0) 1)) (negate_boolean true)))", "(lambda (to_min_grid (grow (remove_black_b (box_block (grid_to_block $0))) 1) false))", "(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 1) (is_tile (grid_to_block $0))))", "(lambda (to_min_grid (remove_color (grow (grid_to_block $0) 1) black) false))", "(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 1) false))", "(lambda (to_min_grid (grow (remove_black_b (grid_to_block $0)) 1) (negate_boolean true)))", "(lambda (to_min_grid (remove_black_b (grow (grid_to_block $0) 1)) false))", "(lambda (to_min_grid (grow (remove_color (grid_to_block $0) black) 1) false))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (grid_to_block $0))) 1) false))"], "855e0971.json": [], "321b1fc6.json": [], "6d0160f0.json": [], "3befdf3e.json": [], "447fd412.json": [], "2dee498d.json": [], "e8dc4411.json": [], "776ffc46.json": [], "b1948b0a.json": ["(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) pink red)) false))", "(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) false))", "(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) (negate_boolean false)))", "(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) false))", "(lambda (to_min_grid (box_block (replace_color (grid_to_block $0) pink red)) true))", "(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) true))", "(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) (negate_boolean false)))", "(lambda (to_original_grid_overlay (replace_color (grid_to_block $0) pink red) (negate_boolean true)))", "(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) (negate_boolean true)))", "(lambda (to_min_grid (replace_color (grid_to_block $0) pink red) true))"], "007bbfb7.json": [], "97a05b5b.json": [], "1fad071e.json": [], "c9f8e694.json": [], "363442ee.json": [], "ecdecbb3.json": [], "a68b268e.json": [], "23581191.json": [], "b548a754.json": [], "539a4f51.json": [], "9565186b.json": [], "a61f2674.json": [], "445eab21.json": [], "beb8660c.json": [], "0dfd9992.json": [], "1a07d186.json": [], "9172f3a0.json": ["(lambda (to_min_grid (box_block (grow (grid_to_block $0) 2)) true))", "(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 2) false))", "(lambda (to_min_grid (grow (box_block (grid_to_block $0)) 2) true))", "(lambda (to_min_grid (grow (grid_to_block $0) 2) (negate_boolean false)))", "(lambda (to_min_grid (grow (grid_to_block $0) 2) true))", "(lambda (to_min_grid (grow (grid_to_block $0) 2) (is_tile (grid_to_block $0))))", "(lambda (to_min_grid (grow (grid_to_block $0) 2) (negate_boolean true)))", "(lambda (to_min_grid (grow (grid_to_block $0) 2) false))", "(lambda (to_min_grid (box_block (grow (grid_to_block $0) 2)) false))", "(lambda (to_min_grid (grow (grid_to_block $0) 2) (touches_any_boundary (grid_to_block $0))))"], "ac0a08a4.json": ["(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) false))", "(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) true))", "(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (fill_color (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) teal) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) true))", "(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (fill_color (remove_black_b (move (reflect (grid_to_block $0) false) 1 south false)) blue) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $1)) false))))))) true))", "(lambda (to_min_grid (grow (grid_to_block $0) (get_num_tiles (filter_block_tiles (remove_black_b (move (reflect (grid_to_block $0) false) 1 south true)) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))))) true))"], "ddf7fa4f.json": [], "82819916.json": [], "44d8ac46.json": [], "a65b410d.json": [], "d89b689b.json": [], "4be741c5.json": [], "5117e062.json": [], "80af3007.json": [], "56dc2b01.json": [], "5168d44c.json": [], "ea786f4a.json": [], "928ad970.json": [], "6f8cd79b.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) false))", "(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) false))", "(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 false))) true))", "(lambda (to_min_grid (filter_block_tiles (fill_snakewise (grid_to_block $0) (make_colorpair teal teal)) (lambda (is_exterior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 true))) false))", "(lambda (to_min_grid (filter_block_tiles (fill_color (grid_to_block $0) teal) (lambda (is_exterior $0 true))) true))", "(lambda (to_min_grid (filter_block_tiles (fill_snakewise (move (grid_to_block $0) 1 south false) (make_colorpair teal teal)) (lambda (is_exterior $0 true))) false))"], "a8d7556c.json": [], "72322fa7.json": [], "c909285e.json": [], "aedd82e4.json": ["(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) (nth_primary_color (grid_to_block $1) 2)))) true true))", "(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) blue))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block (get_block_center (tile_to_block $0))) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (fill_color (tile_to_block $0) blue) blue))) true false))", "(lambda (blocks_to_original_grid (map_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda (fill_color $0 blue))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (fill_color (tile_to_block $0) blue) blue))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (fill_color (tile_to_block $0) (nth_primary_color (grid_to_block $1) 0)) blue))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (tile_to_block $0) (nth_primary_color (grid_to_block $1) 2)))) true false))", "(lambda (to_original_grid_overlay (fill_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) false) blue) true))"], "b9b7f026.json": [], "1190e5a7.json": [], "a61ba2ce.json": [], "ff28f65a.json": [], "913fb3ed.json": [], "810b9b61.json": [], "a85d4709.json": [], "25ff71a9.json": ["(lambda (to_original_grid_overlay (move (replace_color (grid_to_block $0) orange red) 1 south false) false))", "(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south false) false))", "(lambda (to_original_grid_overlay (center_block_on_tile (grid_to_block $0) (block_to_tile (move_towards_until_edge (get_block_center (grid_to_block $0)) south))) false))", "(lambda (to_original_grid_overlay (remove_black_b (move (grid_to_block $0) 1 south false)) false))", "(lambda (to_original_grid_overlay (center_block_on_tile (grid_to_block $0) (get_block_center (move_towards_until_edge (get_block_center (grid_to_block $0)) south))) false))", "(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south false) (negate_boolean true)))", "(lambda (to_original_grid_overlay (move (box_block (grid_to_block $0)) 1 south false) false))", "(lambda (to_original_grid_overlay (move (remove_black_b (grid_to_block $0)) 1 south false) false))", "(lambda (to_original_grid_overlay (move (remove_color (grid_to_block $0) yellow) 1 south false) false))", "(lambda (to_original_grid_overlay (move (grid_to_block $0) 1 south (negate_boolean true)) false))", "(lambda (to_original_grid_overlay (move (duplicate (grid_to_block $0) east 1) 1 south false) false))", "(lambda (to_original_grid_overlay (box_block (move (grid_to_block $0) 1 south false)) false))"], "6d0aefbc.json": ["(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) false))", "(lambda (to_min_grid (remove_black_b (move (box_block (remove_black_b (reflect (grid_to_block $0) false))) 3 east true)) false))", "(lambda (to_min_grid (box_block (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true))) true))", "(lambda (to_min_grid (remove_black_b (move (reflect (grid_to_block $0) false) 3 east true)) true))", "(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) false) 3 east true)) true))"], "6855a6e4.json": [], "234bbc79.json": [], "9af7a82c.json": [], "f8c80d96.json": [], "32597951.json": [], "d037b0a7.json": ["(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) false true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) true true))", "(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 2) true))", "(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 2) false))", "(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 4) true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (extend_towards_until_edge $0 south))) false false))", "(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 3) false))", "(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 4) false))", "(lambda (to_original_grid_overlay (duplicate (remove_black_b (grid_to_block $0)) south 3) true))"], "f76d97a5.json": [], "ff805c23.json": [], "e40b9e2f.json": [], "db3e9e38.json": [], "cce03e0d.json": [], "88a62173.json": ["(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_rectangle (remove_color (grid_to_block $0) blue) true)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_rectangle (remove_color (grid_to_block $0) blue) false)) false))", "(lambda (to_min_grid (box_block (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) (is_interior (get_block_center (remove_color (grid_to_block $0) blue)) true))) true))"], "623ea044.json": [], "3bd67248.json": [], "6455b5f5.json": [], "6150a2bd.json": ["(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) false) false))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) true) false) true))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) true) false) false))", "(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) false) true) false))", "(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true) true))", "(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) true) false) false))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) false) true) true))", "(lambda (to_min_grid (reflect (reflect (grid_to_block $0) true) false) true))", "(lambda (to_min_grid (reflect (reflect (grid_to_block $0) false) true) false))", "(lambda (to_original_grid_overlay (reflect (reflect (grid_to_block $0) false) true) false))"], "6c434453.json": [], "a699fb00.json": [], "a5313dff.json": [], "b8cdaf2b.json": [], "d23f8c26.json": ["(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) true) (nth_primary_color (grid_to_block $1) 0)))) true false))", "(lambda (to_min_grid (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $0 false)) true) (nth_primary_color (grid_to_block $0) 0)) true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_exterior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_interior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false) (nth_primary_color (grid_to_block $1) 0)))) true false))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) true) (nth_primary_color (grid_to_block $1) 0)))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) false) (nth_primary_color (grid_to_block $1) 0)))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_interior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true true))", "(lambda (blocks_to_original_grid (map_tiles (find_tiles_by_black_b $0) (lambda (fill_color (merge_blocks (splitblocks_to_blocks (split_grid $1 false)) (is_exterior $0 true)) (nth_primary_color (grid_to_block $1) 0)))) true true))"], "7fe24cdd.json": [], "c1d99e64.json": [], "c8cbb738.json": [], "29623171.json": [], "67a423a3.json": [], "b190f7f5.json": [], "f8b3ba0a.json": [], "ae4f1146.json": [], "272f95fa.json": [], "d6ad076f.json": [], "995c5fa3.json": [], "1b2d62fb.json": [], "b60334d2.json": [], "3906de3d.json": [], "5bd6f4ac.json": [], "bb43febb.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) (nth_primary_color (grid_to_block $0) 3)) (lambda (is_interior $0 true))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) blue) true) true)) red) (lambda (is_interior $0 true))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) true) true)) red) (lambda (is_interior $0 true))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (grid_to_block $0)) red) (lambda (is_interior $0 true))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (reflect (reflect (grid_to_block $0) false) false)) red) (lambda (is_interior $0 true))) true))"], "673ef223.json": [], "f35d900a.json": [], "8f2ea7aa.json": [], "137eaa0f.json": [], "5c2c9af4.json": [], "bda2d7a6.json": [], "2281f1f4.json": [], "d10ecb37.json": [], "eb281b96.json": [], "7b6016b9.json": [], "9d9215db.json": [], "06df4c85.json": [], "e509e548.json": [], "b94a9452.json": [], "f15e1fac.json": [], "d4469b4b.json": [], "e98196ab.json": [], "a416b8f3.json": ["(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) true))", "(lambda (to_min_grid (duplicate (box_block (grid_to_block $0)) west 1) false))", "(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) (negate_boolean false)))", "(lambda (to_min_grid (duplicate (box_block (grid_to_block $0)) west 1) true))", "(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) (negate_boolean true)))", "(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) true))", "(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) false))", "(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) false))", "(lambda (to_min_grid (duplicate (grid_to_block $0) east 1) (negate_boolean false)))", "(lambda (to_min_grid (duplicate (grid_to_block $0) west 1) (negate_boolean true)))"], "b6afb2da.json": [], "85c4e7cd.json": [], "846bdb03.json": [], "0d3d703e.json": [], "1f876c06.json": [], "868de0fa.json": [], "2dc579da.json": [], "91413438.json": [], "c0f76784.json": [], "93b581b8.json": [], "10fcaaa3.json": [], "08ed6ac7.json": [], "6d58a25d.json": [], "8e1813be.json": [], "a78176bb.json": [], "8be77c9e.json": ["(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 south true)) true))", "(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) true) true) 3 south true)) true))", "(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) true) false) false) 3 south true)) true))", "(lambda (to_min_grid (box_block (move (reflect (grid_to_block $0) true) 3 south true)) false))", "(lambda (to_min_grid (box_block (move (reflect (reflect (reflect (grid_to_block $0) false) true) false) 3 south true)) true))"], "a79310a0.json": ["(lambda (to_original_grid_overlay (fill_color (remove_black_b (move (reflect (reflect (grid_to_block $0) true) true) 1 south false)) red) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (wrap_block (remove_black_b (move (grid_to_block $0) 1 south false)) invisible true) red) (lambda (is_interior $0 true))) false))", "(lambda (to_original_grid_overlay (move (fill_snakewise (first_of_sorted_object_list (find_same_color_blocks $0 true true) (lambda 1) true) (make_colorpair red red)) 1 south false) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (remove_black_b (move (grid_to_block $0) 1 south false)) red) (lambda (is_exterior $0 false))) false))", "(lambda (to_original_grid_overlay (fill_color (remove_black_b (move (grid_to_block $0) 1 south false)) red) false))", "(lambda (to_original_grid_overlay (move (replace_color (grid_to_block $0) teal red) 1 south false) false))", "(lambda (to_original_grid_overlay (fill_color (remove_black_b (move (reflect (reflect (grid_to_block $0) false) false) 1 south false)) red) false))"], "7df24a62.json": [], "952a094c.json": [], "b8825c91.json": ["(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) false) true) true))", "(lambda (to_min_grid (reflect (reflect (remove_color (grid_to_block $0) yellow) true) false) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) yellow) false) true)) true))", "(lambda (to_min_grid (remove_color (reflect (grid_to_block $0) false) yellow) true))", "(lambda (to_original_grid_overlay (remove_color (reflect (grid_to_block $0) false) yellow) true))", "(lambda (to_min_grid (remove_black_b (reflect (remove_color (grid_to_block $0) yellow) false)) true))", "(lambda (to_min_grid (replace_color (reflect (grid_to_block $0) false) yellow invisible) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (reflect (remove_color (grid_to_block $0) yellow) true) false)) true))", "(lambda (to_original_grid_overlay (reflect (remove_color (grid_to_block $0) yellow) false) true))", "(lambda (to_min_grid (reflect (remove_color (grid_to_block $0) yellow) false) true))", "(lambda (to_original_grid_overlay (remove_black_b (reflect (remove_color (grid_to_block $0) yellow) false)) true))"], "d90796e8.json": [], "0962bcdd.json": [], "469497ad.json": [], "d5d6de2d.json": ["(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (grid_to_block $1)))))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (reflect (grid_to_block $1) true) 1 south true)))))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (is_interior $0 true))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (merge_blocks (find_same_color_blocks $1 true false) false))))) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (fill_color (merge_blocks (find_same_color_blocks $0 true true) false) green) (lambda (negate_boolean (tile_overlaps_block $0 (remove_black_b (move (reflect (grid_to_block $1) true) 1 east true)))))) false))"], "e179c5f4.json": [], "178fcbfb.json": [], "6e82a1ae.json": [], "508bd3b6.json": [], "760b3cac.json": [], "a87f7484.json": ["(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) false))", "(lambda (to_min_grid (box_block (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false)) false))", "(lambda (to_min_grid (remove_color (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) blue) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false) true))", "(lambda (to_min_grid (remove_black_b (first_of_sorted_object_list (find_same_color_blocks $0 true false) (lambda (get_num_tiles $0)) false)) false))"], "97999447.json": [], "dbc1a6ce.json": [], "9aec4887.json": [], "22168020.json": [], "1caeab9d.json": [], "780d0b14.json": [], "ce9e57f2.json": [], "dae9d2b5.json": ["(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $1 $0 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $0 $1 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $1 $0 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $0 $1 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $1 $0 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (grow (grid_to_block $0) 1))) (lambda (lambda (color_logical $0 $1 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (negate_boolean true)) (lambda (lambda (color_logical $1 $0 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (remove_black_b (grid_to_block $0)))) (lambda (lambda (color_logical $1 $0 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 (is_tile (grid_to_block $0))) (lambda (lambda (color_logical $0 $1 pink lor)))))", "(lambda (overlap_split_blocks (split_grid $0 false) (lambda (lambda (color_logical $0 $1 pink lor)))))"], "d8c310e9.json": [], "90f3ed37.json": [], "c3f564a4.json": [], "91714a58.json": [], "d22278a0.json": [], "83302e8f.json": [], "d511f180.json": []}