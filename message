{"tasks": [{"examples": [{"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 2, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 2, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 2, "3,11": 0, "3,12": 0, "3,13": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 5, "5,1": 5, "5,2": 5, "5,3": 5, "5,4": 5, "5,5": 5, "5,6": 5, "5,7": 5, "5,8": 5, "5,9": 5, "5,10": 5, "5,11": 5, "5,12": 5, "5,13": 5, "6,0": 5, "6,1": 5, "6,2": 5, "6,3": 5, "6,4": 5, "6,5": 5, "6,6": 5, "6,7": 5, "6,8": 5, "6,9": 5, "6,10": 5, "6,11": 5, "6,12": 5, "6,13": 5, "7,0": 5, "7,1": 5, "7,2": 5, "7,3": 5, "7,4": 5, "7,5": 5, "7,6": 5, "7,7": 5, "7,8": 5, "7,9": 5, "7,10": 5, "7,11": 5, "7,12": 5, "7,13": 5, "8,0": 5, "8,1": 5, "8,2": 5, "8,3": 5, "8,4": 5, "8,5": 5, "8,6": 5, "8,7": 5, "8,8": 5, "8,9": 5, "8,10": 5, "8,11": 5, "8,12": 5, "8,13": 5, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 2, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "10,0": 0, "10,1": 2, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 2, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 2, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "4,0": 0, "4,1": 0, "4,2": 5, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 5, "4,9": 0, "4,10": 5, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 5, "5,1": 5, "5,2": 5, "5,3": 5, "5,4": 5, "5,5": 5, "5,6": 5, "5,7": 5, "5,8": 5, "5,9": 5, "5,10": 5, "5,11": 5, "5,12": 5, "5,13": 5, "6,0": 5, "6,1": 5, "6,2": 5, "6,3": 5, "6,4": 5, "6,5": 5, "6,6": 5, "6,7": 5, "6,8": 5, "6,9": 5, "6,10": 5, "6,11": 5, "6,12": 5, "6,13": 5, "7,0": 5, "7,1": 5, "7,2": 5, "7,3": 5, "7,4": 5, "7,5": 5, "7,6": 5, "7,7": 5, "7,8": 5, "7,9": 5, "7,10": 5, "7,11": 5, "7,12": 5, "7,13": 5, "8,0": 5, "8,1": 5, "8,2": 5, "8,3": 5, "8,4": 5, "8,5": 5, "8,6": 5, "8,7": 5, "8,8": 5, "8,9": 5, "8,10": 5, "8,11": 5, "8,12": 5, "8,13": 5, "9,0": 0, "9,1": 5, "9,2": 0, "9,3": 0, "9,4": 5, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 5, "9,10": 0, "9,11": 5, "9,12": 0, "9,13": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 0, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 5, "0,5": 5, "0,6": 5, "0,7": 5, "0,8": 5, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 3, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 5, "1,5": 5, "1,6": 5, "1,7": 5, "1,8": 5, "1,9": 3, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 3, "2,4": 5, "2,5": 5, "2,6": 5, "2,7": 5, "2,8": 5, "2,9": 0, "2,10": 0, "2,11": 3, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 5, "3,5": 5, "3,6": 5, "3,7": 5, "3,8": 5, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "4,0": 3, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 5, "4,5": 5, "4,6": 5, "4,7": 5, "4,8": 5, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 5, "5,5": 5, "5,6": 5, "5,7": 5, "5,8": 5, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 5, "6,5": 5, "6,6": 5, "6,7": 5, "6,8": 5, "6,9": 0, "6,10": 3, "6,11": 0, "6,12": 3, "6,13": 0, "7,0": 0, "7,1": 3, "7,2": 0, "7,3": 0, "7,4": 5, "7,5": 5, "7,6": 5, "7,7": 5, "7,8": 5, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 5, "8,5": 5, "8,6": 5, "8,7": 5, "8,8": 5, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "9,0": 0, "9,1": 0, "9,2": 3, "9,3": 0, "9,4": 5, "9,5": 5, "9,6": 5, "9,7": 5, "9,8": 5, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 3, "9,13": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 5, "10,5": 5, "10,6": 5, "10,7": 5, "10,8": 5, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 5, "11,5": 5, "11,6": 5, "11,7": 5, "11,8": 5, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 5, "12,5": 5, "12,6": 5, "12,7": 5, "12,8": 5, "12,9": 0, "12,10": 3, "12,11": 0, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 5, "13,5": 5, "13,6": 5, "13,7": 5, "13,8": 5, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 5, "0,5": 5, "0,6": 5, "0,7": 5, "0,8": 5, "0,9": 5, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 5, "1,5": 5, "1,6": 5, "1,7": 5, "1,8": 5, "1,9": 5, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 5, "2,4": 5, "2,5": 5, "2,6": 5, "2,7": 5, "2,8": 5, "2,9": 5, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 5, "3,5": 5, "3,6": 5, "3,7": 5, "3,8": 5, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 5, "4,4": 5, "4,5": 5, "4,6": 5, "4,7": 5, "4,8": 5, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 5, "5,5": 5, "5,6": 5, "5,7": 5, "5,8": 5, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 5, "6,5": 5, "6,6": 5, "6,7": 5, "6,8": 5, "6,9": 5, "6,10": 5, "6,11": 0, "6,12": 0, "6,13": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 5, "7,4": 5, "7,5": 5, "7,6": 5, "7,7": 5, "7,8": 5, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 5, "8,5": 5, "8,6": 5, "8,7": 5, "8,8": 5, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 5, "9,4": 5, "9,5": 5, "9,6": 5, "9,7": 5, "9,8": 5, "9,9": 5, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 5, "10,5": 5, "10,6": 5, "10,7": 5, "10,8": 5, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 5, "11,5": 5, "11,6": 5, "11,7": 5, "11,8": 5, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 5, "12,5": 5, "12,6": 5, "12,7": 5, "12,8": 5, "12,9": 5, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 5, "13,5": 5, "13,6": 5, "13,7": 5, "13,8": 5, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 1, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 1, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 1, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 1, "3,13": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 1, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "7,0": 5, "7,1": 5, "7,2": 5, "7,3": 5, "7,4": 5, "7,5": 5, "7,6": 5, "7,7": 5, "7,8": 5, "7,9": 5, "7,10": 5, "7,11": 5, "7,12": 5, "7,13": 5, "8,0": 5, "8,1": 5, "8,2": 5, "8,3": 5, "8,4": 5, "8,5": 5, "8,6": 5, "8,7": 5, "8,8": 5, "8,9": 5, "8,10": 5, "8,11": 5, "8,12": 5, "8,13": 5, "9,0": 0, "9,1": 1, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 1, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 1, "11,4": 0, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 1, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 5, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 5, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 5, "6,8": 5, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 5, "6,13": 0, "7,0": 5, "7,1": 5, "7,2": 5, "7,3": 5, "7,4": 5, "7,5": 5, "7,6": 5, "7,7": 5, "7,8": 5, "7,9": 5, "7,10": 5, "7,11": 5, "7,12": 5, "7,13": 5, "8,0": 5, "8,1": 5, "8,2": 5, "8,3": 5, "8,4": 5, "8,5": 5, "8,6": 5, "8,7": 5, "8,8": 5, "8,9": 5, "8,10": 5, "8,11": 5, "8,12": 5, "8,13": 5, "9,0": 0, "9,1": 5, "9,2": 0, "9,3": 5, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 5, "9,9": 0, "9,10": 0, "9,11": 5, "9,12": 0, "9,13": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 0, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 5, "0,6": 5, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 4, "1,3": 0, "1,4": 0, "1,5": 5, "1,6": 5, "1,7": 0, "1,8": 0, "1,9": 4, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 5, "2,6": 5, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 4, "3,4": 0, "3,5": 5, "3,6": 5, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "4,0": 0, "4,1": 4, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 5, "4,6": 5, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 5, "5,6": 5, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 5, "6,6": 5, "6,7": 4, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 4, "6,12": 0, "6,13": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 5, "7,6": 5, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 5, "8,6": 5, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 5, "9,6": 5, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 5, "10,6": 5, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 4, "11,2": 0, "11,3": 4, "11,4": 0, "11,5": 5, "11,6": 5, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 4, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 5, "12,6": 5, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 5, "13,6": 5, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 4, "13,13": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 5, "0,6": 5, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 5, "1,5": 5, "1,6": 5, "1,7": 5, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 5, "2,6": 5, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 5, "3,5": 5, "3,6": 5, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 5, "4,5": 5, "4,6": 5, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 5, "5,6": 5, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 5, "6,6": 5, "6,7": 5, "6,8": 5, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 5, "7,6": 5, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 5, "8,6": 5, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 5, "9,6": 5, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 5, "10,6": 5, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 5, "11,4": 5, "11,5": 5, "11,6": 5, "11,7": 5, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 5, "12,6": 5, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 5, "13,6": 5, "13,7": 5, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0}}}], "name": "4093f84a.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) (touches_any_boundary (grid_to_block $0))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 true false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 true false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_exterior (block_to_tile (grid_to_block $0)) false) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_exterior (block_to_tile (grid_to_block $0)) false) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (negate_boolean (negate_boolean false)) true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (negate_boolean (negate_boolean false)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) (negate_boolean false)))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) true)))) true true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) true)))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0)) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0)) (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) (negate_boolean (negate_boolean true))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) (negate_boolean (negate_boolean false))))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))) true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) true)))) (negate_boolean true) true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) true)))) (negate_boolean true) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false)))) true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false)))) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) true)))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) true)))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (grid_to_block $0)))))))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (grid_to_block $0)))))))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0)) (negate_boolean (negate_boolean true))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0)) (negate_boolean (negate_boolean false))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) north_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) south_west) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) (touches_any_boundary (grid_to_block $1)))))) true true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) (touches_any_boundary (grid_to_block $1)))))) true false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) north_west) true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) north_west) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) south_west) true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) (negate_boolean (negate_boolean (negate_boolean true)))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) (negate_boolean (negate_boolean (negate_boolean false)))))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) (touches_any_boundary (grid_to_block $1)))))) false true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda true))) (touches_any_boundary (grid_to_block $1)))))) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) north_east) true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 true (touches_any_boundary (grid_to_block $1)))))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) north_east) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda false))) (touches_any_boundary (grid_to_block $1)))))) true true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (find_blocks_by_black_b $1 (touches_any_boundary (extend_towards_until $0 north (lambda false))) (touches_any_boundary (grid_to_block $1)))))) true false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean true)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean true)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (negate_boolean true) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (tile_overlaps_block (block_to_tile (grid_to_block $0)) (grid_to_block $0))) (negate_boolean true) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) false)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) false)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_interior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean false)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_interior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean false)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) false)) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) false)) (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_interior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean true)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_interior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean true)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean false)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean false)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean false)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean false)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean true)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean true)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean true)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (negate_boolean (negate_boolean (negate_boolean true)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (negate_boolean (touches_any_boundary (grid_to_block $0)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (negate_boolean (touches_any_boundary (grid_to_block $0)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) false)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) false)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) north_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) (touches_any_boundary (grid_to_block $0)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) (touches_any_boundary (grid_to_block $0)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) south_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (touches_boundary (grid_to_block $0) south_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) true)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) true)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean (negate_boolean true))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean (negate_boolean true))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean (negate_boolean false))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true))) (negate_boolean (negate_boolean (negate_boolean false))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) (is_tile (grid_to_block $0)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) (is_tile (grid_to_block $0)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) false)) (negate_boolean (negate_boolean true))))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) false)) (negate_boolean (negate_boolean false))))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) false) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true))) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true))) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0)))) (negate_boolean false) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0)))) (negate_boolean false) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (tile_to_block (block_to_tile (grid_to_block $0))) west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) south_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) south_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) north_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) north_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) false) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) false) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0))) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0))) (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) north_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) south_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) south_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) south_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false true) true) south_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 true false) true) west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) south) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (merge_blocks (find_same_color_blocks $0 false false) true) south) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) west (lambda true)) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) west (lambda true)) north_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) east (lambda false)) south) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) east (lambda false)) south) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) west (lambda true)) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) west (lambda true)) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) north (lambda true)) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (extend_towards_until (block_to_tile (grid_to_block $0)) north (lambda true)) south_west) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_any_boundary (grid_to_block $0))) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_any_boundary (grid_to_block $0))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) true)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) false)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) true true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) true false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) true true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) true false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) true true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) true false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) true true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) true false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false true)))) true true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false true)))) true false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true true)))) true true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true true)))) true false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false true)))) false true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false true)))) false false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_black_b $1 true true)))) true true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_black_b $1 true true)))) true false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) false true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) false false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true true)))) false true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true true)))) false false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) false true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) false false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) false true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) false false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) false (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) false (negate_boolean false)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) (negate_boolean true) true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) (negate_boolean true) false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) true (negate_boolean (negate_boolean true))))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) true (negate_boolean (negate_boolean false))))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false false)))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) (negate_boolean false) true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 true false)))) (negate_boolean false) false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) (negate_boolean true) true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_same_color_blocks $1 false true)))) (negate_boolean true) false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false true)))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_inferred_b $1 false true)))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) (is_tile (grid_to_block $0)) true))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) (is_tile (grid_to_block $0)) false))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_black_b $1 true true)))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (map_tiles (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true)) (lambda (singleton_block (find_blocks_by_black_b $1 true true)))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) true))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false false) (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (is_symmetrical (grid_to_block $0) (is_symmetrical (grid_to_block $0) false))))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_any_boundary (grid_to_block $0))) (is_interior (block_to_tile (grid_to_block $0)) true) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (is_interior (block_to_tile (grid_to_block $0)) (touches_any_boundary (grid_to_block $0))) (touches_any_boundary (grid_to_block $0))) (is_interior (block_to_tile (grid_to_block $0)) true) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) (touches_any_boundary (grid_to_block $0))))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0)))) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0)))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0)))) (negate_boolean (negate_boolean true)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0)))) (negate_boolean (negate_boolean true)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean false) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean false) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (move_towards_until (block_to_tile (grid_to_block $0)) west (lambda true))) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean false)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (move_towards_until (block_to_tile (grid_to_block $0)) west (lambda true))) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean false)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true (negate_boolean (negate_boolean true))))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true (negate_boolean (negate_boolean false))))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (singleton_block (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))))) false)) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (singleton_block (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))))) false)) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (singleton_block (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))))) false)) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (singleton_block (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))))) false)) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean false) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean false) (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean false)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean false)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0)))) (negate_boolean (negate_boolean (negate_boolean true))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) (is_exterior (block_to_tile (grid_to_block $0)) (is_tile (grid_to_block $0)))) (negate_boolean (negate_boolean (negate_boolean true))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true (negate_boolean (negate_boolean (negate_boolean true)))))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) true (negate_boolean (negate_boolean (negate_boolean false)))))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean false)) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean false)) (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_west) false))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))))) true))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_west) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_west) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) north_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean (negate_boolean false))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (negate_boolean (negate_boolean (negate_boolean false))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) (lambda 5) true)) true) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) (lambda 5) true)) true) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) (lambda 8) false)) false) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (map_tiles (find_tiles_by_black_b $0) (lambda (singleton_block (tiles_to_blocks (find_tiles_by_black_b $1))))) (lambda 8) false)) false) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_east) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 1) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south_east) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (tiles_to_blocks (find_tiles_by_black_b $0)) (lambda 6) true)) (touches_any_boundary (grid_to_block $0))) (touches_boundary (grid_to_block $0) south) true))"]}], "programTimeout": 0.1}