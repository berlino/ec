{"tasks": [{"examples": [{"inputs": [{"grid": {"0,0": 1, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 1, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 0, "0,15": 0, "0,16": 0, "0,17": 0, "0,18": 0, "0,19": 0, "0,20": 0, "0,21": 0, "0,22": 5, "0,23": 0, "0,24": 0, "0,25": 0, "0,26": 0, "0,27": 0, "0,28": 0, "0,29": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 0, "1,15": 5, "1,16": 0, "1,17": 0, "1,18": 0, "1,19": 0, "1,20": 0, "1,21": 0, "1,22": 0, "1,23": 0, "1,24": 0, "1,25": 0, "1,26": 0, "1,27": 0, "1,28": 0, "1,29": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 5, "2,11": 0, "2,12": 0, "2,13": 0, "2,14": 0, "2,15": 0, "2,16": 0, "2,17": 0, "2,18": 0, "2,19": 0, "2,20": 0, "2,21": 0, "2,22": 0, "2,23": 0, "2,24": 0, "2,25": 0, "2,26": 1, "2,27": 0, "2,28": 0, "2,29": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 5, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "3,14": 0, "3,15": 5, "3,16": 0, "3,17": 0, "3,18": 0, "3,19": 0, "3,20": 0, "3,21": 0, "3,22": 1, "3,23": 0, "3,24": 0, "3,25": 0, "3,26": 0, "3,27": 0, "3,28": 0, "3,29": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 5, "4,4": 1, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 5, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 1, "4,13": 1, "4,14": 0, "4,15": 1, "4,16": 0, "4,17": 0, "4,18": 0, "4,19": 1, "4,20": 0, "4,21": 0, "4,22": 0, "4,23": 0, "4,24": 0, "4,25": 0, "4,26": 0, "4,27": 0, "4,28": 0, "4,29": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "5,14": 0, "5,15": 0, "5,16": 0, "5,17": 0, "5,18": 1, "5,19": 0, "5,20": 0, "5,21": 0, "5,22": 0, "5,23": 0, "5,24": 0, "5,25": 0, "5,26": 0, "5,27": 0, "5,28": 0, "5,29": 1, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 5, "6,5": 0, "6,6": 0, "6,7": 1, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "6,14": 0, "6,15": 0, "6,16": 0, "6,17": 0, "6,18": 0, "6,19": 0, "6,20": 0, "6,21": 0, "6,22": 0, "6,23": 0, "6,24": 0, "6,25": 0, "6,26": 0, "6,27": 0, "6,28": 0, "6,29": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 5, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "7,14": 0, "7,15": 0, "7,16": 0, "7,17": 0, "7,18": 0, "7,19": 0, "7,20": 0, "7,21": 0, "7,22": 0, "7,23": 0, "7,24": 1, "7,25": 0, "7,26": 0, "7,27": 0, "7,28": 0, "7,29": 0, "8,0": 0, "8,1": 0, "8,2": 5, "8,3": 0, "8,4": 1, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 5, "8,12": 0, "8,13": 0, "8,14": 0, "8,15": 1, "8,16": 0, "8,17": 1, "8,18": 5, "8,19": 1, "8,20": 0, "8,21": 5, "8,22": 0, "8,23": 0, "8,24": 0, "8,25": 0, "8,26": 0, "8,27": 1, "8,28": 0, "8,29": 0, "9,0": 5, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 1, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "9,14": 0, "9,15": 0, "9,16": 0, "9,17": 0, "9,18": 0, "9,19": 0, "9,20": 0, "9,21": 0, "9,22": 0, "9,23": 0, "9,24": 0, "9,25": 0, "9,26": 0, "9,27": 0, "9,28": 0, "9,29": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "10,14": 0, "10,15": 0, "10,16": 0, "10,17": 3, "10,18": 3, "10,19": 0, "10,20": 0, "10,21": 1, "10,22": 0, "10,23": 0, "10,24": 0, "10,25": 0, "10,26": 0, "10,27": 0, "10,28": 0, "10,29": 0, "11,0": 5, "11,1": 0, "11,2": 5, "11,3": 0, "11,4": 0, "11,5": 1, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 1, "11,14": 1, "11,15": 0, "11,16": 0, "11,17": 3, "11,18": 3, "11,19": 3, "11,20": 0, "11,21": 0, "11,22": 0, "11,23": 0, "11,24": 0, "11,25": 1, "11,26": 0, "11,27": 0, "11,28": 1, "11,29": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "12,14": 0, "12,15": 0, "12,16": 0, "12,17": 3, "12,18": 0, "12,19": 3, "12,20": 0, "12,21": 0, "12,22": 5, "12,23": 0, "12,24": 0, "12,25": 0, "12,26": 0, "12,27": 0, "12,28": 0, "12,29": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0, "13,14": 0, "13,15": 1, "13,16": 0, "13,17": 3, "13,18": 3, "13,19": 3, "13,20": 0, "13,21": 0, "13,22": 0, "13,23": 0, "13,24": 0, "13,25": 0, "13,26": 0, "13,27": 5, "13,28": 0, "13,29": 0, "14,0": 0, "14,1": 0, "14,2": 0, "14,3": 5, "14,4": 0, "14,5": 0, "14,6": 0, "14,7": 5, "14,8": 0, "14,9": 0, "14,10": 0, "14,11": 5, "14,12": 0, "14,13": 0, "14,14": 0, "14,15": 0, "14,16": 0, "14,17": 0, "14,18": 3, "14,19": 3, "14,20": 0, "14,21": 0, "14,22": 0, "14,23": 0, "14,24": 0, "14,25": 0, "14,26": 0, "14,27": 0, "14,28": 0, "14,29": 0, "15,0": 5, "15,1": 0, "15,2": 0, "15,3": 0, "15,4": 0, "15,5": 0, "15,6": 0, "15,7": 0, "15,8": 0, "15,9": 0, "15,10": 0, "15,11": 0, "15,12": 0, "15,13": 0, "15,14": 0, "15,15": 0, "15,16": 0, "15,17": 0, "15,18": 0, "15,19": 0, "15,20": 0, "15,21": 0, "15,22": 0, "15,23": 0, "15,24": 0, "15,25": 0, "15,26": 0, "15,27": 0, "15,28": 1, "15,29": 0, "16,0": 0, "16,1": 0, "16,2": 0, "16,3": 0, "16,4": 0, "16,5": 0, "16,6": 0, "16,7": 0, "16,8": 1, "16,9": 0, "16,10": 0, "16,11": 0, "16,12": 5, "16,13": 0, "16,14": 0, "16,15": 0, "16,16": 0, "16,17": 0, "16,18": 0, "16,19": 0, "16,20": 0, "16,21": 0, "16,22": 1, "16,23": 0, "16,24": 0, "16,25": 0, "16,26": 0, "16,27": 0, "16,28": 0, "16,29": 1, "17,0": 0, "17,1": 0, "17,2": 0, "17,3": 0, "17,4": 0, "17,5": 0, "17,6": 0, "17,7": 0, "17,8": 0, "17,9": 0, "17,10": 0, "17,11": 0, "17,12": 0, "17,13": 0, "17,14": 0, "17,15": 0, "17,16": 0, "17,17": 0, "17,18": 0, "17,19": 1, "17,20": 0, "17,21": 5, "17,22": 0, "17,23": 0, "17,24": 0, "17,25": 0, "17,26": 0, "17,27": 0, "17,28": 0, "17,29": 0, "18,0": 0, "18,1": 1, "18,2": 0, "18,3": 0, "18,4": 0, "18,5": 0, "18,6": 0, "18,7": 1, "18,8": 0, "18,9": 0, "18,10": 0, "18,11": 0, "18,12": 0, "18,13": 0, "18,14": 0, "18,15": 0, "18,16": 0, "18,17": 0, "18,18": 0, "18,19": 0, "18,20": 0, "18,21": 0, "18,22": 0, "18,23": 0, "18,24": 0, "18,25": 1, "18,26": 0, "18,27": 0, "18,28": 0, "18,29": 0, "19,0": 0, "19,1": 0, "19,2": 0, "19,3": 0, "19,4": 1, "19,5": 0, "19,6": 0, "19,7": 0, "19,8": 0, "19,9": 0, "19,10": 0, "19,11": 0, "19,12": 0, "19,13": 1, "19,14": 0, "19,15": 5, "19,16": 0, "19,17": 0, "19,18": 0, "19,19": 0, "19,20": 1, "19,21": 0, "19,22": 5, "19,23": 0, "19,24": 0, "19,25": 0, "19,26": 0, "19,27": 0, "19,28": 0, "19,29": 1, "20,0": 0, "20,1": 1, "20,2": 0, "20,3": 0, "20,4": 0, "20,5": 0, "20,6": 0, "20,7": 0, "20,8": 0, "20,9": 0, "20,10": 0, "20,11": 0, "20,12": 0, "20,13": 0, "20,14": 0, "20,15": 0, "20,16": 5, "20,17": 0, "20,18": 0, "20,19": 0, "20,20": 0, "20,21": 0, "20,22": 0, "20,23": 1, "20,24": 0, "20,25": 0, "20,26": 0, "20,27": 0, "20,28": 0, "20,29": 0, "21,0": 0, "21,1": 0, "21,2": 0, "21,3": 0, "21,4": 1, "21,5": 0, "21,6": 0, "21,7": 0, "21,8": 0, "21,9": 0, "21,10": 0, "21,11": 0, "21,12": 0, "21,13": 0, "21,14": 0, "21,15": 0, "21,16": 0, "21,17": 0, "21,18": 0, "21,19": 0, "21,20": 0, "21,21": 0, "21,22": 0, "21,23": 0, "21,24": 0, "21,25": 0, "21,26": 0, "21,27": 0, "21,28": 0, "21,29": 0, "22,0": 0, "22,1": 0, "22,2": 0, "22,3": 0, "22,4": 0, "22,5": 0, "22,6": 0, "22,7": 0, "22,8": 0, "22,9": 0, "22,10": 0, "22,11": 0, "22,12": 0, "22,13": 0, "22,14": 0, "22,15": 0, "22,16": 0, "22,17": 0, "22,18": 0, "22,19": 0, "22,20": 0, "22,21": 0, "22,22": 0, "22,23": 1, "22,24": 5, "22,25": 0, "22,26": 0, "22,27": 0, "22,28": 0, "22,29": 0, "23,0": 1, "23,1": 0, "23,2": 0, "23,3": 0, "23,4": 0, "23,5": 0, "23,6": 0, "23,7": 0, "23,8": 0, "23,9": 0, "23,10": 0, "23,11": 0, "23,12": 1, "23,13": 0, "23,14": 0, "23,15": 0, "23,16": 0, "23,17": 0, "23,18": 0, "23,19": 0, "23,20": 0, "23,21": 1, "23,22": 0, "23,23": 0, "23,24": 1, "23,25": 0, "23,26": 0, "23,27": 0, "23,28": 0, "23,29": 1, "24,0": 0, "24,1": 0, "24,2": 0, "24,3": 0, "24,4": 0, "24,5": 0, "24,6": 0, "24,7": 1, "24,8": 0, "24,9": 0, "24,10": 0, "24,11": 0, "24,12": 0, "24,13": 0, "24,14": 0, "24,15": 5, "24,16": 0, "24,17": 0, "24,18": 0, "24,19": 0, "24,20": 0, "24,21": 0, "24,22": 0, "24,23": 0, "24,24": 0, "24,25": 0, "24,26": 0, "24,27": 0, "24,28": 0, "24,29": 0, "25,0": 0, "25,1": 0, "25,2": 0, "25,3": 0, "25,4": 0, "25,5": 0, "25,6": 0, "25,7": 0, "25,8": 0, "25,9": 0, "25,10": 0, "25,11": 0, "25,12": 0, "25,13": 0, "25,14": 0, "25,15": 0, "25,16": 0, "25,17": 0, "25,18": 0, "25,19": 0, "25,20": 1, "25,21": 0, "25,22": 1, "25,23": 0, "25,24": 0, "25,25": 0, "25,26": 0, "25,27": 0, "25,28": 0, "25,29": 0, "26,0": 0, "26,1": 0, "26,2": 0, "26,3": 0, "26,4": 0, "26,5": 0, "26,6": 0, "26,7": 0, "26,8": 0, "26,9": 0, "26,10": 0, "26,11": 0, "26,12": 0, "26,13": 5, "26,14": 0, "26,15": 0, "26,16": 0, "26,17": 0, "26,18": 0, "26,19": 0, "26,20": 0, "26,21": 0, "26,22": 0, "26,23": 0, "26,24": 1, "26,25": 0, "26,26": 1, "26,27": 0, "26,28": 0, "26,29": 5, "27,0": 0, "27,1": 0, "27,2": 0, "27,3": 0, "27,4": 0, "27,5": 0, "27,6": 0, "27,7": 1, "27,8": 1, "27,9": 0, "27,10": 0, "27,11": 0, "27,12": 0, "27,13": 0, "27,14": 0, "27,15": 0, "27,16": 0, "27,17": 0, "27,18": 0, "27,19": 0, "27,20": 0, "27,21": 0, "27,22": 0, "27,23": 0, "27,24": 0, "27,25": 5, "27,26": 0, "27,27": 0, "27,28": 0, "27,29": 0, "28,0": 0, "28,1": 0, "28,2": 0, "28,3": 0, "28,4": 0, "28,5": 0, "28,6": 0, "28,7": 0, "28,8": 0, "28,9": 0, "28,10": 0, "28,11": 0, "28,12": 0, "28,13": 5, "28,14": 0, "28,15": 0, "28,16": 0, "28,17": 5, "28,18": 0, "28,19": 0, "28,20": 0, "28,21": 5, "28,22": 0, "28,23": 0, "28,24": 0, "28,25": 5, "28,26": 0, "28,27": 0, "28,28": 0, "28,29": 0, "29,0": 0, "29,1": 0, "29,2": 0, "29,3": 0, "29,4": 0, "29,5": 0, "29,6": 5, "29,7": 0, "29,8": 0, "29,9": 0, "29,10": 1, "29,11": 0, "29,12": 0, "29,13": 0, "29,14": 0, "29,15": 0, "29,16": 0, "29,17": 0, "29,18": 0, "29,19": 0, "29,20": 0, "29,21": 0, "29,22": 0, "29,23": 0, "29,24": 0, "29,25": 0, "29,26": 0, "29,27": 0, "29,28": 0, "29,29": 0}}], "output": {"grid": {"0,0": 3, "0,1": 3, "0,2": 0, "1,0": 3, "1,1": 3, "1,2": 3, "2,0": 3, "2,1": 0, "2,2": 3, "3,0": 3, "3,1": 3, "3,2": 3, "4,0": 0, "4,1": 3, "4,2": 3}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 2, "0,11": 2, "0,12": 0, "0,13": 0, "0,14": 0, "0,15": 0, "0,16": 0, "0,17": 0, "0,18": 0, "0,19": 0, "0,20": 0, "0,21": 0, "0,22": 0, "0,23": 2, "0,24": 0, "0,25": 0, "0,26": 0, "0,27": 0, "0,28": 0, "0,29": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 2, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 0, "1,15": 0, "1,16": 0, "1,17": 0, "1,18": 0, "1,19": 0, "1,20": 0, "1,21": 0, "1,22": 0, "1,23": 0, "1,24": 0, "1,25": 0, "1,26": 0, "1,27": 0, "1,28": 0, "1,29": 0, "2,0": 2, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 2, "2,8": 0, "2,9": 0, "2,10": 2, "2,11": 0, "2,12": 0, "2,13": 0, "2,14": 0, "2,15": 0, "2,16": 0, "2,17": 0, "2,18": 0, "2,19": 0, "2,20": 0, "2,21": 0, "2,22": 0, "2,23": 0, "2,24": 0, "2,25": 0, "2,26": 0, "2,27": 0, "2,28": 0, "2,29": 0, "3,0": 2, "3,1": 0, "3,2": 2, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 2, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "3,14": 0, "3,15": 0, "3,16": 0, "3,17": 0, "3,18": 0, "3,19": 0, "3,20": 0, "3,21": 0, "3,22": 0, "3,23": 0, "3,24": 0, "3,25": 0, "3,26": 0, "3,27": 2, "3,28": 0, "3,29": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 2, "4,14": 0, "4,15": 0, "4,16": 0, "4,17": 0, "4,18": 0, "4,19": 0, "4,20": 0, "4,21": 0, "4,22": 0, "4,23": 0, "4,24": 0, "4,25": 0, "4,26": 0, "4,27": 0, "4,28": 0, "4,29": 0, "5,0": 0, "5,1": 0, "5,2": 2, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 2, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "5,14": 0, "5,15": 0, "5,16": 0, "5,17": 0, "5,18": 0, "5,19": 0, "5,20": 0, "5,21": 0, "5,22": 0, "5,23": 0, "5,24": 0, "5,25": 0, "5,26": 0, "5,27": 0, "5,28": 0, "5,29": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 2, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "6,14": 0, "6,15": 0, "6,16": 0, "6,17": 0, "6,18": 0, "6,19": 0, "6,20": 0, "6,21": 0, "6,22": 0, "6,23": 0, "6,24": 0, "6,25": 0, "6,26": 0, "6,27": 0, "6,28": 0, "6,29": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "7,14": 0, "7,15": 0, "7,16": 0, "7,17": 0, "7,18": 0, "7,19": 0, "7,20": 2, "7,21": 0, "7,22": 0, "7,23": 0, "7,24": 0, "7,25": 0, "7,26": 0, "7,27": 2, "7,28": 0, "7,29": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "8,14": 0, "8,15": 0, "8,16": 0, "8,17": 0, "8,18": 0, "8,19": 0, "8,20": 2, "8,21": 0, "8,22": 0, "8,23": 0, "8,24": 0, "8,25": 0, "8,26": 0, "8,27": 0, "8,28": 0, "8,29": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 2, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 4, "9,13": 0, "9,14": 0, "9,15": 0, "9,16": 0, "9,17": 0, "9,18": 0, "9,19": 0, "9,20": 0, "9,21": 0, "9,22": 0, "9,23": 2, "9,24": 0, "9,25": 0, "9,26": 0, "9,27": 0, "9,28": 0, "9,29": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 4, "10,12": 4, "10,13": 4, "10,14": 0, "10,15": 0, "10,16": 0, "10,17": 0, "10,18": 0, "10,19": 0, "10,20": 0, "10,21": 0, "10,22": 2, "10,23": 0, "10,24": 0, "10,25": 0, "10,26": 0, "10,27": 0, "10,28": 0, "10,29": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 2, "11,4": 0, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 4, "11,13": 4, "11,14": 0, "11,15": 0, "11,16": 0, "11,17": 0, "11,18": 0, "11,19": 0, "11,20": 0, "11,21": 0, "11,22": 0, "11,23": 0, "11,24": 0, "11,25": 0, "11,26": 0, "11,27": 0, "11,28": 0, "11,29": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 2, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "12,14": 0, "12,15": 0, "12,16": 0, "12,17": 0, "12,18": 0, "12,19": 0, "12,20": 0, "12,21": 0, "12,22": 0, "12,23": 0, "12,24": 0, "12,25": 0, "12,26": 0, "12,27": 0, "12,28": 0, "12,29": 2, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0, "13,14": 0, "13,15": 0, "13,16": 0, "13,17": 0, "13,18": 0, "13,19": 0, "13,20": 0, "13,21": 0, "13,22": 0, "13,23": 0, "13,24": 0, "13,25": 0, "13,26": 0, "13,27": 0, "13,28": 0, "13,29": 2, "14,0": 0, "14,1": 0, "14,2": 0, "14,3": 0, "14,4": 0, "14,5": 0, "14,6": 0, "14,7": 0, "14,8": 2, "14,9": 0, "14,10": 0, "14,11": 0, "14,12": 0, "14,13": 0, "14,14": 0, "14,15": 0, "14,16": 0, "14,17": 0, "14,18": 0, "14,19": 0, "14,20": 0, "14,21": 0, "14,22": 0, "14,23": 0, "14,24": 0, "14,25": 0, "14,26": 0, "14,27": 0, "14,28": 0, "14,29": 0, "15,0": 0, "15,1": 0, "15,2": 0, "15,3": 0, "15,4": 0, "15,5": 0, "15,6": 0, "15,7": 0, "15,8": 0, "15,9": 0, "15,10": 0, "15,11": 0, "15,12": 0, "15,13": 0, "15,14": 0, "15,15": 0, "15,16": 0, "15,17": 0, "15,18": 0, "15,19": 0, "15,20": 0, "15,21": 0, "15,22": 0, "15,23": 0, "15,24": 0, "15,25": 0, "15,26": 0, "15,27": 0, "15,28": 0, "15,29": 0, "16,0": 0, "16,1": 0, "16,2": 0, "16,3": 0, "16,4": 0, "16,5": 0, "16,6": 0, "16,7": 0, "16,8": 0, "16,9": 0, "16,10": 0, "16,11": 0, "16,12": 0, "16,13": 0, "16,14": 0, "16,15": 0, "16,16": 0, "16,17": 0, "16,18": 0, "16,19": 0, "16,20": 0, "16,21": 0, "16,22": 0, "16,23": 0, "16,24": 0, "16,25": 0, "16,26": 0, "16,27": 0, "16,28": 0, "16,29": 0, "17,0": 0, "17,1": 0, "17,2": 0, "17,3": 0, "17,4": 0, "17,5": 0, "17,6": 0, "17,7": 0, "17,8": 0, "17,9": 0, "17,10": 0, "17,11": 0, "17,12": 0, "17,13": 0, "17,14": 0, "17,15": 0, "17,16": 0, "17,17": 0, "17,18": 0, "17,19": 2, "17,20": 0, "17,21": 0, "17,22": 0, "17,23": 0, "17,24": 0, "17,25": 2, "17,26": 0, "17,27": 0, "17,28": 0, "17,29": 0, "18,0": 0, "18,1": 0, "18,2": 0, "18,3": 0, "18,4": 0, "18,5": 0, "18,6": 0, "18,7": 0, "18,8": 0, "18,9": 0, "18,10": 0, "18,11": 0, "18,12": 0, "18,13": 0, "18,14": 0, "18,15": 0, "18,16": 0, "18,17": 0, "18,18": 0, "18,19": 0, "18,20": 0, "18,21": 0, "18,22": 0, "18,23": 0, "18,24": 0, "18,25": 0, "18,26": 0, "18,27": 0, "18,28": 2, "18,29": 0, "19,0": 0, "19,1": 2, "19,2": 0, "19,3": 0, "19,4": 0, "19,5": 0, "19,6": 0, "19,7": 0, "19,8": 0, "19,9": 0, "19,10": 0, "19,11": 0, "19,12": 0, "19,13": 0, "19,14": 0, "19,15": 0, "19,16": 2, "19,17": 0, "19,18": 0, "19,19": 0, "19,20": 0, "19,21": 0, "19,22": 0, "19,23": 0, "19,24": 0, "19,25": 0, "19,26": 0, "19,27": 0, "19,28": 0, "19,29": 0, "20,0": 0, "20,1": 0, "20,2": 0, "20,3": 0, "20,4": 0, "20,5": 0, "20,6": 0, "20,7": 0, "20,8": 2, "20,9": 0, "20,10": 0, "20,11": 0, "20,12": 0, "20,13": 0, "20,14": 0, "20,15": 0, "20,16": 0, "20,17": 0, "20,18": 0, "20,19": 0, "20,20": 0, "20,21": 0, "20,22": 0, "20,23": 0, "20,24": 0, "20,25": 0, "20,26": 0, "20,27": 0, "20,28": 2, "20,29": 0, "21,0": 0, "21,1": 0, "21,2": 0, "21,3": 0, "21,4": 0, "21,5": 0, "21,6": 0, "21,7": 0, "21,8": 0, "21,9": 0, "21,10": 0, "21,11": 0, "21,12": 0, "21,13": 0, "21,14": 0, "21,15": 0, "21,16": 0, "21,17": 0, "21,18": 0, "21,19": 2, "21,20": 0, "21,21": 0, "21,22": 0, "21,23": 0, "21,24": 0, "21,25": 0, "21,26": 0, "21,27": 0, "21,28": 0, "21,29": 0, "22,0": 0, "22,1": 0, "22,2": 0, "22,3": 0, "22,4": 0, "22,5": 0, "22,6": 0, "22,7": 0, "22,8": 0, "22,9": 0, "22,10": 0, "22,11": 0, "22,12": 0, "22,13": 0, "22,14": 0, "22,15": 0, "22,16": 0, "22,17": 0, "22,18": 0, "22,19": 0, "22,20": 0, "22,21": 0, "22,22": 0, "22,23": 0, "22,24": 0, "22,25": 0, "22,26": 0, "22,27": 0, "22,28": 0, "22,29": 0, "23,0": 0, "23,1": 0, "23,2": 2, "23,3": 0, "23,4": 0, "23,5": 0, "23,6": 2, "23,7": 0, "23,8": 0, "23,9": 0, "23,10": 0, "23,11": 0, "23,12": 0, "23,13": 0, "23,14": 0, "23,15": 0, "23,16": 0, "23,17": 0, "23,18": 0, "23,19": 0, "23,20": 0, "23,21": 0, "23,22": 0, "23,23": 0, "23,24": 0, "23,25": 0, "23,26": 0, "23,27": 0, "23,28": 0, "23,29": 0, "24,0": 0, "24,1": 0, "24,2": 0, "24,3": 0, "24,4": 0, "24,5": 0, "24,6": 0, "24,7": 0, "24,8": 0, "24,9": 0, "24,10": 0, "24,11": 0, "24,12": 0, "24,13": 0, "24,14": 0, "24,15": 0, "24,16": 0, "24,17": 0, "24,18": 0, "24,19": 0, "24,20": 0, "24,21": 0, "24,22": 0, "24,23": 0, "24,24": 0, "24,25": 0, "24,26": 0, "24,27": 0, "24,28": 0, "24,29": 0, "25,0": 0, "25,1": 0, "25,2": 0, "25,3": 0, "25,4": 2, "25,5": 0, "25,6": 0, "25,7": 0, "25,8": 0, "25,9": 0, "25,10": 0, "25,11": 0, "25,12": 0, "25,13": 0, "25,14": 2, "25,15": 0, "25,16": 0, "25,17": 0, "25,18": 0, "25,19": 0, "25,20": 0, "25,21": 0, "25,22": 0, "25,23": 0, "25,24": 0, "25,25": 0, "25,26": 0, "25,27": 0, "25,28": 0, "25,29": 0, "26,0": 0, "26,1": 0, "26,2": 0, "26,3": 0, "26,4": 0, "26,5": 0, "26,6": 2, "26,7": 0, "26,8": 0, "26,9": 0, "26,10": 0, "26,11": 0, "26,12": 0, "26,13": 0, "26,14": 0, "26,15": 0, "26,16": 0, "26,17": 0, "26,18": 0, "26,19": 0, "26,20": 0, "26,21": 0, "26,22": 0, "26,23": 0, "26,24": 0, "26,25": 0, "26,26": 0, "26,27": 0, "26,28": 0, "26,29": 0, "27,0": 0, "27,1": 0, "27,2": 0, "27,3": 0, "27,4": 0, "27,5": 0, "27,6": 0, "27,7": 0, "27,8": 0, "27,9": 0, "27,10": 0, "27,11": 0, "27,12": 0, "27,13": 0, "27,14": 0, "27,15": 0, "27,16": 0, "27,17": 2, "27,18": 2, "27,19": 0, "27,20": 0, "27,21": 2, "27,22": 0, "27,23": 0, "27,24": 0, "27,25": 0, "27,26": 0, "27,27": 0, "27,28": 0, "27,29": 0, "28,0": 0, "28,1": 0, "28,2": 0, "28,3": 0, "28,4": 0, "28,5": 0, "28,6": 0, "28,7": 0, "28,8": 0, "28,9": 0, "28,10": 0, "28,11": 0, "28,12": 0, "28,13": 0, "28,14": 0, "28,15": 0, "28,16": 0, "28,17": 0, "28,18": 0, "28,19": 0, "28,20": 0, "28,21": 0, "28,22": 0, "28,23": 0, "28,24": 0, "28,25": 0, "28,26": 0, "28,27": 2, "28,28": 0, "28,29": 0, "29,0": 0, "29,1": 0, "29,2": 0, "29,3": 0, "29,4": 0, "29,5": 0, "29,6": 0, "29,7": 0, "29,8": 0, "29,9": 0, "29,10": 0, "29,11": 0, "29,12": 0, "29,13": 0, "29,14": 0, "29,15": 0, "29,16": 0, "29,17": 0, "29,18": 0, "29,19": 0, "29,20": 0, "29,21": 0, "29,22": 0, "29,23": 0, "29,24": 0, "29,25": 0, "29,26": 0, "29,27": 0, "29,28": 0, "29,29": 0}}], "output": {"grid": {"0,0": 0, "0,1": 4, "0,2": 0, "1,0": 4, "1,1": 4, "1,2": 4, "2,0": 0, "2,1": 4, "2,2": 4}}}], "name": "1f85a75f.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grow (grid_to_block $0) 3) true))", "(lambda (to_original_grid_overlay (grow (grid_to_block $0) 3) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 false true)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 false true)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 true true)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 true true)) false))", "(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 true true)) true))", "(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 true true)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 false false)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 false false)) false))", "(lambda (to_original_grid_overlay (remove_black_b (singleton_block (find_blocks_by_black_b $0 true true))) true))", "(lambda (to_original_grid_overlay (remove_black_b (singleton_block (find_blocks_by_black_b $0 true true))) false))", "(lambda (to_original_grid_overlay (remove_black_b (singleton_block (find_blocks_by_black_b $0 true false))) true))", "(lambda (to_original_grid_overlay (remove_black_b (singleton_block (find_blocks_by_black_b $0 true false))) false))", "(lambda (to_original_grid_overlay (box_block (first_of_sorted_object_list (find_blocks_by_black_b $0 true false) (lambda 6) true)) true))", "(lambda (to_original_grid_overlay (box_block (first_of_sorted_object_list (find_blocks_by_black_b $0 true false) (lambda 6) true)) false))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_east 0) true))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_east 0) false))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) south_west 5) south_west 3) north_west 5) true))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) south_west 5) south_west 3) north_west 5) false))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_west 5) true))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_west 5) false))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) south_west 5) south_west 3) north_west 4) true))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) south_west 5) south_west 3) north_west 4) false))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_west 4) true))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_west 4) false))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_east 4) true))", "(lambda (to_min_grid (duplicate (duplicate (duplicate (grid_to_block $0) west 1) south_west 5) south_east 4) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false true) true))) black) pink) pink) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false true) true))) black) pink) pink) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) pink) teal) pink) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) pink) teal) pink) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) orange) orange) teal) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) orange) orange) teal) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false true) true))) green) black) red) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false true) true))) green) black) red) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) black) orange) pink) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) black) orange) pink) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) pink) orange) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) pink) orange) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) orange) orange) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) orange) orange) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) pink) orange) invisible) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) pink) orange) invisible) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false true) true))) green) black) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false true) true))) green) black) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) pink) black) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) pink) black) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) green) black) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) green) black) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) green) black) teal) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) green) black) teal) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) teal) black) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) teal) black) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) pink) teal) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) pink) teal) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) orange) black) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 false false) true))) orange) black) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) pink) black) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (fill_color (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) true))) pink) black) black) false))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 5, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 5, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 2, "9,2": 0, "9,3": 0, "9,4": 2, "9,5": 0, "9,6": 2, "9,7": 0, "9,8": 0, "9,9": 0}}], "output": {"grid": {"0,0": 0, "0,1": 2, "0,2": 0, "0,3": 0, "0,4": 2, "0,5": 0, "0,6": 0, "0,7": 2, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 2, "1,2": 0, "1,3": 0, "1,4": 2, "1,5": 0, "1,6": 0, "1,7": 2, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 2, "2,2": 0, "2,3": 0, "2,4": 2, "2,5": 0, "2,6": 0, "2,7": 2, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 2, "3,2": 0, "3,3": 0, "3,4": 2, "3,5": 0, "3,6": 5, "3,7": 2, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 2, "4,2": 0, "4,3": 0, "4,4": 2, "4,5": 0, "4,6": 2, "4,7": 2, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 2, "5,2": 5, "5,3": 0, "5,4": 2, "5,5": 0, "5,6": 2, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 2, "6,2": 0, "6,3": 0, "6,4": 2, "6,5": 0, "6,6": 2, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 2, "7,2": 0, "7,3": 0, "7,4": 2, "7,5": 0, "7,6": 2, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 2, "8,2": 0, "8,3": 0, "8,4": 2, "8,5": 0, "8,6": 2, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 2, "9,2": 0, "9,3": 0, "9,4": 2, "9,5": 0, "9,6": 2, "9,7": 0, "9,8": 0, "9,9": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 5, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 5, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 5, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 2, "9,2": 0, "9,3": 0, "9,4": 2, "9,5": 0, "9,6": 0, "9,7": 2, "9,8": 0, "9,9": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 2, "0,3": 0, "0,4": 2, "0,5": 0, "0,6": 0, "0,7": 2, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 2, "1,3": 0, "1,4": 2, "1,5": 0, "1,6": 0, "1,7": 2, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 2, "2,3": 0, "2,4": 2, "2,5": 0, "2,6": 0, "2,7": 2, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 2, "3,3": 0, "3,4": 2, "3,5": 5, "3,6": 0, "3,7": 2, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 2, "4,3": 0, "4,4": 2, "4,5": 0, "4,6": 0, "4,7": 2, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 5, "5,2": 2, "5,3": 0, "5,4": 2, "5,5": 0, "5,6": 0, "5,7": 2, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 2, "6,2": 2, "6,3": 0, "6,4": 2, "6,5": 0, "6,6": 0, "6,7": 2, "6,8": 5, "6,9": 0, "7,0": 0, "7,1": 2, "7,2": 0, "7,3": 0, "7,4": 2, "7,5": 0, "7,6": 0, "7,7": 2, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 2, "8,2": 0, "8,3": 0, "8,4": 2, "8,5": 0, "8,6": 0, "8,7": 2, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 2, "9,2": 0, "9,3": 0, "9,4": 2, "9,5": 0, "9,6": 0, "9,7": 2, "9,8": 0, "9,9": 0}}}], "name": "d9f24cd1.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 false true)) true))", "(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 false true)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 false true)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 false true)) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (grid_to_block $0))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (grid_to_block $0))))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))))))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))))))))))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 south false))))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 south false))))))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 south_west false))))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 south_west false))))))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean true)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean false)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) south (lambda true)) true))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) south (lambda true)) false))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north (lambda true)) true))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north (lambda true)) false))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) true))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) false))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) east (lambda true)) true))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) east (lambda true)) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (negate_boolean true))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (negate_boolean false))))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north (lambda (negate_boolean true))) true))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north (lambda (negate_boolean true))) false))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) south (lambda (negate_boolean false))) true))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) south (lambda (negate_boolean false))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (negate_boolean (negate_boolean true)))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (negate_boolean (negate_boolean false)))))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south false)))))))))) true))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south false)))))))))) false))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) south (lambda (is_exterior $0 false))) true))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) south (lambda (is_exterior $0 false))) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) north))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) south))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) west))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) east))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) north_east))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) north_west))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) south_east))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east false))))))) (negate_boolean (touches_boundary (grid_to_block $0) south_west))))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) north)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) south)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) west)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) east)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) north_east)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) north_west)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) south_east)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (singleton_block (find_blocks_by_black_b $0 false true)))))))))) (touches_boundary (grid_to_block $0) south_west)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) north)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) south)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) west)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) east)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) north_east)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) north_west)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) south_east)))", "(lambda (to_min_grid (extend_towards_until (get_block_center (remove_color (remove_color (remove_color (grid_to_block $0) pink) yellow) yellow)) north_east (lambda true)) (touches_boundary (grid_to_block $0) south_west)))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 2, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 2, "0,6": 0, "0,7": 0, "0,8": 2, "1,0": 0, "1,1": 4, "1,2": 4, "1,3": 4, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "2,0": 0, "2,1": 4, "2,2": 2, "2,3": 4, "2,4": 0, "2,5": 0, "2,6": 2, "2,7": 0, "2,8": 0, "3,0": 0, "3,1": 4, "3,2": 4, "3,3": 4, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 2, "3,8": 0, "4,0": 2, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 2, "4,6": 0, "4,7": 0, "4,8": 0}}], "output": {"grid": {"0,0": 2}}}, {"inputs": [{"grid": {"0,0": 8, "0,1": 0, "0,2": 8, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 8, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 8, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "2,0": 0, "2,1": 0, "2,2": 8, "2,3": 0, "2,4": 0, "2,5": 3, "2,6": 3, "2,7": 3, "2,8": 0, "3,0": 8, "3,1": 0, "3,2": 0, "3,3": 3, "3,4": 0, "3,5": 3, "3,6": 8, "3,7": 3, "3,8": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 3, "4,6": 3, "4,7": 3, "4,8": 0, "5,0": 0, "5,1": 0, "5,2": 8, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "6,0": 3, "6,1": 0, "6,2": 0, "6,3": 8, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 8, "6,8": 0}}], "output": {"grid": {"0,0": 8}}}, {"inputs": [{"grid": {"0,0": 1, "0,1": 2, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 2, "0,6": 0, "0,7": 0, "0,8": 0, "1,0": 0, "1,1": 0, "1,2": 2, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "2,0": 2, "2,1": 0, "2,2": 1, "2,3": 2, "2,4": 0, "2,5": 2, "2,6": 0, "2,7": 1, "2,8": 1, "3,0": 0, "3,1": 1, "3,2": 0, "3,3": 0, "3,4": 2, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 2, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 1, "4,7": 0, "4,8": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "6,0": 0, "6,1": 2, "6,2": 2, "6,3": 2, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "7,0": 1, "7,1": 2, "7,2": 1, "7,3": 2, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 2, "7,8": 0, "8,0": 0, "8,1": 2, "8,2": 2, "8,3": 2, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 2, "9,0": 0, "9,1": 0, "9,2": 1, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 2, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0}}], "output": {"grid": {"0,0": 1}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 8, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 3, "0,11": 8, "1,0": 3, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 8, "1,8": 0, "1,9": 3, "1,10": 0, "1,11": 0, "2,0": 0, "2,1": 3, "2,2": 3, "2,3": 8, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 8, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 3, "3,4": 8, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "4,0": 3, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 8, "4,11": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 3, "5,4": 8, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "6,0": 0, "6,1": 3, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 3, "7,4": 3, "7,5": 3, "7,6": 0, "7,7": 0, "7,8": 8, "7,9": 0, "7,10": 3, "7,11": 0, "8,0": 0, "8,1": 0, "8,2": 3, "8,3": 3, "8,4": 8, "8,5": 3, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 3, "9,4": 3, "9,5": 3, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "10,0": 0, "10,1": 0, "10,2": 3, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0}}], "output": {"grid": {"0,0": 8}}}], "name": "d9fac9be.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (grid_to_block $0))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (grid_to_block $0))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false true) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false true) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false true) true (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false true) true (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false)))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean false)))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true true)))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true true)))) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 false true)))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 false true)))) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true false)))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true false)))) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 false false)))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 false false)))) false))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) 1) true))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) 1) false))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) 0) true))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) 0) false))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) 3) true))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) 3) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south_west false))))))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south_west false))))))) false))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (reflect (extend_towards_until (get_block_center (singleton_block (find_blocks_by_black_b $0 false false))) north (lambda true)) false))))) true))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (reflect (extend_towards_until (get_block_center (singleton_block (find_blocks_by_black_b $0 false false))) north (lambda true)) false))))) false))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) north_east (lambda true)) 5 north_east true) true))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) north_east (lambda true)) 5 north_east true) false))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_west (negate_boolean true))))))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_west (negate_boolean true))))))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) north_east (lambda true)) 5 south_west false) true))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) north_east (lambda true)) 5 south_west false) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south false))))))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south false))))))) false))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 south false) true))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 south false) false))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) north_east (lambda true)) 5 north_east false) true))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) north_east (lambda true)) 5 north_east false) false))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 north_east false) true))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 north_east false) false))", "(lambda (to_original_grid_overlay (reflect (filter_block_tiles (box_block (box_block (box_block (box_block (box_block (singleton_block (find_blocks_by_black_b $0 true true))))))) (lambda true)) (negate_boolean false)) true))", "(lambda (to_original_grid_overlay (reflect (filter_block_tiles (box_block (box_block (box_block (box_block (box_block (singleton_block (find_blocks_by_black_b $0 true true))))))) (lambda true)) (negate_boolean false)) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south true))))))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south true))))))) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south_west true))))))) true))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (box_block (box_block (box_block (box_block (move (grid_to_block $0) 5 south_west true))))))) false))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 south_west true) true))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 south_west true) false))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 east true) true))", "(lambda (to_min_grid (move (extend_towards_until (get_block_center (remove_color (singleton_block (find_blocks_by_black_b $0 true true)) yellow)) west (lambda true)) 5 east true) false))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) (get_height (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 north_east (negate_boolean (negate_boolean false)))))))) (get_height (grid_to_block $0))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5)))))))))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5)))))))))) false))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true true)))) (has_min_tiles (singleton_block (find_blocks_by_black_b $0 false true)) 0)))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true true)))) (has_min_tiles (singleton_block (find_blocks_by_black_b $0 false true)) 1)))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true true)))) (has_min_tiles (singleton_block (find_blocks_by_black_b $0 false true)) 2)))", "(lambda (to_min_grid (move (grid_to_block $0) 5 north (touches_any_boundary (singleton_block (find_blocks_by_black_b $0 true true)))) (has_min_tiles (singleton_block (find_blocks_by_black_b $0 false true)) 3)))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 4, "0,1": 4, "0,2": 0, "0,3": 3, "0,4": 3, "0,5": 0, "1,0": 4, "1,1": 0, "1,2": 0, "1,3": 3, "1,4": 0, "1,5": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 3}}], "output": {"grid": {"0,0": 6, "0,1": 6, "0,2": 0, "1,0": 6, "1,1": 0, "1,2": 0, "2,0": 0, "2,1": 0, "2,2": 6}}}, {"inputs": [{"grid": {"0,0": 4, "0,1": 0, "0,2": 4, "0,3": 3, "0,4": 3, "0,5": 0, "1,0": 4, "1,1": 0, "1,2": 0, "1,3": 3, "1,4": 0, "1,5": 0, "2,0": 0, "2,1": 0, "2,2": 4, "2,3": 3, "2,4": 0, "2,5": 0}}], "output": {"grid": {"0,0": 6, "0,1": 6, "0,2": 6, "1,0": 6, "1,1": 0, "1,2": 0, "2,0": 6, "2,1": 0, "2,2": 6}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 4, "0,3": 0, "0,4": 3, "0,5": 0, "1,0": 0, "1,1": 4, "1,2": 4, "1,3": 3, "1,4": 0, "1,5": 3, "2,0": 4, "2,1": 4, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 3}}], "output": {"grid": {"0,0": 0, "0,1": 6, "0,2": 6, "1,0": 6, "1,1": 6, "1,2": 6, "2,0": 6, "2,1": 6, "2,2": 6}}}, {"inputs": [{"grid": {"0,0": 4, "0,1": 4, "0,2": 0, "0,3": 3, "0,4": 0, "0,5": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 3, "2,0": 4, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0}}], "output": {"grid": {"0,0": 6, "0,1": 6, "0,2": 0, "1,0": 0, "1,1": 0, "1,2": 6, "2,0": 6, "2,1": 0, "2,2": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 3, "0,5": 0, "1,0": 4, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "2,0": 0, "2,1": 0, "2,2": 4, "2,3": 3, "2,4": 3, "2,5": 0}}], "output": {"grid": {"0,0": 0, "0,1": 6, "0,2": 0, "1,0": 6, "1,1": 0, "1,2": 0, "2,0": 6, "2,1": 6, "2,2": 6}}}], "name": "dae9d2b5.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 true true)) true))", "(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 true true)) false))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) true))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) false))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda true)))))))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda false)))))))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 5)))) (lambda true)) (lambda true)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 5)))) (lambda true)) (lambda true)) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 4)))) (lambda true)) (lambda false)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 4)))) (lambda true)) (lambda false)) false))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda (negate_boolean true))))))))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda (negate_boolean false))))))))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_east 5)))) (lambda true)) (lambda true)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_east 5)))) (lambda true)) (lambda true)) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 4)))) (lambda true)) (lambda true)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 4)))) (lambda true)) (lambda true)) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 5)))) (lambda true)) (lambda false)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 5)))) (lambda true)) (lambda false)) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) pink) yellow) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) pink) yellow) false))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda (negate_boolean (negate_boolean true)))))))))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda (negate_boolean (negate_boolean false)))))))))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) orange) maroon) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) orange) maroon) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) black) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) black) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) teal) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) teal) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) maroon) blue) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) maroon) blue) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) yellow) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) yellow) black) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) pink) black) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) pink) black) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 5)))) (lambda true)) (lambda (negate_boolean false))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_west 5)))) (lambda true)) (lambda (negate_boolean false))) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) maroon) orange) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) maroon) orange) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) green) orange) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) green) orange) false))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda (touches_any_boundary (grid_to_block $1)))))))))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) yellow) orange) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) yellow) orange) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_east 5)))) (lambda true)) (lambda (negate_boolean false))) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (filter_block_tiles (remove_black_b (remove_black_b (remove_black_b (duplicate (reflect (grid_to_block $0) false) south_east 5)))) (lambda true)) (lambda (negate_boolean false))) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) pink) orange) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) pink) orange) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) green) grey) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) green) grey) false))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))))))))))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda (is_interior $0 true))))))))", "(lambda (to_min_grid (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true true) true))) (touches_any_boundary (box_block (box_block (filter_block_tiles (grid_to_block $0) (lambda (is_interior $0 false))))))))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) green) green) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) green) green) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) teal) green) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) teal) green) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) yellow) green) true))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) yellow) green) false))", "(lambda (to_original_grid_overlay (fill_color (fill_color (box_block (map_block_tiles (map_block_tiles (move (grid_to_block $0) 5 north_east false) (lambda $0)) (lambda $0))) maroon) green) true))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 7, "0,4": 0, "0,5": 0, "0,6": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 7, "1,4": 0, "1,5": 0, "1,6": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 7, "2,4": 0, "2,5": 0, "2,6": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 7, "3,4": 0, "3,5": 0, "3,6": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0}}], "output": {"grid": {"0,0": 8, "0,1": 7, "0,2": 8, "0,3": 7, "0,4": 8, "0,5": 7, "0,6": 8, "1,0": 0, "1,1": 7, "1,2": 8, "1,3": 7, "1,4": 8, "1,5": 7, "1,6": 0, "2,0": 0, "2,1": 0, "2,2": 8, "2,3": 7, "2,4": 8, "2,5": 0, "2,6": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 7, "3,4": 0, "3,5": 0, "3,6": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 7, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "1,0": 0, "1,1": 0, "1,2": 7, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "2,0": 0, "2,1": 0, "2,2": 7, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "3,0": 0, "3,1": 0, "3,2": 7, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "4,0": 0, "4,1": 0, "4,2": 7, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0}}], "output": {"grid": {"0,0": 7, "0,1": 8, "0,2": 7, "0,3": 8, "0,4": 7, "0,5": 8, "0,6": 7, "0,7": 0, "1,0": 7, "1,1": 8, "1,2": 7, "1,3": 8, "1,4": 7, "1,5": 8, "1,6": 0, "1,7": 0, "2,0": 7, "2,1": 8, "2,2": 7, "2,3": 8, "2,4": 7, "2,5": 0, "2,6": 0, "2,7": 0, "3,0": 0, "3,1": 8, "3,2": 7, "3,3": 8, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "4,0": 0, "4,1": 0, "4,2": 7, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0}}}], "name": "db3e9e38.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_min_grid (box_block (grid_to_block $0)) true))", "(lambda (to_min_grid (box_block (grid_to_block $0)) false))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 1) 3) true))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 1) 3) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (box_block (merge_blocks (find_blocks_by_black_b $0 false true) false)))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (box_block (merge_blocks (find_blocks_by_black_b $0 false true) false)))))) false))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))) true))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))) false))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))))) true))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))))) false))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (touches_any_boundary (box_block (grid_to_block $0))))))))))) true))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (touches_any_boundary (box_block (grid_to_block $0))))))))))) false))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 3))) true))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 3))) false))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 2))) true))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 2))) false))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 0))) true))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 0))) false))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 6))) true))", "(lambda (to_min_grid (grow (grow (grid_to_block $0) 6) (get_num_tiles (grow (grow (grow (grow (grid_to_block $0) 2) 3) 3) 6))) false))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))))) (is_exterior (get_block_center (grid_to_block $0)) true)))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))))) (is_exterior (get_block_center (grid_to_block $0)) false)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (box_block (merge_blocks (find_blocks_by_black_b $0 false true) false)))))) (is_exterior (get_block_center (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) true)))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (box_block (merge_blocks (find_blocks_by_black_b $0 false true) false)))))) (is_exterior (get_block_center (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) false)))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 1) south_east 2) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 1) south_east 2) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) south_east 2) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) south_east 2) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) east 4) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) east 4) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) south_east 4) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) south_east 4) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 1) south_east 4) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 1) south_east 4) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 6) south_west 9) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 6) south_west 9) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) north 5) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) north 5) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 4) south_west 5) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 4) south_west 5) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) north 5) orange))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) north 5) orange))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) south_east 5) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) south_east 5) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 6) north_east 5) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 6) north_east 5) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) south_east 6) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) south_east 6) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) east 5) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 4) east 5) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) south_west 5) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) south_west 5) yellow))) false))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (touches_boundary (grid_to_block $0) north_east)))))))))) true))", "(lambda (to_original_grid_overlay (tile_to_block (block_to_tile (merge_blocks (find_blocks_by_black_b $0 true false) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (touches_boundary (grid_to_block $0) north_east)))))))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) (has_min_tiles (grid_to_block $0) 6)))))))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) (has_min_tiles (grid_to_block $0) 6)))))))))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) north_east 5) yellow))) true))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_west 5) north_east 5) yellow))) false))", "(lambda (to_min_grid (center_block_on_tile (singleton_block (find_blocks_by_black_b $0 true true)) (get_block_center (remove_color (duplicate (duplicate (grid_to_block $0) south_east 6) north_east 4) teal))) true))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 9, "0,7": 9, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 9, "1,7": 9, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 9, "7,2": 9, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 9, "8,2": 9, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 3, "0,6": 9, "0,7": 9, "0,8": 3, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 3, "1,6": 9, "1,7": 9, "1,8": 3, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 3, "2,6": 3, "2,7": 3, "2,8": 3, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 1, "3,7": 1, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 1, "4,7": 1, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 1, "5,7": 1, "5,8": 0, "5,9": 0, "6,0": 3, "6,1": 3, "6,2": 3, "6,3": 3, "6,4": 0, "6,5": 0, "6,6": 1, "6,7": 1, "6,8": 0, "6,9": 0, "7,0": 3, "7,1": 9, "7,2": 9, "7,3": 3, "7,4": 0, "7,5": 0, "7,6": 1, "7,7": 1, "7,8": 0, "7,9": 0, "8,0": 3, "8,1": 9, "8,2": 9, "8,3": 3, "8,4": 0, "8,5": 0, "8,6": 1, "8,7": 1, "8,8": 0, "8,9": 0, "9,0": 3, "9,1": 3, "9,2": 3, "9,3": 3, "9,4": 0, "9,5": 0, "9,6": 1, "9,7": 1, "9,8": 0, "9,9": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 9, "2,9": 9, "2,10": 9, "2,11": 9, "2,12": 0, "2,13": 0, "2,14": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 9, "3,9": 9, "3,10": 9, "3,11": 9, "3,12": 0, "3,13": 0, "3,14": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 9, "4,9": 9, "4,10": 9, "4,11": 9, "4,12": 0, "4,13": 0, "4,14": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 9, "5,9": 9, "5,10": 9, "5,11": 9, "5,12": 0, "5,13": 0, "5,14": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 9, "6,4": 9, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "6,14": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 9, "7,4": 9, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "7,14": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "8,14": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 9, "9,14": 9, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 9, "10,14": 9, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 0, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "11,14": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "12,14": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0, "13,14": 0, "14,0": 0, "14,1": 0, "14,2": 0, "14,3": 0, "14,4": 0, "14,5": 0, "14,6": 0, "14,7": 0, "14,8": 0, "14,9": 0, "14,10": 0, "14,11": 0, "14,12": 0, "14,13": 0, "14,14": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 3, "0,7": 3, "0,8": 3, "0,9": 3, "0,10": 3, "0,11": 3, "0,12": 3, "0,13": 3, "0,14": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 3, "1,7": 3, "1,8": 3, "1,9": 3, "1,10": 3, "1,11": 3, "1,12": 3, "1,13": 3, "1,14": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 3, "2,7": 3, "2,8": 9, "2,9": 9, "2,10": 9, "2,11": 9, "2,12": 3, "2,13": 3, "2,14": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 3, "3,7": 3, "3,8": 9, "3,9": 9, "3,10": 9, "3,11": 9, "3,12": 3, "3,13": 3, "3,14": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 3, "4,7": 3, "4,8": 9, "4,9": 9, "4,10": 9, "4,11": 9, "4,12": 3, "4,13": 3, "4,14": 0, "5,0": 0, "5,1": 0, "5,2": 3, "5,3": 3, "5,4": 3, "5,5": 3, "5,6": 3, "5,7": 3, "5,8": 9, "5,9": 9, "5,10": 9, "5,11": 9, "5,12": 3, "5,13": 3, "5,14": 0, "6,0": 0, "6,1": 0, "6,2": 3, "6,3": 9, "6,4": 9, "6,5": 3, "6,6": 3, "6,7": 3, "6,8": 3, "6,9": 3, "6,10": 3, "6,11": 3, "6,12": 3, "6,13": 3, "6,14": 0, "7,0": 0, "7,1": 0, "7,2": 3, "7,3": 9, "7,4": 9, "7,5": 3, "7,6": 3, "7,7": 3, "7,8": 3, "7,9": 3, "7,10": 3, "7,11": 3, "7,12": 3, "7,13": 3, "7,14": 0, "8,0": 0, "8,1": 0, "8,2": 3, "8,3": 3, "8,4": 3, "8,5": 3, "8,6": 0, "8,7": 0, "8,8": 1, "8,9": 1, "8,10": 1, "8,11": 1, "8,12": 3, "8,13": 3, "8,14": 3, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 1, "9,4": 1, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 1, "9,9": 1, "9,10": 1, "9,11": 1, "9,12": 3, "9,13": 9, "9,14": 9, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 1, "10,4": 1, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 1, "10,9": 1, "10,10": 1, "10,11": 1, "10,12": 3, "10,13": 9, "10,14": 9, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 1, "11,4": 1, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 1, "11,9": 1, "11,10": 1, "11,11": 1, "11,12": 3, "11,13": 3, "11,14": 3, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 1, "12,4": 1, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 1, "12,9": 1, "12,10": 1, "12,11": 1, "12,12": 0, "12,13": 1, "12,14": 1, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 1, "13,4": 1, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 1, "13,9": 1, "13,10": 1, "13,11": 1, "13,12": 0, "13,13": 1, "13,14": 1, "14,0": 0, "14,1": 0, "14,2": 0, "14,3": 1, "14,4": 1, "14,5": 0, "14,6": 0, "14,7": 0, "14,8": 1, "14,9": 1, "14,10": 1, "14,11": 1, "14,12": 0, "14,13": 1, "14,14": 1}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 0, "0,15": 0, "0,16": 0, "0,17": 0, "0,18": 0, "0,19": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 0, "1,15": 0, "1,16": 0, "1,17": 0, "1,18": 0, "1,19": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "2,14": 0, "2,15": 0, "2,16": 0, "2,17": 0, "2,18": 0, "2,19": 0, "3,0": 0, "3,1": 0, "3,2": 9, "3,3": 9, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "3,14": 0, "3,15": 0, "3,16": 0, "3,17": 0, "3,18": 0, "3,19": 0, "4,0": 0, "4,1": 0, "4,2": 9, "4,3": 9, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "4,14": 0, "4,15": 0, "4,16": 0, "4,17": 0, "4,18": 0, "4,19": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "5,14": 0, "5,15": 0, "5,16": 0, "5,17": 0, "5,18": 0, "5,19": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "6,14": 0, "6,15": 9, "6,16": 9, "6,17": 9, "6,18": 9, "6,19": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "7,14": 0, "7,15": 9, "7,16": 9, "7,17": 9, "7,18": 9, "7,19": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "8,14": 0, "8,15": 9, "8,16": 9, "8,17": 9, "8,18": 9, "8,19": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "9,14": 0, "9,15": 9, "9,16": 9, "9,17": 9, "9,18": 9, "9,19": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "10,14": 0, "10,15": 0, "10,16": 0, "10,17": 0, "10,18": 0, "10,19": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 0, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "11,14": 0, "11,15": 0, "11,16": 0, "11,17": 0, "11,18": 0, "11,19": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 9, "12,7": 9, "12,8": 9, "12,9": 9, "12,10": 9, "12,11": 9, "12,12": 0, "12,13": 0, "12,14": 0, "12,15": 0, "12,16": 0, "12,17": 0, "12,18": 0, "12,19": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 9, "13,7": 9, "13,8": 9, "13,9": 9, "13,10": 9, "13,11": 9, "13,12": 0, "13,13": 0, "13,14": 0, "13,15": 0, "13,16": 0, "13,17": 0, "13,18": 0, "13,19": 0, "14,0": 0, "14,1": 0, "14,2": 0, "14,3": 0, "14,4": 0, "14,5": 0, "14,6": 9, "14,7": 9, "14,8": 9, "14,9": 9, "14,10": 9, "14,11": 9, "14,12": 0, "14,13": 0, "14,14": 0, "14,15": 0, "14,16": 0, "14,17": 0, "14,18": 0, "14,19": 0, "15,0": 0, "15,1": 0, "15,2": 0, "15,3": 0, "15,4": 0, "15,5": 0, "15,6": 9, "15,7": 9, "15,8": 9, "15,9": 9, "15,10": 9, "15,11": 9, "15,12": 0, "15,13": 0, "15,14": 0, "15,15": 0, "15,16": 0, "15,17": 0, "15,18": 0, "15,19": 0, "16,0": 0, "16,1": 0, "16,2": 0, "16,3": 0, "16,4": 0, "16,5": 0, "16,6": 9, "16,7": 9, "16,8": 9, "16,9": 9, "16,10": 9, "16,11": 9, "16,12": 0, "16,13": 0, "16,14": 0, "16,15": 0, "16,16": 0, "16,17": 0, "16,18": 0, "16,19": 0, "17,0": 0, "17,1": 0, "17,2": 0, "17,3": 0, "17,4": 0, "17,5": 0, "17,6": 9, "17,7": 9, "17,8": 9, "17,9": 9, "17,10": 9, "17,11": 9, "17,12": 0, "17,13": 0, "17,14": 0, "17,15": 0, "17,16": 0, "17,17": 0, "17,18": 0, "17,19": 0, "18,0": 0, "18,1": 0, "18,2": 0, "18,3": 0, "18,4": 0, "18,5": 0, "18,6": 0, "18,7": 0, "18,8": 0, "18,9": 0, "18,10": 0, "18,11": 0, "18,12": 0, "18,13": 0, "18,14": 0, "18,15": 0, "18,16": 0, "18,17": 0, "18,18": 0, "18,19": 0, "19,0": 0, "19,1": 0, "19,2": 0, "19,3": 0, "19,4": 0, "19,5": 0, "19,6": 0, "19,7": 0, "19,8": 0, "19,9": 0, "19,10": 0, "19,11": 0, "19,12": 0, "19,13": 0, "19,14": 0, "19,15": 0, "19,16": 0, "19,17": 0, "19,18": 0, "19,19": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 0, "0,15": 0, "0,16": 0, "0,17": 0, "0,18": 0, "0,19": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 0, "1,15": 0, "1,16": 0, "1,17": 0, "1,18": 0, "1,19": 0, "2,0": 0, "2,1": 3, "2,2": 3, "2,3": 3, "2,4": 3, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "2,14": 0, "2,15": 0, "2,16": 0, "2,17": 0, "2,18": 0, "2,19": 0, "3,0": 0, "3,1": 3, "3,2": 9, "3,3": 9, "3,4": 3, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "3,14": 0, "3,15": 0, "3,16": 0, "3,17": 0, "3,18": 0, "3,19": 0, "4,0": 0, "4,1": 3, "4,2": 9, "4,3": 9, "4,4": 3, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 3, "4,14": 3, "4,15": 3, "4,16": 3, "4,17": 3, "4,18": 3, "4,19": 3, "5,0": 0, "5,1": 3, "5,2": 3, "5,3": 3, "5,4": 3, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 3, "5,14": 3, "5,15": 3, "5,16": 3, "5,17": 3, "5,18": 3, "5,19": 3, "6,0": 0, "6,1": 0, "6,2": 1, "6,3": 1, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 3, "6,14": 3, "6,15": 9, "6,16": 9, "6,17": 9, "6,18": 9, "6,19": 3, "7,0": 0, "7,1": 0, "7,2": 1, "7,3": 1, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 3, "7,14": 3, "7,15": 9, "7,16": 9, "7,17": 9, "7,18": 9, "7,19": 3, "8,0": 0, "8,1": 0, "8,2": 1, "8,3": 1, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 3, "8,14": 3, "8,15": 9, "8,16": 9, "8,17": 9, "8,18": 9, "8,19": 3, "9,0": 0, "9,1": 0, "9,2": 1, "9,3": 3, "9,4": 3, "9,5": 3, "9,6": 3, "9,7": 3, "9,8": 3, "9,9": 3, "9,10": 3, "9,11": 3, "9,12": 3, "9,13": 3, "9,14": 3, "9,15": 9, "9,16": 9, "9,17": 9, "9,18": 9, "9,19": 3, "10,0": 0, "10,1": 0, "10,2": 1, "10,3": 3, "10,4": 3, "10,5": 3, "10,6": 3, "10,7": 3, "10,8": 3, "10,9": 3, "10,10": 3, "10,11": 3, "10,12": 3, "10,13": 3, "10,14": 3, "10,15": 3, "10,16": 3, "10,17": 3, "10,18": 3, "10,19": 3, "11,0": 0, "11,1": 0, "11,2": 1, "11,3": 3, "11,4": 3, "11,5": 3, "11,6": 3, "11,7": 3, "11,8": 3, "11,9": 3, "11,10": 3, "11,11": 3, "11,12": 3, "11,13": 3, "11,14": 3, "11,15": 3, "11,16": 3, "11,17": 3, "11,18": 3, "11,19": 3, "12,0": 0, "12,1": 0, "12,2": 1, "12,3": 3, "12,4": 3, "12,5": 3, "12,6": 9, "12,7": 9, "12,8": 9, "12,9": 9, "12,10": 9, "12,11": 9, "12,12": 3, "12,13": 3, "12,14": 3, "12,15": 1, "12,16": 1, "12,17": 1, "12,18": 1, "12,19": 0, "13,0": 0, "13,1": 0, "13,2": 1, "13,3": 3, "13,4": 3, "13,5": 3, "13,6": 9, "13,7": 9, "13,8": 9, "13,9": 9, "13,10": 9, "13,11": 9, "13,12": 3, "13,13": 3, "13,14": 3, "13,15": 1, "13,16": 1, "13,17": 1, "13,18": 1, "13,19": 0, "14,0": 0, "14,1": 0, "14,2": 1, "14,3": 3, "14,4": 3, "14,5": 3, "14,6": 9, "14,7": 9, "14,8": 9, "14,9": 9, "14,10": 9, "14,11": 9, "14,12": 3, "14,13": 3, "14,14": 3, "14,15": 1, "14,16": 1, "14,17": 1, "14,18": 1, "14,19": 0, "15,0": 0, "15,1": 0, "15,2": 1, "15,3": 3, "15,4": 3, "15,5": 3, "15,6": 9, "15,7": 9, "15,8": 9, "15,9": 9, "15,10": 9, "15,11": 9, "15,12": 3, "15,13": 3, "15,14": 3, "15,15": 1, "15,16": 1, "15,17": 1, "15,18": 1, "15,19": 0, "16,0": 0, "16,1": 0, "16,2": 1, "16,3": 3, "16,4": 3, "16,5": 3, "16,6": 9, "16,7": 9, "16,8": 9, "16,9": 9, "16,10": 9, "16,11": 9, "16,12": 3, "16,13": 3, "16,14": 3, "16,15": 1, "16,16": 1, "16,17": 1, "16,18": 1, "16,19": 0, "17,0": 0, "17,1": 0, "17,2": 1, "17,3": 3, "17,4": 3, "17,5": 3, "17,6": 9, "17,7": 9, "17,8": 9, "17,9": 9, "17,10": 9, "17,11": 9, "17,12": 3, "17,13": 3, "17,14": 3, "17,15": 1, "17,16": 1, "17,17": 1, "17,18": 1, "17,19": 0, "18,0": 0, "18,1": 0, "18,2": 1, "18,3": 3, "18,4": 3, "18,5": 3, "18,6": 3, "18,7": 3, "18,8": 3, "18,9": 3, "18,10": 3, "18,11": 3, "18,12": 3, "18,13": 3, "18,14": 3, "18,15": 1, "18,16": 1, "18,17": 1, "18,18": 1, "18,19": 0, "19,0": 0, "19,1": 0, "19,2": 1, "19,3": 3, "19,4": 3, "19,5": 3, "19,6": 3, "19,7": 3, "19,8": 3, "19,9": 3, "19,10": 3, "19,11": 3, "19,12": 3, "19,13": 3, "19,14": 3, "19,15": 1, "19,16": 1, "19,17": 1, "19,18": 1, "19,19": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 9, "0,8": 9, "0,9": 9, "0,10": 9, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 0, "0,15": 0, "0,16": 0, "0,17": 0, "0,18": 0, "0,19": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 9, "1,8": 9, "1,9": 9, "1,10": 9, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 0, "1,15": 0, "1,16": 0, "1,17": 0, "1,18": 0, "1,19": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "2,14": 0, "2,15": 0, "2,16": 0, "2,17": 0, "2,18": 0, "2,19": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "3,14": 0, "3,15": 0, "3,16": 0, "3,17": 0, "3,18": 0, "3,19": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "4,14": 0, "4,15": 0, "4,16": 0, "4,17": 0, "4,18": 0, "4,19": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "5,14": 0, "5,15": 0, "5,16": 0, "5,17": 0, "5,18": 0, "5,19": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "6,14": 0, "6,15": 0, "6,16": 0, "6,17": 0, "6,18": 0, "6,19": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 0, "7,14": 0, "7,15": 0, "7,16": 0, "7,17": 0, "7,18": 0, "7,19": 0, "8,0": 0, "8,1": 0, "8,2": 9, "8,3": 9, "8,4": 9, "8,5": 9, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 0, "8,13": 0, "8,14": 0, "8,15": 0, "8,16": 0, "8,17": 0, "8,18": 0, "8,19": 0, "9,0": 0, "9,1": 0, "9,2": 9, "9,3": 9, "9,4": 9, "9,5": 9, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "9,14": 9, "9,15": 9, "9,16": 9, "9,17": 9, "9,18": 9, "9,19": 9, "10,0": 0, "10,1": 0, "10,2": 9, "10,3": 9, "10,4": 9, "10,5": 9, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "10,14": 9, "10,15": 9, "10,16": 9, "10,17": 9, "10,18": 9, "10,19": 9, "11,0": 0, "11,1": 0, "11,2": 9, "11,3": 9, "11,4": 9, "11,5": 9, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "11,14": 9, "11,15": 9, "11,16": 9, "11,17": 9, "11,18": 9, "11,19": 9, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "12,14": 9, "12,15": 9, "12,16": 9, "12,17": 9, "12,18": 9, "12,19": 9, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0, "13,14": 9, "13,15": 9, "13,16": 9, "13,17": 9, "13,18": 9, "13,19": 9, "14,0": 0, "14,1": 0, "14,2": 0, "14,3": 0, "14,4": 0, "14,5": 0, "14,6": 0, "14,7": 0, "14,8": 0, "14,9": 0, "14,10": 0, "14,11": 0, "14,12": 0, "14,13": 0, "14,14": 9, "14,15": 9, "14,16": 9, "14,17": 9, "14,18": 9, "14,19": 9, "15,0": 0, "15,1": 0, "15,2": 0, "15,3": 0, "15,4": 0, "15,5": 0, "15,6": 0, "15,7": 0, "15,8": 0, "15,9": 0, "15,10": 0, "15,11": 0, "15,12": 0, "15,13": 0, "15,14": 0, "15,15": 0, "15,16": 0, "15,17": 0, "15,18": 0, "15,19": 0, "16,0": 0, "16,1": 0, "16,2": 0, "16,3": 0, "16,4": 0, "16,5": 0, "16,6": 0, "16,7": 0, "16,8": 0, "16,9": 0, "16,10": 0, "16,11": 0, "16,12": 0, "16,13": 0, "16,14": 0, "16,15": 0, "16,16": 0, "16,17": 0, "16,18": 0, "16,19": 0, "17,0": 0, "17,1": 0, "17,2": 0, "17,3": 0, "17,4": 0, "17,5": 0, "17,6": 0, "17,7": 0, "17,8": 0, "17,9": 0, "17,10": 0, "17,11": 0, "17,12": 0, "17,13": 0, "17,14": 0, "17,15": 0, "17,16": 0, "17,17": 0, "17,18": 0, "17,19": 0, "18,0": 0, "18,1": 0, "18,2": 0, "18,3": 0, "18,4": 0, "18,5": 0, "18,6": 0, "18,7": 0, "18,8": 0, "18,9": 0, "18,10": 0, "18,11": 0, "18,12": 0, "18,13": 0, "18,14": 0, "18,15": 0, "18,16": 0, "18,17": 0, "18,18": 0, "18,19": 0, "19,0": 0, "19,1": 0, "19,2": 0, "19,3": 0, "19,4": 0, "19,5": 0, "19,6": 0, "19,7": 0, "19,8": 0, "19,9": 0, "19,10": 0, "19,11": 0, "19,12": 0, "19,13": 0, "19,14": 0, "19,15": 0, "19,16": 0, "19,17": 0, "19,18": 0, "19,19": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 3, "0,6": 3, "0,7": 9, "0,8": 9, "0,9": 9, "0,10": 9, "0,11": 3, "0,12": 3, "0,13": 0, "0,14": 0, "0,15": 0, "0,16": 0, "0,17": 0, "0,18": 0, "0,19": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 3, "1,6": 3, "1,7": 9, "1,8": 9, "1,9": 9, "1,10": 9, "1,11": 3, "1,12": 3, "1,13": 0, "1,14": 0, "1,15": 0, "1,16": 0, "1,17": 0, "1,18": 0, "1,19": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 3, "2,6": 3, "2,7": 3, "2,8": 3, "2,9": 3, "2,10": 3, "2,11": 3, "2,12": 3, "2,13": 0, "2,14": 0, "2,15": 0, "2,16": 0, "2,17": 0, "2,18": 0, "2,19": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 3, "3,6": 3, "3,7": 3, "3,8": 3, "3,9": 3, "3,10": 3, "3,11": 3, "3,12": 3, "3,13": 0, "3,14": 0, "3,15": 0, "3,16": 0, "3,17": 0, "3,18": 0, "3,19": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 1, "4,8": 1, "4,9": 1, "4,10": 1, "4,11": 0, "4,12": 0, "4,13": 0, "4,14": 0, "4,15": 0, "4,16": 0, "4,17": 0, "4,18": 0, "4,19": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 1, "5,8": 1, "5,9": 1, "5,10": 1, "5,11": 0, "5,12": 0, "5,13": 0, "5,14": 0, "5,15": 0, "5,16": 0, "5,17": 0, "5,18": 0, "5,19": 0, "6,0": 3, "6,1": 3, "6,2": 3, "6,3": 3, "6,4": 3, "6,5": 3, "6,6": 3, "6,7": 3, "6,8": 1, "6,9": 1, "6,10": 1, "6,11": 3, "6,12": 3, "6,13": 3, "6,14": 3, "6,15": 3, "6,16": 3, "6,17": 3, "6,18": 3, "6,19": 3, "7,0": 3, "7,1": 3, "7,2": 3, "7,3": 3, "7,4": 3, "7,5": 3, "7,6": 3, "7,7": 3, "7,8": 1, "7,9": 1, "7,10": 1, "7,11": 3, "7,12": 3, "7,13": 3, "7,14": 3, "7,15": 3, "7,16": 3, "7,17": 3, "7,18": 3, "7,19": 3, "8,0": 3, "8,1": 3, "8,2": 9, "8,3": 9, "8,4": 9, "8,5": 9, "8,6": 3, "8,7": 3, "8,8": 1, "8,9": 1, "8,10": 1, "8,11": 3, "8,12": 3, "8,13": 3, "8,14": 3, "8,15": 3, "8,16": 3, "8,17": 3, "8,18": 3, "8,19": 3, "9,0": 3, "9,1": 3, "9,2": 9, "9,3": 9, "9,4": 9, "9,5": 9, "9,6": 3, "9,7": 3, "9,8": 1, "9,9": 1, "9,10": 1, "9,11": 3, "9,12": 3, "9,13": 3, "9,14": 9, "9,15": 9, "9,16": 9, "9,17": 9, "9,18": 9, "9,19": 9, "10,0": 3, "10,1": 3, "10,2": 9, "10,3": 9, "10,4": 9, "10,5": 9, "10,6": 3, "10,7": 3, "10,8": 1, "10,9": 1, "10,10": 1, "10,11": 3, "10,12": 3, "10,13": 3, "10,14": 9, "10,15": 9, "10,16": 9, "10,17": 9, "10,18": 9, "10,19": 9, "11,0": 3, "11,1": 3, "11,2": 9, "11,3": 9, "11,4": 9, "11,5": 9, "11,6": 3, "11,7": 3, "11,8": 1, "11,9": 1, "11,10": 1, "11,11": 3, "11,12": 3, "11,13": 3, "11,14": 9, "11,15": 9, "11,16": 9, "11,17": 9, "11,18": 9, "11,19": 9, "12,0": 3, "12,1": 3, "12,2": 3, "12,3": 3, "12,4": 3, "12,5": 3, "12,6": 3, "12,7": 3, "12,8": 1, "12,9": 1, "12,10": 1, "12,11": 3, "12,12": 3, "12,13": 3, "12,14": 9, "12,15": 9, "12,16": 9, "12,17": 9, "12,18": 9, "12,19": 9, "13,0": 3, "13,1": 3, "13,2": 3, "13,3": 3, "13,4": 3, "13,5": 3, "13,6": 3, "13,7": 3, "13,8": 1, "13,9": 1, "13,10": 1, "13,11": 3, "13,12": 3, "13,13": 3, "13,14": 9, "13,15": 9, "13,16": 9, "13,17": 9, "13,18": 9, "13,19": 9, "14,0": 0, "14,1": 0, "14,2": 1, "14,3": 1, "14,4": 1, "14,5": 1, "14,6": 0, "14,7": 1, "14,8": 1, "14,9": 1, "14,10": 1, "14,11": 3, "14,12": 3, "14,13": 3, "14,14": 9, "14,15": 9, "14,16": 9, "14,17": 9, "14,18": 9, "14,19": 9, "15,0": 0, "15,1": 0, "15,2": 1, "15,3": 1, "15,4": 1, "15,5": 1, "15,6": 0, "15,7": 1, "15,8": 1, "15,9": 1, "15,10": 1, "15,11": 3, "15,12": 3, "15,13": 3, "15,14": 3, "15,15": 3, "15,16": 3, "15,17": 3, "15,18": 3, "15,19": 3, "16,0": 0, "16,1": 0, "16,2": 1, "16,3": 1, "16,4": 1, "16,5": 1, "16,6": 0, "16,7": 1, "16,8": 1, "16,9": 1, "16,10": 1, "16,11": 3, "16,12": 3, "16,13": 3, "16,14": 3, "16,15": 3, "16,16": 3, "16,17": 3, "16,18": 3, "16,19": 3, "17,0": 0, "17,1": 0, "17,2": 1, "17,3": 1, "17,4": 1, "17,5": 1, "17,6": 0, "17,7": 1, "17,8": 1, "17,9": 1, "17,10": 1, "17,11": 3, "17,12": 3, "17,13": 3, "17,14": 3, "17,15": 3, "17,16": 3, "17,17": 3, "17,18": 3, "17,19": 3, "18,0": 0, "18,1": 0, "18,2": 1, "18,3": 1, "18,4": 1, "18,5": 1, "18,6": 0, "18,7": 1, "18,8": 1, "18,9": 1, "18,10": 1, "18,11": 0, "18,12": 0, "18,13": 0, "18,14": 1, "18,15": 1, "18,16": 1, "18,17": 1, "18,18": 1, "18,19": 1, "19,0": 0, "19,1": 0, "19,2": 1, "19,3": 1, "19,4": 1, "19,5": 1, "19,6": 0, "19,7": 1, "19,8": 1, "19,9": 1, "19,10": 1, "19,11": 0, "19,12": 0, "19,13": 0, "19,14": 1, "19,15": 1, "19,16": 1, "19,17": 1, "19,18": 1, "19,19": 1}}}], "name": "db93a21d.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (grid_to_block $0) (lambda true)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (grid_to_block $0) (lambda true)) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 false true))))))))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 false true))))))))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true false))))))))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true false))))))))))) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 0))) 9) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 0))) 9) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) (negate_boolean true)))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) (negate_boolean false)))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 3))) 5) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 3))) 5) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 3))) 3) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 3))) 3) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 0))) 3) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 0))) 3) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 2))) 3) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 2))) 3) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 3))) 3) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 3))) 3) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 9))) 3) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 9))) 3) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 3))) 0) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 3))) 0) false))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (touches_any_boundary (grid_to_block $0))) (lambda 6) true) true))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (touches_any_boundary (grid_to_block $0))) (lambda 6) true) false))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (touches_any_boundary (grid_to_block $0))) (lambda 2) true) true))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (touches_any_boundary (grid_to_block $0))) (lambda 2) true) false))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (touches_any_boundary (grid_to_block $0))) (lambda 7) true) true))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (touches_any_boundary (grid_to_block $0))) (lambda 7) true) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 0) 3))) 1) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 0) 3))) 1) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) (negate_boolean (negate_boolean true))))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) (negate_boolean (negate_boolean false))))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (has_min_tiles (grid_to_block $0) 5)) (lambda 6) true) true))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (has_min_tiles (grid_to_block $0) 5)) (lambda 6) true) false))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (has_min_tiles (grid_to_block $0) 5)) (lambda 3) true) true))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_same_color_blocks $0 (touches_any_boundary (box_block (box_block (box_block (grid_to_block $0))))) (has_min_tiles (grid_to_block $0) 5)) (lambda 3) true) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south_east)))))))))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south_east)))))))))))) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 9))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 9))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 0))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) 0))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 2))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 2))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 9))) (get_height (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 9))) (get_height (grid_to_block $0))) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 5))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 3) 5))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) (negate_boolean (negate_boolean (negate_boolean true)))))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (tile_to_block (block_to_tile (singleton_block (find_blocks_by_black_b $0 true true))))))))))) (negate_boolean (negate_boolean (negate_boolean false)))))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 0) (get_original_grid_width (grid_to_block $0))))) 8) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 0) (get_original_grid_width (grid_to_block $0))))) 8) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) (get_num_tiles (grid_to_block $0))))) 3) true))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink orange) 2) 5) (get_num_tiles (grid_to_block $0))))) 3) false))", "(lambda (to_min_grid (grow (tile_to_block (block_to_tile (grow (grow (grow (replace_color (grid_to_block $0) pink teal) 3) 3) 2))) 3) (touches_any_boundary (grid_to_block $0))))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 1, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 1, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "4,0": 0, "4,1": 1, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 1, "4,8": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "6,0": 0, "6,1": 1, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 1, "8,7": 0, "8,8": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 1, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 1, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 8, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 1, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 8, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 8, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "4,0": 0, "4,1": 1, "4,2": 8, "4,3": 8, "4,4": 8, "4,5": 8, "4,6": 8, "4,7": 1, "4,8": 0, "5,0": 0, "5,1": 8, "5,2": 0, "5,3": 8, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "6,0": 0, "6,1": 1, "6,2": 0, "6,3": 8, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 8, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 8, "8,4": 0, "8,5": 0, "8,6": 1, "8,7": 0, "8,8": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 1, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 1, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 1, "0,10": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 1, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 1, "2,9": 0, "2,10": 0, "3,0": 0, "3,1": 0, "3,2": 1, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "7,0": 1, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 1, "7,8": 0, "7,9": 0, "7,10": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 1, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 1, "0,5": 8, "0,6": 8, "0,7": 8, "0,8": 8, "0,9": 1, "0,10": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 8, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 1, "2,5": 8, "2,6": 8, "2,7": 8, "2,8": 1, "2,9": 0, "2,10": 0, "3,0": 0, "3,1": 0, "3,2": 1, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "7,0": 1, "7,1": 8, "7,2": 8, "7,3": 8, "7,4": 8, "7,5": 8, "7,6": 8, "7,7": 1, "7,8": 0, "7,9": 0, "7,10": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 1, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 1, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 1, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 1, "2,11": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 1, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "5,0": 0, "5,1": 1, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 1, "5,10": 0, "5,11": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 1, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 1, "6,11": 0, "7,0": 0, "7,1": 0, "7,2": 1, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 1, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 1, "9,9": 0, "9,10": 0, "9,11": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 0, "10,11": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 1, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 1, "11,9": 0, "11,10": 0, "11,11": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 1, "0,7": 8, "0,8": 8, "0,9": 8, "0,10": 8, "0,11": 1, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 8, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 8, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 1, "2,11": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 8, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 8, "3,11": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 1, "4,6": 8, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 8, "4,11": 0, "5,0": 0, "5,1": 1, "5,2": 8, "5,3": 8, "5,4": 8, "5,5": 8, "5,6": 8, "5,7": 8, "5,8": 8, "5,9": 1, "5,10": 8, "5,11": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 1, "6,7": 8, "6,8": 8, "6,9": 8, "6,10": 1, "6,11": 0, "7,0": 0, "7,1": 0, "7,2": 1, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 1, "9,5": 8, "9,6": 8, "9,7": 8, "9,8": 1, "9,9": 0, "9,10": 0, "9,11": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 8, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 8, "10,9": 0, "10,10": 0, "10,11": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 1, "11,5": 8, "11,6": 8, "11,7": 8, "11,8": 1, "11,9": 0, "11,10": 0, "11,11": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 1, "0,2": 0, "0,3": 0, "0,4": 1, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 1, "2,5": 0, "2,6": 1, "2,7": 0, "2,8": 0, "3,0": 1, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 1, "4,6": 0, "4,7": 0, "4,8": 0, "5,0": 0, "5,1": 0, "5,2": 1, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 1, "5,8": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "7,0": 1, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0}}], "output": {"grid": {"0,0": 0, "0,1": 1, "0,2": 8, "0,3": 8, "0,4": 1, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 8, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 1, "2,5": 8, "2,6": 1, "2,7": 0, "2,8": 0, "3,0": 1, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "4,0": 8, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 1, "4,6": 0, "4,7": 0, "4,8": 0, "5,0": 8, "5,1": 0, "5,2": 1, "5,3": 8, "5,4": 8, "5,5": 8, "5,6": 8, "5,7": 1, "5,8": 0, "6,0": 8, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "7,0": 1, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0}}}], "name": "dbc1a6ce.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) true))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) north)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) south)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) west)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) east)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) north_east)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) north_west)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) south_east)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_boundary (grid_to_block $0) south_west)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_any_boundary (box_block (grid_to_block $0)))))", "(lambda (to_original_grid_overlay (extend_towards_until (get_block_center (remove_color (grid_to_block $0) blue)) north_east (lambda (touches_boundary (grid_to_block $1) south))) true))", "(lambda (to_original_grid_overlay (extend_towards_until (get_block_center (remove_color (grid_to_block $0) blue)) north_east (lambda (touches_boundary (grid_to_block $1) south))) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) true))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 8))))) 3) true))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 8))))) 3) false))", "(lambda (to_original_grid_overlay (extend_towards_until (get_block_center (remove_color (grid_to_block $0) blue)) east (lambda (is_symmetrical (move_towards_until $0 north_east (lambda true)) true))) true))", "(lambda (to_original_grid_overlay (extend_towards_until (get_block_center (remove_color (grid_to_block $0) blue)) east (lambda (is_symmetrical (move_towards_until $0 north_east (lambda true)) true))) false))", "(lambda (to_original_grid_overlay (extend_towards_until (get_block_center (remove_color (grid_to_block $0) blue)) east (lambda (is_symmetrical (move_towards_until $0 north_west (lambda true)) true))) true))", "(lambda (to_original_grid_overlay (extend_towards_until (get_block_center (remove_color (grid_to_block $0) blue)) east (lambda (is_symmetrical (move_towards_until $0 north_west (lambda true)) true))) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 7))))) (get_original_grid_width (grid_to_block $0))) true))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 7))))) (get_original_grid_width (grid_to_block $0))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 true true)) red pink) yellow) blue))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 true true)) red pink) yellow) blue))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 false false)) pink orange) yellow) yellow))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 false false)) pink orange) yellow) yellow))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 false false)) grey pink) green) yellow))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 false false)) grey pink) green) yellow))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 true false)) maroon orange) yellow) yellow))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 true false)) maroon orange) yellow) yellow))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 true true)) red pink) yellow) yellow))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 true true)) red pink) yellow) yellow))))) false))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 false false)) grey pink) green) orange))))) true))", "(lambda (to_min_grid (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_color (remove_color (replace_color (singleton_block (find_blocks_by_black_b $0 false false)) grey pink) green) orange))))) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_any_boundary (box_block (box_block (box_block (singleton_block (find_blocks_by_black_b $0 true true))))))))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_any_boundary (box_block (box_block (box_block (singleton_block (find_blocks_by_black_b $0 true false))))))))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_any_boundary (box_block (box_block (box_block (singleton_block (find_blocks_by_black_b $0 false true))))))))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) true) 3) (touches_any_boundary (box_block (box_block (box_block (singleton_block (find_blocks_by_black_b $0 false false))))))))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 8))))) 3) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 4) 1) 0) true))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 4) 1) 0) false))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) north)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) south)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) west)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) east)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) north_east)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) north_west)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) south_east)))", "(lambda (to_min_grid (grow (merge_blocks (find_blocks_by_black_b $0 false false) (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 5))))) 3) (touches_boundary (grid_to_block $0) south_west)))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 1) 0) 3) true))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 1) 0) 3) false))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 5) 8) 3) true))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 5) 8) 3) false))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 2) 3) 3) true))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 2) 3) 3) false))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 1) 3) 3) true))", "(lambda (to_min_grid (grow (grow (grow (grow (merge_blocks (find_blocks_by_black_b $0 false (touches_boundary (grid_to_block $0) south)) true) 3) 1) 3) 3) false))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 2, "0,1": 1, "0,2": 2, "0,3": 2, "0,4": 6, "0,5": 5, "0,6": 5, "0,7": 6, "0,8": 6, "0,9": 5, "0,10": 5, "0,11": 6, "0,12": 2, "0,13": 2, "0,14": 1, "0,15": 2, "1,0": 1, "1,1": 6, "1,2": 6, "1,3": 1, "1,4": 5, "1,5": 6, "1,6": 5, "1,7": 2, "1,8": 2, "1,9": 5, "1,10": 6, "1,11": 5, "1,12": 1, "1,13": 6, "1,14": 6, "1,15": 1, "2,0": 2, "2,1": 6, "2,2": 1, "2,3": 6, "2,4": 5, "2,5": 5, "2,6": 5, "2,7": 2, "2,8": 2, "2,9": 5, "2,10": 5, "2,11": 5, "2,12": 6, "2,13": 1, "2,14": 6, "2,15": 2, "3,0": 2, "3,1": 1, "3,2": 6, "3,3": 6, "3,4": 6, "3,5": 2, "3,6": 2, "3,7": 2, "3,8": 2, "3,9": 2, "3,10": 2, "3,11": 6, "3,12": 6, "3,13": 6, "3,14": 1, "3,15": 2, "4,0": 6, "4,1": 5, "4,2": 5, "4,3": 6, "4,4": 5, "4,5": 8, "4,6": 5, "4,7": 7, "4,8": 7, "4,9": 5, "4,10": 8, "4,11": 5, "4,12": 6, "4,13": 5, "4,14": 5, "4,15": 6, "5,0": 5, "5,1": 6, "5,2": 5, "5,3": 2, "5,4": 8, "5,5": 8, "5,6": 5, "5,7": 8, "5,8": 8, "5,9": 3, "5,10": 3, "5,11": 3, "5,12": 3, "5,13": 3, "5,14": 6, "5,15": 5, "6,0": 5, "6,1": 5, "6,2": 5, "6,3": 2, "6,4": 5, "6,5": 5, "6,6": 5, "6,7": 8, "6,8": 8, "6,9": 3, "6,10": 3, "6,11": 3, "6,12": 3, "6,13": 3, "6,14": 5, "6,15": 5, "7,0": 6, "7,1": 2, "7,2": 2, "7,3": 2, "7,4": 7, "7,5": 8, "7,6": 8, "7,7": 8, "7,8": 8, "7,9": 3, "7,10": 3, "7,11": 3, "7,12": 3, "7,13": 3, "7,14": 2, "7,15": 6, "8,0": 6, "8,1": 2, "8,2": 2, "8,3": 2, "8,4": 7, "8,5": 8, "8,6": 8, "8,7": 8, "8,8": 8, "8,9": 3, "8,10": 3, "8,11": 3, "8,12": 3, "8,13": 3, "8,14": 2, "8,15": 6, "9,0": 5, "9,1": 5, "9,2": 5, "9,3": 2, "9,4": 5, "9,5": 5, "9,6": 5, "9,7": 8, "9,8": 8, "9,9": 3, "9,10": 3, "9,11": 3, "9,12": 3, "9,13": 3, "9,14": 5, "9,15": 5, "10,0": 5, "10,1": 6, "10,2": 5, "10,3": 2, "10,4": 8, "10,5": 8, "10,6": 5, "10,7": 8, "10,8": 8, "10,9": 5, "10,10": 8, "10,11": 8, "10,12": 2, "10,13": 5, "10,14": 6, "10,15": 5, "11,0": 6, "11,1": 5, "11,2": 5, "11,3": 6, "11,4": 5, "11,5": 8, "11,6": 5, "11,7": 7, "11,8": 7, "11,9": 5, "11,10": 8, "11,11": 5, "11,12": 6, "11,13": 5, "11,14": 5, "11,15": 6, "12,0": 2, "12,1": 1, "12,2": 6, "12,3": 6, "12,4": 6, "12,5": 2, "12,6": 2, "12,7": 2, "12,8": 2, "12,9": 2, "12,10": 2, "12,11": 6, "12,12": 6, "12,13": 6, "12,14": 1, "12,15": 2, "13,0": 2, "13,1": 6, "13,2": 1, "13,3": 6, "13,4": 5, "13,5": 5, "13,6": 5, "13,7": 2, "13,8": 2, "13,9": 5, "13,10": 5, "13,11": 5, "13,12": 6, "13,13": 1, "13,14": 6, "13,15": 2, "14,0": 1, "14,1": 6, "14,2": 6, "14,3": 1, "14,4": 5, "14,5": 6, "14,6": 5, "14,7": 2, "14,8": 2, "14,9": 5, "14,10": 6, "14,11": 5, "14,12": 1, "14,13": 6, "14,14": 6, "14,15": 1, "15,0": 2, "15,1": 1, "15,2": 2, "15,3": 2, "15,4": 6, "15,5": 5, "15,6": 5, "15,7": 6, "15,8": 6, "15,9": 5, "15,10": 5, "15,11": 6, "15,12": 2, "15,13": 2, "15,14": 1, "15,15": 2}}], "output": {"grid": {"0,0": 5, "0,1": 8, "0,2": 8, "0,3": 2, "0,4": 5, "1,0": 5, "1,1": 5, "1,2": 5, "1,3": 2, "1,4": 5, "2,0": 8, "2,1": 8, "2,2": 7, "2,3": 2, "2,4": 2, "3,0": 8, "3,1": 8, "3,2": 7, "3,3": 2, "3,4": 2, "4,0": 5, "4,1": 5, "4,2": 5, "4,3": 2, "4,4": 5}}}, {"inputs": [{"grid": {"0,0": 8, "0,1": 9, "0,2": 9, "0,3": 3, "0,4": 3, "0,5": 3, "0,6": 3, "0,7": 3, "0,8": 2, "0,9": 2, "0,10": 7, "0,11": 7, "0,12": 8, "0,13": 9, "0,14": 9, "0,15": 8, "1,0": 9, "1,1": 8, "1,2": 9, "1,3": 3, "1,4": 3, "1,5": 3, "1,6": 3, "1,7": 3, "1,8": 2, "1,9": 7, "1,10": 1, "1,11": 7, "1,12": 9, "1,13": 9, "1,14": 8, "1,15": 9, "2,0": 9, "2,1": 9, "2,2": 8, "2,3": 3, "2,4": 3, "2,5": 3, "2,6": 3, "2,7": 3, "2,8": 7, "2,9": 2, "2,10": 7, "2,11": 2, "2,12": 2, "2,13": 8, "2,14": 9, "2,15": 9, "3,0": 8, "3,1": 9, "3,2": 2, "3,3": 3, "3,4": 3, "3,5": 3, "3,6": 3, "3,7": 3, "3,8": 1, "3,9": 7, "3,10": 2, "3,11": 2, "3,12": 9, "3,13": 2, "3,14": 9, "3,15": 8, "4,0": 7, "4,1": 7, "4,2": 2, "4,3": 3, "4,4": 3, "4,5": 3, "4,6": 3, "4,7": 3, "4,8": 7, "4,9": 8, "4,10": 7, "4,11": 2, "4,12": 2, "4,13": 2, "4,14": 7, "4,15": 7, "5,0": 7, "5,1": 1, "5,2": 7, "5,3": 2, "5,4": 7, "5,5": 2, "5,6": 7, "5,7": 7, "5,8": 7, "5,9": 7, "5,10": 2, "5,11": 7, "5,12": 2, "5,13": 7, "5,14": 1, "5,15": 7, "6,0": 2, "6,1": 7, "6,2": 2, "6,3": 7, "6,4": 8, "6,5": 7, "6,6": 2, "6,7": 8, "6,8": 8, "6,9": 2, "6,10": 7, "6,11": 8, "6,12": 7, "6,13": 2, "6,14": 7, "6,15": 2, "7,0": 2, "7,1": 2, "7,2": 7, "7,3": 1, "7,4": 7, "7,5": 7, "7,6": 8, "7,7": 2, "7,8": 2, "7,9": 8, "7,10": 7, "7,11": 7, "7,12": 1, "7,13": 7, "7,14": 2, "7,15": 2, "8,0": 2, "8,1": 2, "8,2": 7, "8,3": 1, "8,4": 7, "8,5": 7, "8,6": 8, "8,7": 2, "8,8": 2, "8,9": 8, "8,10": 7, "8,11": 7, "8,12": 1, "8,13": 7, "8,14": 2, "8,15": 2, "9,0": 2, "9,1": 7, "9,2": 2, "9,3": 7, "9,4": 8, "9,5": 7, "9,6": 2, "9,7": 8, "9,8": 8, "9,9": 2, "9,10": 7, "9,11": 8, "9,12": 7, "9,13": 2, "9,14": 7, "9,15": 2, "10,0": 7, "10,1": 1, "10,2": 7, "10,3": 2, "10,4": 7, "10,5": 2, "10,6": 7, "10,7": 7, "10,8": 7, "10,9": 7, "10,10": 2, "10,11": 7, "10,12": 2, "10,13": 7, "10,14": 1, "10,15": 7, "11,0": 7, "11,1": 7, "11,2": 2, "11,3": 2, "11,4": 2, "11,5": 7, "11,6": 8, "11,7": 7, "11,8": 7, "11,9": 8, "11,10": 7, "11,11": 2, "11,12": 2, "11,13": 2, "11,14": 7, "11,15": 7, "12,0": 8, "12,1": 9, "12,2": 2, "12,3": 9, "12,4": 2, "12,5": 2, "12,6": 7, "12,7": 1, "12,8": 1, "12,9": 7, "12,10": 2, "12,11": 2, "12,12": 9, "12,13": 2, "12,14": 9, "12,15": 8, "13,0": 9, "13,1": 9, "13,2": 8, "13,3": 2, "13,4": 2, "13,5": 7, "13,6": 2, "13,7": 7, "13,8": 7, "13,9": 2, "13,10": 7, "13,11": 2, "13,12": 2, "13,13": 8, "13,14": 9, "13,15": 9, "14,0": 9, "14,1": 8, "14,2": 9, "14,3": 9, "14,4": 7, "14,5": 1, "14,6": 7, "14,7": 2, "14,8": 2, "14,9": 7, "14,10": 1, "14,11": 7, "14,12": 9, "14,13": 9, "14,14": 8, "14,15": 9, "15,0": 8, "15,1": 9, "15,2": 9, "15,3": 8, "15,4": 7, "15,5": 7, "15,6": 2, "15,7": 2, "15,8": 2, "15,9": 2, "15,10": 7, "15,11": 7, "15,12": 8, "15,13": 9, "15,14": 9, "15,15": 8}}], "output": {"grid": {"0,0": 8, "0,1": 7, "0,2": 7, "0,3": 2, "0,4": 2, "1,0": 9, "1,1": 7, "1,2": 1, "1,3": 7, "1,4": 2, "2,0": 2, "2,1": 2, "2,2": 7, "2,3": 2, "2,4": 7, "3,0": 9, "3,1": 2, "3,2": 2, "3,3": 7, "3,4": 1, "4,0": 2, "4,1": 2, "4,2": 7, "4,3": 8, "4,4": 7}}}, {"inputs": [{"grid": {"0,0": 2, "0,1": 2, "0,2": 5, "0,3": 2, "0,4": 9, "0,5": 9, "0,6": 9, "0,7": 3, "0,8": 3, "0,9": 3, "0,10": 3, "0,11": 3, "0,12": 2, "0,13": 5, "0,14": 2, "0,15": 2, "1,0": 2, "1,1": 5, "1,2": 4, "1,3": 4, "1,4": 9, "1,5": 5, "1,6": 2, "1,7": 3, "1,8": 3, "1,9": 3, "1,10": 3, "1,11": 3, "1,12": 4, "1,13": 4, "1,14": 5, "1,15": 2, "2,0": 5, "2,1": 4, "2,2": 5, "2,3": 4, "2,4": 9, "2,5": 2, "2,6": 5, "2,7": 3, "2,8": 3, "2,9": 3, "2,10": 3, "2,11": 3, "2,12": 4, "2,13": 5, "2,14": 4, "2,15": 5, "3,0": 2, "3,1": 4, "3,2": 4, "3,3": 4, "3,4": 5, "3,5": 9, "3,6": 5, "3,7": 3, "3,8": 3, "3,9": 3, "3,10": 3, "3,11": 3, "3,12": 4, "3,13": 4, "3,14": 4, "3,15": 2, "4,0": 9, "4,1": 9, "4,2": 9, "4,3": 5, "4,4": 9, "4,5": 6, "4,6": 9, "4,7": 3, "4,8": 3, "4,9": 3, "4,10": 3, "4,11": 3, "4,12": 5, "4,13": 9, "4,14": 9, "4,15": 9, "5,0": 9, "5,1": 5, "5,2": 2, "5,3": 9, "5,4": 6, "5,5": 6, "5,6": 9, "5,7": 9, "5,8": 9, "5,9": 9, "5,10": 6, "5,11": 6, "5,12": 9, "5,13": 2, "5,14": 5, "5,15": 9, "6,0": 9, "6,1": 2, "6,2": 5, "6,3": 5, "6,4": 9, "6,5": 9, "6,6": 7, "6,7": 9, "6,8": 9, "6,9": 7, "6,10": 9, "6,11": 9, "6,12": 5, "6,13": 5, "6,14": 2, "6,15": 9, "7,0": 5, "7,1": 9, "7,2": 5, "7,3": 2, "7,4": 9, "7,5": 9, "7,6": 9, "7,7": 6, "7,8": 6, "7,9": 9, "7,10": 9, "7,11": 9, "7,12": 2, "7,13": 5, "7,14": 9, "7,15": 5, "8,0": 5, "8,1": 9, "8,2": 5, "8,3": 2, "8,4": 9, "8,5": 9, "8,6": 9, "8,7": 6, "8,8": 6, "8,9": 9, "8,10": 9, "8,11": 9, "8,12": 2, "8,13": 5, "8,14": 9, "8,15": 5, "9,0": 9, "9,1": 2, "9,2": 5, "9,3": 5, "9,4": 9, "9,5": 9, "9,6": 7, "9,7": 9, "9,8": 9, "9,9": 7, "9,10": 9, "9,11": 9, "9,12": 5, "9,13": 5, "9,14": 2, "9,15": 9, "10,0": 9, "10,1": 5, "10,2": 2, "10,3": 9, "10,4": 6, "10,5": 6, "10,6": 9, "10,7": 9, "10,8": 9, "10,9": 9, "10,10": 6, "10,11": 6, "10,12": 9, "10,13": 2, "10,14": 5, "10,15": 9, "11,0": 9, "11,1": 9, "11,2": 9, "11,3": 5, "11,4": 9, "11,5": 6, "11,6": 9, "11,7": 9, "11,8": 9, "11,9": 9, "11,10": 6, "11,11": 9, "11,12": 5, "11,13": 9, "11,14": 9, "11,15": 9, "12,0": 2, "12,1": 4, "12,2": 4, "12,3": 4, "12,4": 5, "12,5": 9, "12,6": 5, "12,7": 2, "12,8": 2, "12,9": 5, "12,10": 9, "12,11": 5, "12,12": 4, "12,13": 4, "12,14": 4, "12,15": 2, "13,0": 5, "13,1": 4, "13,2": 5, "13,3": 4, "13,4": 9, "13,5": 2, "13,6": 5, "13,7": 5, "13,8": 5, "13,9": 5, "13,10": 2, "13,11": 9, "13,12": 4, "13,13": 5, "13,14": 4, "13,15": 5, "14,0": 2, "14,1": 5, "14,2": 4, "14,3": 4, "14,4": 9, "14,5": 5, "14,6": 2, "14,7": 9, "14,8": 9, "14,9": 2, "14,10": 5, "14,11": 9, "14,12": 4, "14,13": 4, "14,14": 5, "14,15": 2, "15,0": 2, "15,1": 2, "15,2": 5, "15,3": 2, "15,4": 9, "15,5": 9, "15,6": 9, "15,7": 5, "15,8": 5, "15,9": 9, "15,10": 9, "15,11": 9, "15,12": 2, "15,13": 5, "15,14": 2, "15,15": 2}}], "output": {"grid": {"0,0": 5, "0,1": 5, "0,2": 9, "0,3": 9, "0,4": 9, "1,0": 9, "1,1": 9, "1,2": 2, "1,3": 5, "1,4": 9, "2,0": 5, "2,1": 5, "2,2": 5, "2,3": 2, "2,4": 9, "3,0": 2, "3,1": 2, "3,2": 5, "3,3": 9, "3,4": 5, "4,0": 9, "4,1": 9, "4,2": 9, "4,3": 6, "4,4": 9}}}], "name": "dc0a314f.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) black) true))", "(lambda (to_original_grid_overlay (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) black) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) black)) true))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) black)) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false false)) black)) true))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false false)) black)) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) true))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) true))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) false))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 south false))))) true))", "(lambda (to_original_grid_overlay (remove_black_b (remove_black_b (remove_black_b (remove_black_b (move (grid_to_block $0) 5 south false))))) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (center_block_on_tile (grid_to_block $0) (get_block_center (grid_to_block $0))))))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) true))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) false))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) true))) true)))) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) true))) true)))) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (map_block_tiles (singleton_block (find_blocks_by_black_b $0 true false)) (lambda $0)))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (map_block_tiles (singleton_block (find_blocks_by_black_b $0 false false)) (lambda $0)))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (map_block_tiles (singleton_block (find_blocks_by_black_b $0 true true)) (lambda $0)))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 true true) true))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 true true) false))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 false true) true))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 false true) false))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 true false) true))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 true false) false))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 false false) true))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true true)) orange)) (touches_any_boundary (box_block (box_block (merge_blocks (find_blocks_by_black_b $0 false false) false))))))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 false false) true))) (negate_boolean true))))) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 false false) true))) (negate_boolean true))))) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (center_block_on_tile (grid_to_block $0) (get_block_center (remove_black_b (remove_black_b (grid_to_block $0))))))))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) true))) true)))) (negate_boolean true)))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) true))) true)))) (negate_boolean false)))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) true))) (negate_boolean true))))) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true true) true))) (negate_boolean true))))) false))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true false) true))) (touches_any_boundary (grid_to_block $0)))))) true))", "(lambda (to_min_grid (reflect (grid_to_block $0) (negate_boolean (negate_boolean (is_rectangle (remove_black_b (remove_black_b (merge_blocks (find_blocks_by_black_b $0 true false) true))) (touches_any_boundary (grid_to_block $0)))))) false))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) invisible)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) black)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) blue)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) red)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) green)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) yellow)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) grey)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) pink)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) orange)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) teal)))))))))", "(lambda (to_original_grid_overlay (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 true false)) orange)) (touches_any_boundary (box_block (box_block (box_block (box_block (box_block (fill_color (grid_to_block $0) maroon)))))))))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 1)))))))))) true))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (has_min_tiles (grid_to_block $0) 1)))))))))) false))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) invisible)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) black)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) blue)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) red)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) green)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) yellow)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) grey)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) pink)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) orange)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))) (has_color (grid_to_block $0) teal)))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 2, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 2, "1,4": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "3,0": 0, "3,1": 6, "3,2": 0, "3,3": 0, "3,4": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0}}], "output": {"grid": {"0,0": 2, "0,1": 1, "0,2": 1, "0,3": 1, "0,4": 1, "1,0": 1, "1,1": 1, "1,2": 1, "1,3": 2, "1,4": 1, "2,0": 0, "2,1": 0, "2,2": 1, "2,3": 1, "2,4": 1, "3,0": 0, "3,1": 6, "3,2": 0, "3,3": 0, "3,4": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 2, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 3, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 8, "4,7": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "6,0": 0, "6,1": 0, "6,2": 2, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 1, "0,7": 2, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 1, "1,7": 1, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 3, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 8, "4,7": 0, "5,0": 0, "5,1": 1, "5,2": 1, "5,3": 1, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "6,0": 0, "6,1": 1, "6,2": 2, "6,3": 1, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "7,0": 0, "7,1": 1, "7,2": 1, "7,3": 1, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "1,0": 0, "1,1": 2, "1,2": 0, "1,3": 0, "1,4": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0}}], "output": {"grid": {"0,0": 1, "0,1": 1, "0,2": 1, "0,3": 0, "0,4": 0, "1,0": 1, "1,1": 2, "1,2": 1, "1,3": 0, "1,4": 0, "2,0": 1, "2,1": 1, "2,2": 1, "2,3": 0, "2,4": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0}}}], "name": "dc1df850.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_min_grid (remove_black_b (grid_to_block $0)) true))", "(lambda (to_min_grid (remove_black_b (grid_to_block $0)) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 3) 3) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 3) 3) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 3) 4) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 3) 4) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) 3) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) 3) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) 7) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) 7) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 3) 3) (lambda false))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 3) 3) (lambda false))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) (get_original_grid_width (grid_to_block $0))) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) (get_original_grid_width (grid_to_block $0))) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 3) (get_original_grid_width (grid_to_block $0))) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 3) (get_original_grid_width (grid_to_block $0))) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean false)))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean false)))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 3) 3) (lambda false))) (touches_any_boundary (box_block (grid_to_block $0)))))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) (get_num_tiles (grid_to_block $0))) (get_original_grid_width (grid_to_block $0))) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) (get_num_tiles (grid_to_block $0))) (get_original_grid_width (grid_to_block $0))) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) (get_height (grid_to_block $0))) (lambda true))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) (get_height (grid_to_block $0))) (lambda true))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 3) (get_original_grid_width (grid_to_block $0))) (lambda true))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda true))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) (get_original_grid_width (grid_to_block $0))) (lambda true))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (box_block (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (grid_to_block $0)))))))))))))))) true))", "(lambda (to_original_grid_overlay (box_block (box_block (box_block (box_block (box_block (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (remove_black_b (grid_to_block $0)))))))))))))))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 0)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 1)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 2)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 3)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 4)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 5)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 6)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 7)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 8)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) 3) (lambda true))) (has_min_tiles (grid_to_block $0) 9)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) (get_height (grid_to_block $0))) (lambda true))) (negate_boolean true)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) (get_original_grid_width (grid_to_block $0))) (get_height (grid_to_block $0))) (lambda true))) (negate_boolean false)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) (get_num_tiles (grid_to_block $0))) (get_original_grid_width (grid_to_block $0))) (lambda true))) (negate_boolean true)))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) (get_num_tiles (grid_to_block $0))) (get_original_grid_width (grid_to_block $0))) (lambda true))) (negate_boolean false)))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 grey (touches_any_boundary (box_block (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false false)) black)))) (touches_any_boundary (grid_to_block $0))) false true))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 grey (touches_any_boundary (box_block (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false false)) black)))) (touches_any_boundary (grid_to_block $0))) false false))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 grey (touches_any_boundary (box_block (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false true)) black)))) (touches_any_boundary (grid_to_block $0))) false true))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 grey (touches_any_boundary (box_block (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false true)) black)))) (touches_any_boundary (grid_to_block $0))) false false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean false)))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean (negate_boolean (negate_boolean false)))))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 0) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean (negate_boolean (negate_boolean false)))))) false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean (negate_boolean (negate_boolean true)))))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean (negate_boolean (negate_boolean true)))))) false))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 grey (touches_any_boundary (box_block (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false true)) black)))) (touches_any_boundary (grid_to_block $0))) true true))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 grey (touches_any_boundary (box_block (box_block (fill_color (singleton_block (find_blocks_by_black_b $0 false true)) black)))) (touches_any_boundary (grid_to_block $0))) true false))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 3) (get_original_grid_width (grid_to_block $0))) (lambda true))) (touches_any_boundary (box_block (grid_to_block $0)))))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean (negate_boolean (negate_boolean false)))))) true))", "(lambda (to_min_grid (box_block (filter_block_tiles (grow (grow (grow (grid_to_block $0) 3) 2) (get_original_grid_width (grid_to_block $0))) (lambda (negate_boolean (negate_boolean (negate_boolean false)))))) false))"]}], "programTimeout": 0.1}