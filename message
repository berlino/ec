{"tasks": [{"examples": [{"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 9, "2,2": 9, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 6, "3,2": 6, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 8, "5,6": 4, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 7, "6,6": 7, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 9, "2,2": 9, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 6, "3,2": 6, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 3, "4,2": 3, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 3, "5,2": 3, "5,3": 0, "5,4": 0, "5,5": 8, "5,6": 4, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 7, "6,6": 7, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 3, "7,6": 3, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 3, "8,6": 3, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 3, "9,6": 3, "9,7": 0, "9,8": 0, "9,9": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 4, "1,3": 8, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 9, "2,3": 4, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 2, "4,7": 1, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 1, "5,7": 2, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 4, "1,3": 8, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 9, "2,3": 4, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 3, "3,3": 3, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 3, "4,3": 3, "4,4": 0, "4,5": 0, "4,6": 2, "4,7": 1, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 3, "5,3": 3, "5,4": 0, "5,5": 0, "5,6": 1, "5,7": 2, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 3, "6,7": 3, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 3, "7,7": 3, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 2, "1,3": 4, "1,4": 0, "1,5": 0, "1,6": 9, "1,7": 8, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 6, "2,3": 7, "2,4": 0, "2,5": 0, "2,6": 8, "2,7": 9, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 7, "5,5": 6, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 6, "6,5": 6, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 0, "1,1": 0, "1,2": 2, "1,3": 4, "1,4": 0, "1,5": 0, "1,6": 9, "1,7": 8, "1,8": 0, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 6, "2,3": 7, "2,4": 0, "2,5": 0, "2,6": 8, "2,7": 9, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 3, "3,3": 3, "3,4": 0, "3,5": 0, "3,6": 3, "3,7": 3, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 3, "4,3": 3, "4,4": 0, "4,5": 0, "4,6": 3, "4,7": 3, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 3, "5,3": 3, "5,4": 7, "5,5": 6, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 3, "6,3": 3, "6,4": 6, "6,5": 6, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 3, "7,5": 3, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 3, "8,5": 3, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 1, "1,1": 1, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 2, "1,7": 9, "1,8": 0, "1,9": 0, "2,0": 2, "2,1": 1, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 1, "2,7": 6, "2,8": 0, "2,9": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 4, "3,4": 7, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 8, "4,4": 4, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "1,0": 1, "1,1": 1, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 2, "1,7": 9, "1,8": 0, "1,9": 0, "2,0": 2, "2,1": 1, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 1, "2,7": 6, "2,8": 0, "2,9": 0, "3,0": 3, "3,1": 3, "3,2": 0, "3,3": 4, "3,4": 7, "3,5": 0, "3,6": 3, "3,7": 3, "3,8": 0, "3,9": 0, "4,0": 3, "4,1": 3, "4,2": 0, "4,3": 8, "4,4": 4, "4,5": 0, "4,6": 3, "4,7": 3, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 3, "5,4": 3, "5,5": 0, "5,6": 3, "5,7": 3, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 3, "6,4": 3, "6,5": 0, "6,6": 3, "6,7": 3, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 3, "7,4": 3, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}}], "name": "fcc82909.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean false)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean false)) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 8) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 8) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda (get_original_grid_width $0)) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda (get_original_grid_width $0)) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (negate_boolean (negate_boolean true))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (negate_boolean (negate_boolean false))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda (get_original_grid_width $0)) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda (get_original_grid_width $0)) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 8) (touches_any_boundary (grid_to_block $0))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south)) (lambda 2) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south)) (lambda 2) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north_east)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north_east)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (negate_boolean (negate_boolean (negate_boolean true)))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (negate_boolean (negate_boolean (negate_boolean false)))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north_east)) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north_east)) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north_east)) (lambda 2) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north_east)) (lambda 2) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (is_symmetrical (grid_to_block $0) true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (lambda 7) (is_symmetrical (grid_to_block $0) false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north_east)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north_east)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north)) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean true)))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean false)))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) false true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) false false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 7) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 7) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 8) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 8) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true))) true) (lambda 8) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true))) true) (lambda 8) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 9) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 9) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 8) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 8) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 8) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 8) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true))) true) (lambda 8) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true))) true) (lambda 8) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 9) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 9) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 8) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 8) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 7) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 7) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 6) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 6) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 7) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 7) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 5) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda 5) false) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) north_west)) black) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) north_west)) black) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (negate_boolean (negate_boolean (negate_boolean true)))) black) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (negate_boolean (negate_boolean (negate_boolean true)))) black) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) west)) green) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) west)) green) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) true) blue) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) true) blue) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) west)) yellow) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) west)) yellow) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north_west)) true) red) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north_west)) true) red) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) south_east)) blue) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) south_east)) blue) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (negate_boolean (negate_boolean (negate_boolean true)))) green) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (negate_boolean (negate_boolean (negate_boolean true)))) green) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) true) pink) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) true) pink) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) north)) red) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) north)) red) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) north)) blue) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) north)) blue) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true))) true) (lambda 6) (negate_boolean false)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true))) true) (lambda 6) (negate_boolean false)) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) west)) pink) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (touches_boundary (grid_to_block $0) west)) pink) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 8) false) (negate_boolean true)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda 8) false) (negate_boolean false)))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) true) blue) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) true) blue) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean true)))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean false)))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) false true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) false false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) false) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) (negate_boolean true)) invisible) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) (negate_boolean true)) invisible) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (touches_any_boundary (grid_to_block $0))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (touches_any_boundary (grid_to_block $0))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (negate_boolean false)) north)) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (negate_boolean false)) north)) false false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 6) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 6) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 7) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 7) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 9) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 9) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 6) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 6) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (negate_boolean (negate_boolean false))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (negate_boolean (negate_boolean false))) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 7) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 7) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 9) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 9) true) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda (get_num_tiles (grid_to_block $1))) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda (get_num_tiles (grid_to_block $1))) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (negate_boolean (negate_boolean true))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (negate_boolean (negate_boolean true))) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda (get_num_tiles (grid_to_block $1))) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda (get_num_tiles (grid_to_block $1))) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 3) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 3) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (has_min_tiles (grid_to_block $0) 0)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (has_min_tiles (grid_to_block $0) 0)) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) false) invisible) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west)) false) invisible) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (touches_any_boundary (grid_to_block $0))) (negate_boolean true)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (touches_any_boundary (grid_to_block $0))) (negate_boolean false)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) false) (negate_boolean true)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) false) (negate_boolean false)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 9) (negate_boolean (negate_boolean (negate_boolean true)))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 9) (negate_boolean (negate_boolean (negate_boolean true)))) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 7) false) (negate_boolean true)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 7) false) (negate_boolean false)))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south_east)) true) blue) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south_east)) true) blue) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) true) invisible) true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) true) invisible) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (has_min_tiles (grid_to_block $0) 7)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north)) (lambda 7) (has_min_tiles (grid_to_block $0) 7)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) true) (negate_boolean true)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_same_color_blocks $0 true (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true)))) (lambda 8) true) (negate_boolean false)))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) true) orange) true))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) false true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) false false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) pink) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) pink) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) invisible) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) invisible) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) yellow) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) yellow) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) maroon) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) maroon) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) grey) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) grey) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) green) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) green) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) teal) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) teal) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) blue) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) true) blue) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) true) true) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) true) true) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) south_east) true) true) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) south_east) true) true) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) true) orange) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) true) orange) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) invisible) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) invisible) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) (is_tile (grid_to_block $0))) blue) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) (is_tile (grid_to_block $0))) blue) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_same_color_blocks $0 true true)) orange) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_same_color_blocks $0 true true)) orange) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) blue) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) blue) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) blue) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) yellow) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) yellow) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) false) yellow) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) false) yellow) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) (is_tile (grid_to_block $0))) black) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) (is_tile (grid_to_block $0))) black) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) (is_tile (grid_to_block $0))) pink) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 true true) (is_tile (grid_to_block $0))) pink) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) maroon) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) maroon) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) teal) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) teal) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) grey) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) grey) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_black_b $0 true true)) pink) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_black_b $0 true true)) pink) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) green) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (merge_blocks (tiles_to_blocks (find_tiles_by_black_b $0)) true) green) false))", "(lambda (to_min_grid (reflect (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) (lambda 8) false)) false)) false) true))", "(lambda (to_min_grid (reflect (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) (lambda 8) false)) false)) false) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_black_b $0 true true)) green) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_black_b $0 true true)) green) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_black_b $0 true true)) teal) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_black_b $0 true true)) teal) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) green) true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (find_blocks_by_inferred_b $0 false false)) green) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean true)))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean false)))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean false)))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))))))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south_east))) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) south_east))) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north))) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) north))) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) (negate_boolean true)))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) (negate_boolean false)))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) south)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) south)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) (negate_boolean (negate_boolean true))))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) (negate_boolean (negate_boolean false))))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) south)) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) south)) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 4) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 4) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) (negate_boolean (negate_boolean (negate_boolean true)))))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) (touches_boundary (grid_to_block $0) west))) (negate_boolean (negate_boolean (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 8) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 8) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 9) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 9) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 7) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 7) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 6) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 6) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 7) (negate_boolean (negate_boolean true))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) west)) (lambda 7) (negate_boolean (negate_boolean false))))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_blocks_by_black_b $0 true (touches_boundary (grid_to_block $0) north)) (lambda 8) (negate_boolean (negate_boolean true))))))"]}, {"examples": [{"inputs": [{"grid": {"0,0": 1, "0,1": 0, "0,2": 7, "0,3": 0, "0,4": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 1, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 1, "1,9": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 1, "2,8": 0, "2,9": 7, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 1, "3,7": 0, "3,8": 7, "3,9": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 1, "4,6": 0, "4,7": 7, "4,8": 0, "4,9": 0, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 1, "5,5": 0, "5,6": 7, "5,7": 0, "5,8": 0, "5,9": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 1, "6,4": 0, "6,5": 7, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "7,0": 0, "7,1": 0, "7,2": 1, "7,3": 0, "7,4": 7, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "8,0": 0, "8,1": 1, "8,2": 0, "8,3": 7, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "9,0": 1, "9,1": 0, "9,2": 7, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 0, "0,2": 2, "0,3": 0, "0,4": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 2, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 2, "3,4": 0, "4,0": 0, "4,1": 0, "4,2": 2, "4,3": 0, "4,4": 0}}}, {"inputs": [{"grid": {"0,0": 4, "0,1": 0, "0,2": 6, "0,3": 0, "0,4": 8}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 4, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 4, "1,14": 0, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 4, "2,13": 0, "2,14": 6, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 4, "3,12": 0, "3,13": 6, "3,14": 0, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 4, "4,11": 0, "4,12": 6, "4,13": 0, "4,14": 8, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 4, "5,10": 0, "5,11": 6, "5,12": 0, "5,13": 8, "5,14": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 4, "6,9": 0, "6,10": 6, "6,11": 0, "6,12": 8, "6,13": 0, "6,14": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 4, "7,8": 0, "7,9": 6, "7,10": 0, "7,11": 8, "7,12": 0, "7,13": 0, "7,14": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 4, "8,7": 0, "8,8": 6, "8,9": 0, "8,10": 8, "8,11": 0, "8,12": 0, "8,13": 0, "8,14": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 4, "9,6": 0, "9,7": 6, "9,8": 0, "9,9": 8, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "9,14": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 4, "10,5": 0, "10,6": 6, "10,7": 0, "10,8": 8, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "10,14": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 4, "11,4": 0, "11,5": 6, "11,6": 0, "11,7": 8, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "11,14": 0, "12,0": 0, "12,1": 0, "12,2": 4, "12,3": 0, "12,4": 6, "12,5": 0, "12,6": 8, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "12,14": 0, "13,0": 0, "13,1": 4, "13,2": 0, "13,3": 6, "13,4": 0, "13,5": 8, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0, "13,14": 0, "14,0": 4, "14,1": 0, "14,2": 6, "14,3": 0, "14,4": 8, "14,5": 0, "14,6": 0, "14,7": 0, "14,8": 0, "14,9": 0, "14,10": 0, "14,11": 0, "14,12": 0, "14,13": 0, "14,14": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 9, "0,2": 0, "0,3": 8, "0,4": 4}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 9, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 9, "2,14": 0, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 9, "3,13": 0, "3,14": 8, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 9, "4,12": 0, "4,13": 8, "4,14": 4, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 9, "5,11": 0, "5,12": 8, "5,13": 4, "5,14": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 9, "6,10": 0, "6,11": 8, "6,12": 4, "6,13": 0, "6,14": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 9, "7,9": 0, "7,10": 8, "7,11": 4, "7,12": 0, "7,13": 0, "7,14": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 9, "8,8": 0, "8,9": 8, "8,10": 4, "8,11": 0, "8,12": 0, "8,13": 0, "8,14": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 9, "9,7": 0, "9,8": 8, "9,9": 4, "9,10": 0, "9,11": 0, "9,12": 0, "9,13": 0, "9,14": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 9, "10,6": 0, "10,7": 8, "10,8": 4, "10,9": 0, "10,10": 0, "10,11": 0, "10,12": 0, "10,13": 0, "10,14": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 9, "11,5": 0, "11,6": 8, "11,7": 4, "11,8": 0, "11,9": 0, "11,10": 0, "11,11": 0, "11,12": 0, "11,13": 0, "11,14": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 9, "12,4": 0, "12,5": 8, "12,6": 4, "12,7": 0, "12,8": 0, "12,9": 0, "12,10": 0, "12,11": 0, "12,12": 0, "12,13": 0, "12,14": 0, "13,0": 0, "13,1": 0, "13,2": 9, "13,3": 0, "13,4": 8, "13,5": 4, "13,6": 0, "13,7": 0, "13,8": 0, "13,9": 0, "13,10": 0, "13,11": 0, "13,12": 0, "13,13": 0, "13,14": 0, "14,0": 0, "14,1": 9, "14,2": 0, "14,3": 8, "14,4": 4, "14,5": 0, "14,6": 0, "14,7": 0, "14,8": 0, "14,9": 0, "14,10": 0, "14,11": 0, "14,12": 0, "14,13": 0, "14,14": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 4, "0,2": 0, "0,3": 0, "0,4": 0}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 4, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 4, "2,4": 0, "3,0": 0, "3,1": 0, "3,2": 4, "3,3": 0, "3,4": 0, "4,0": 0, "4,1": 4, "4,2": 0, "4,3": 0, "4,4": 0}}}, {"inputs": [{"grid": {"0,0": 0, "0,1": 6, "0,2": 7, "0,3": 8, "0,4": 9}}], "output": {"grid": {"0,0": 0, "0,1": 0, "0,2": 0, "0,3": 0, "0,4": 0, "0,5": 0, "0,6": 0, "0,7": 0, "0,8": 0, "0,9": 0, "0,10": 0, "0,11": 0, "0,12": 0, "0,13": 0, "0,14": 0, "0,15": 0, "0,16": 0, "0,17": 0, "0,18": 0, "0,19": 0, "1,0": 0, "1,1": 0, "1,2": 0, "1,3": 0, "1,4": 0, "1,5": 0, "1,6": 0, "1,7": 0, "1,8": 0, "1,9": 0, "1,10": 0, "1,11": 0, "1,12": 0, "1,13": 0, "1,14": 0, "1,15": 0, "1,16": 0, "1,17": 0, "1,18": 0, "1,19": 6, "2,0": 0, "2,1": 0, "2,2": 0, "2,3": 0, "2,4": 0, "2,5": 0, "2,6": 0, "2,7": 0, "2,8": 0, "2,9": 0, "2,10": 0, "2,11": 0, "2,12": 0, "2,13": 0, "2,14": 0, "2,15": 0, "2,16": 0, "2,17": 0, "2,18": 6, "2,19": 7, "3,0": 0, "3,1": 0, "3,2": 0, "3,3": 0, "3,4": 0, "3,5": 0, "3,6": 0, "3,7": 0, "3,8": 0, "3,9": 0, "3,10": 0, "3,11": 0, "3,12": 0, "3,13": 0, "3,14": 0, "3,15": 0, "3,16": 0, "3,17": 6, "3,18": 7, "3,19": 8, "4,0": 0, "4,1": 0, "4,2": 0, "4,3": 0, "4,4": 0, "4,5": 0, "4,6": 0, "4,7": 0, "4,8": 0, "4,9": 0, "4,10": 0, "4,11": 0, "4,12": 0, "4,13": 0, "4,14": 0, "4,15": 0, "4,16": 6, "4,17": 7, "4,18": 8, "4,19": 9, "5,0": 0, "5,1": 0, "5,2": 0, "5,3": 0, "5,4": 0, "5,5": 0, "5,6": 0, "5,7": 0, "5,8": 0, "5,9": 0, "5,10": 0, "5,11": 0, "5,12": 0, "5,13": 0, "5,14": 0, "5,15": 6, "5,16": 7, "5,17": 8, "5,18": 9, "5,19": 0, "6,0": 0, "6,1": 0, "6,2": 0, "6,3": 0, "6,4": 0, "6,5": 0, "6,6": 0, "6,7": 0, "6,8": 0, "6,9": 0, "6,10": 0, "6,11": 0, "6,12": 0, "6,13": 0, "6,14": 6, "6,15": 7, "6,16": 8, "6,17": 9, "6,18": 0, "6,19": 0, "7,0": 0, "7,1": 0, "7,2": 0, "7,3": 0, "7,4": 0, "7,5": 0, "7,6": 0, "7,7": 0, "7,8": 0, "7,9": 0, "7,10": 0, "7,11": 0, "7,12": 0, "7,13": 6, "7,14": 7, "7,15": 8, "7,16": 9, "7,17": 0, "7,18": 0, "7,19": 0, "8,0": 0, "8,1": 0, "8,2": 0, "8,3": 0, "8,4": 0, "8,5": 0, "8,6": 0, "8,7": 0, "8,8": 0, "8,9": 0, "8,10": 0, "8,11": 0, "8,12": 6, "8,13": 7, "8,14": 8, "8,15": 9, "8,16": 0, "8,17": 0, "8,18": 0, "8,19": 0, "9,0": 0, "9,1": 0, "9,2": 0, "9,3": 0, "9,4": 0, "9,5": 0, "9,6": 0, "9,7": 0, "9,8": 0, "9,9": 0, "9,10": 0, "9,11": 6, "9,12": 7, "9,13": 8, "9,14": 9, "9,15": 0, "9,16": 0, "9,17": 0, "9,18": 0, "9,19": 0, "10,0": 0, "10,1": 0, "10,2": 0, "10,3": 0, "10,4": 0, "10,5": 0, "10,6": 0, "10,7": 0, "10,8": 0, "10,9": 0, "10,10": 6, "10,11": 7, "10,12": 8, "10,13": 9, "10,14": 0, "10,15": 0, "10,16": 0, "10,17": 0, "10,18": 0, "10,19": 0, "11,0": 0, "11,1": 0, "11,2": 0, "11,3": 0, "11,4": 0, "11,5": 0, "11,6": 0, "11,7": 0, "11,8": 0, "11,9": 6, "11,10": 7, "11,11": 8, "11,12": 9, "11,13": 0, "11,14": 0, "11,15": 0, "11,16": 0, "11,17": 0, "11,18": 0, "11,19": 0, "12,0": 0, "12,1": 0, "12,2": 0, "12,3": 0, "12,4": 0, "12,5": 0, "12,6": 0, "12,7": 0, "12,8": 6, "12,9": 7, "12,10": 8, "12,11": 9, "12,12": 0, "12,13": 0, "12,14": 0, "12,15": 0, "12,16": 0, "12,17": 0, "12,18": 0, "12,19": 0, "13,0": 0, "13,1": 0, "13,2": 0, "13,3": 0, "13,4": 0, "13,5": 0, "13,6": 0, "13,7": 6, "13,8": 7, "13,9": 8, "13,10": 9, "13,11": 0, "13,12": 0, "13,13": 0, "13,14": 0, "13,15": 0, "13,16": 0, "13,17": 0, "13,18": 0, "13,19": 0, "14,0": 0, "14,1": 0, "14,2": 0, "14,3": 0, "14,4": 0, "14,5": 0, "14,6": 6, "14,7": 7, "14,8": 8, "14,9": 9, "14,10": 0, "14,11": 0, "14,12": 0, "14,13": 0, "14,14": 0, "14,15": 0, "14,16": 0, "14,17": 0, "14,18": 0, "14,19": 0, "15,0": 0, "15,1": 0, "15,2": 0, "15,3": 0, "15,4": 0, "15,5": 6, "15,6": 7, "15,7": 8, "15,8": 9, "15,9": 0, "15,10": 0, "15,11": 0, "15,12": 0, "15,13": 0, "15,14": 0, "15,15": 0, "15,16": 0, "15,17": 0, "15,18": 0, "15,19": 0, "16,0": 0, "16,1": 0, "16,2": 0, "16,3": 0, "16,4": 6, "16,5": 7, "16,6": 8, "16,7": 9, "16,8": 0, "16,9": 0, "16,10": 0, "16,11": 0, "16,12": 0, "16,13": 0, "16,14": 0, "16,15": 0, "16,16": 0, "16,17": 0, "16,18": 0, "16,19": 0, "17,0": 0, "17,1": 0, "17,2": 0, "17,3": 6, "17,4": 7, "17,5": 8, "17,6": 9, "17,7": 0, "17,8": 0, "17,9": 0, "17,10": 0, "17,11": 0, "17,12": 0, "17,13": 0, "17,14": 0, "17,15": 0, "17,16": 0, "17,17": 0, "17,18": 0, "17,19": 0, "18,0": 0, "18,1": 0, "18,2": 6, "18,3": 7, "18,4": 8, "18,5": 9, "18,6": 0, "18,7": 0, "18,8": 0, "18,9": 0, "18,10": 0, "18,11": 0, "18,12": 0, "18,13": 0, "18,14": 0, "18,15": 0, "18,16": 0, "18,17": 0, "18,18": 0, "18,19": 0, "19,0": 0, "19,1": 6, "19,2": 7, "19,3": 8, "19,4": 9, "19,5": 0, "19,6": 0, "19,7": 0, "19,8": 0, "19,9": 0, "19,10": 0, "19,11": 0, "19,12": 0, "19,13": 0, "19,14": 0, "19,15": 0, "19,16": 0, "19,17": 0, "19,18": 0, "19,19": 0}}}], "name": "feca6190.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true) true) blue)) (negate_boolean true) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true) true) blue)) (negate_boolean true) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) blue) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) blue) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (negate_boolean (negate_boolean false))) invisible)) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (negate_boolean (negate_boolean false))) invisible)) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) pink) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) pink) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_any_boundary (grid_to_block $0))) true) north) false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_any_boundary (grid_to_block $0))) true) north) false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) blue) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) blue) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) pink) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) pink) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) orange) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) orange) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) yellow) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) yellow) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true) (negate_boolean (negate_boolean false))) yellow)) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true) (negate_boolean (negate_boolean false))) yellow)) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) grey) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) grey) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (tiles_to_blocks (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true))) true) invisible) false) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (tiles_to_blocks (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda true))) true) invisible) false) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) teal) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) teal) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) invisible) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) invisible) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) true) blue) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_blocks_by_black_b $0 true (touches_any_boundary (grid_to_block $0))) true) blue) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (fill_color (grid_to_block $0) maroon) south_east) true) true) blue) true) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (fill_color (grid_to_block $0) maroon) south_east) true) true) blue) true) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) orange) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) orange) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (fill_color (grid_to_block $0) green) south_east) true) true) blue) false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (fill_color (grid_to_block $0) green) south_east) true) true) blue) false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_any_boundary (grid_to_block $0))) true) west) false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_any_boundary (grid_to_block $0))) true) west) false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_any_boundary (grid_to_block $0))) false) west) true) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_any_boundary (grid_to_block $0))) false) west) true) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) yellow) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) yellow) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (tiles_to_blocks (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda false))) true) blue) false) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (tiles_to_blocks (filter_tiles (filter_tiles (find_tiles_by_black_b $0) (lambda true)) (lambda false))) true) blue) false) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) grey) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) grey) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true) true) pink)) (is_tile (grid_to_block $0)) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) north) true) true) pink)) (is_tile (grid_to_block $0)) false))", "(lambda (blocks_to_min_grid (find_same_color_blocks $0 (is_tile (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))) true) true true))", "(lambda (blocks_to_min_grid (find_same_color_blocks $0 (is_tile (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))) true) true false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) south_east)) false true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) south_east)) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) red) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) red) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) teal) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 false (touches_boundary (grid_to_block $0) west)) (has_color (merge_blocks (find_same_color_blocks $0 (is_tile (grid_to_block $0)) true) true) teal) false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) west)) false true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) west)) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (fill_color (grid_to_block $0) green) south_east) true) true) blue) true) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (fill_color (grid_to_block $0) green) south_east) true) true) blue) true) false false))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) south_east)) true true))", "(lambda (blocks_to_original_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) south_east)) true false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) south_east) false) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) south_east) false) false false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 4) true) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 4) true) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_height $0)) false) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_height $0)) false) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 3) (negate_boolean true)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 3) (negate_boolean true)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north)) (lambda 8) (negate_boolean true)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) north)) (lambda 8) (negate_boolean true)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 6) (negate_boolean (negate_boolean true))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 6) (negate_boolean (negate_boolean true))) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) false) (is_tile (grid_to_block $0))))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (lambda 8) (negate_boolean (negate_boolean false))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (lambda 8) (negate_boolean (negate_boolean false))) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_height $0)) false) (negate_boolean true)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_height $0)) false) (negate_boolean false)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean (negate_boolean false))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean (negate_boolean false))) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 0)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 0)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda false))) false) black) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda false))) false) black) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 7)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 7)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_width $0)) (touches_any_boundary (grid_to_block $0))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_width $0)) (touches_any_boundary (grid_to_block $0))) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 4)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 4)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean (negate_boolean (negate_boolean true)))) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean (negate_boolean (negate_boolean true)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) teal) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) teal) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 6)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 6)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda true))) true) invisible) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda true))) true) invisible) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_height $0)) false) (negate_boolean (negate_boolean true))))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda (get_original_grid_height $0)) false) (negate_boolean (negate_boolean false))))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean (negate_boolean false))) (negate_boolean true)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (negate_boolean (negate_boolean false))) (negate_boolean false)))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 1)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 1)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) blue) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) blue) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 3)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 3)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 2)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 2)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda true))) true) blue) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (tiles_to_blocks (filter_tiles (find_tiles_by_black_b $0) (lambda true))) true) blue) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) invisible) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) invisible) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 5)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (lambda 8) (has_min_tiles (grid_to_block $0) 5)) false))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (lambda 7) (is_symmetrical (grid_to_block $0) false)) true))", "(lambda (to_min_grid (first_of_sorted_object_list (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (lambda 7) (is_symmetrical (grid_to_block $0) false)) false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (grid_to_block $0) west) false) (has_color (merge_blocks (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true) true) orange) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (grid_to_block $0))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 4) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 4) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 5) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 5) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 1) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 1) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 2) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 2) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 3) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 3) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 0) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 0) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true))) false) (lambda 3) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true))) false) (lambda 3) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (map_tiles (find_tiles_by_black_b $0) (lambda (tile_to_block $0))))) true) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (map_tiles (find_tiles_by_black_b $0) (lambda (tile_to_block $0))))) true) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda (get_original_grid_width $0)) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda (get_original_grid_width $0)) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (wrap_block (singleton_block (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true true) true) east) true)) green true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (wrap_block (singleton_block (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true true) true) east) true)) green false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true))) true) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true))) true) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_symmetrical (grid_to_block $0) true)) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_symmetrical (grid_to_block $0) true)) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 9) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 9) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (map_tiles (find_tiles_by_black_b $0) (lambda (tile_to_block $0))))) true) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (map_tiles (find_tiles_by_black_b $0) (lambda (tile_to_block $0))))) true) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 8) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 8) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 6) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 6) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (map_tiles (find_tiles_by_black_b $0) (lambda (tile_to_block $0))))) true) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (map_tiles (find_tiles_by_black_b $0) (lambda (tile_to_block $0))))) true) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda (get_original_grid_height $0)) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda (get_original_grid_height $0)) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (wrap_block (singleton_block (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true true) true) north_east) false)) black true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (wrap_block (singleton_block (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true true) true) north_east) false)) black false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 7) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 7) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true))) true) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_any_boundary (grid_to_block $0)) true))) true) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 9) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 9) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 4) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 4) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 6) true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 true true))) (is_tile (grid_to_block $0))) (lambda 6) false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 7) (negate_boolean true)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 7) (negate_boolean false)))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (wrap_block (singleton_block (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true true) true) north) true)) yellow true))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (wrap_block (singleton_block (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 true true) true) north) true)) yellow false))))", "(lambda (to_original_grid_overlay (grid_to_block $0) (touches_any_boundary (first_of_sorted_object_list (find_same_color_blocks $0 (is_tile (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0)))) (is_tile (grid_to_block $0))) (lambda 3) (negate_boolean true)))))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean false)))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean false)))) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean false)))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean false)))) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (negate_boolean (negate_boolean (negate_boolean false)))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (negate_boolean (negate_boolean (negate_boolean false)))) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean true))))) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) false))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north_east) true) true) true))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north_east) true) true) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) false))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north) true) false) true))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north) true) false) false))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north) true) true) true))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north) true) true) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean true)))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean false)))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean true)))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean false)))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (fill_color (grid_to_block $0) invisible) false)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (fill_color (grid_to_block $0) invisible) false)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) blue)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) blue)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) yellow)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) yellow)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean (negate_boolean true)))))) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) red)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) red)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) orange)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) orange)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) teal)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) teal)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) green)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) green)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (fill_color (grid_to_block $0) teal) false)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (fill_color (grid_to_block $0) teal) false)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) grey)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) grey)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) black)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) black)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) invisible)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) invisible)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) maroon)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (has_color (singleton_block (tiles_to_blocks (find_tiles_by_black_b $0))) maroon)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (tile_to_block (get_block_center (grid_to_block $0))) false)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (tile_to_block (get_block_center (grid_to_block $0))) false)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) (negate_boolean true)))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) west)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) (negate_boolean false)))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north) true) (negate_boolean false)) true))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true) true) north) true) (negate_boolean false)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) (negate_boolean true)))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean (negate_boolean false))))) (negate_boolean false)))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean (negate_boolean true))))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (negate_boolean (negate_boolean (negate_boolean false)))) (negate_boolean (negate_boolean false))))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (fill_color (grid_to_block $0) yellow) true)) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) (touches_boundary (grid_to_block $0) south_east)) (is_symmetrical (fill_color (grid_to_block $0) yellow) true)) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean true)))", "(lambda (to_original_grid_overlay (grid_to_block $0) (negate_boolean false)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) true))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) false))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))) true))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))) false))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (negate_boolean true)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) south_east) true) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) south_east) true) false false))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))) (negate_boolean true)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))) (negate_boolean false)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (negate_boolean (negate_boolean true))))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (negate_boolean (negate_boolean false))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) false) (negate_boolean false) true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) false) (negate_boolean false) false))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda $0)) true true))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda $0)) true false))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda $0)) true true))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda $0)) true false))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (is_tile (grid_to_block $0))))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda $0)) false true))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda $0)) false false))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda $0)) false true))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) south_east) true))) true) (lambda $0)) false false))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))) (negate_boolean (negate_boolean true))))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))) (negate_boolean (negate_boolean false))))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (negate_boolean (negate_boolean (negate_boolean true)))))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (negate_boolean (negate_boolean (negate_boolean false)))))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) north) true) true) west) false) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) north) true) true) west) false) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) north) true) true) west) true) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) north) true) true) west) true) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) south_east) true) true) west) true) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) south_east) true) true) west) true) true false))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0)))))))))))))) (is_tile (grid_to_block $0))))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 0)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 1)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 2)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 3)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 4)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 5)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 6)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 7)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 8)))", "(lambda (to_min_grid (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (box_block (grid_to_block $0))))))))))))) (has_min_tiles (grid_to_block $0) 9)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) north) true) true) north) true) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (tile_to_block (get_block_center (grid_to_block $0))) north) true) true) north) true) false false))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda (grid_to_block $1))) true true))", "(lambda (blocks_to_original_grid (map_blocks (find_same_color_blocks $0 (is_tile (singleton_block (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true))) true) (lambda (grid_to_block $1))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (is_tile (grid_to_block $0))) south_east) false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (is_tile (grid_to_block $0))) south_east) false) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) (touches_any_boundary (grid_to_block $0))) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) (touches_any_boundary (grid_to_block $0))) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) false) (negate_boolean false) (negate_boolean true)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) true) west) false) (negate_boolean false) (negate_boolean false)))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (is_tile (grid_to_block $0))) west) true) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (is_tile (grid_to_block $0))) west) true) true false))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (is_tile (grid_to_block $0))) north) false) true true))", "(lambda (blocks_to_min_grid (find_blocks_by_inferred_b $0 (touches_boundary (merge_blocks (find_blocks_by_black_b $0 (touches_boundary (grid_to_block $0) west) true) (is_tile (grid_to_block $0))) north) false) true false))"]}], "programTimeout": 0.1}