{"tasks": [{"examples": [{"inputs": [{"grid": {"0,0": 6, "0,1": 6, "0,2": 6, "0,3": 2, "1,0": 6, "1,1": 1, "1,2": 6, "1,3": 2, "2,0": 7, "2,1": 2, "2,2": 7, "2,3": 2, "3,0": 1, "3,1": 7, "3,2": 2, "3,3": 2}}], "output": {"grid": {"0,0": 2, "0,1": 6, "0,2": 6, "0,3": 6, "1,0": 2, "1,1": 6, "1,2": 1, "1,3": 6, "2,0": 2, "2,1": 7, "2,2": 2, "2,3": 7, "3,0": 2, "3,1": 2, "3,2": 7, "3,3": 1}}}, {"inputs": [{"grid": {"0,0": 7, "0,1": 7, "0,2": 7, "0,3": 6, "0,4": 6, "0,5": 6, "0,6": 2, "1,0": 6, "1,1": 7, "1,2": 1, "1,3": 1, "1,4": 7, "1,5": 7, "1,6": 1, "2,0": 7, "2,1": 7, "2,2": 2, "2,3": 1, "2,4": 2, "2,5": 6, "2,6": 6, "3,0": 2, "3,1": 2, "3,2": 7, "3,3": 7, "3,4": 7, "3,5": 2, "3,6": 2, "4,0": 7, "4,1": 2, "4,2": 7, "4,3": 1, "4,4": 2, "4,5": 7, "4,6": 2, "5,0": 6, "5,1": 6, "5,2": 6, "5,3": 2, "5,4": 2, "5,5": 1, "5,6": 1, "6,0": 6, "6,1": 2, "6,2": 6, "6,3": 6, "6,4": 6, "6,5": 6, "6,6": 6}}], "output": {"grid": {"0,0": 2, "0,1": 6, "0,2": 6, "0,3": 6, "0,4": 7, "0,5": 7, "0,6": 7, "1,0": 1, "1,1": 7, "1,2": 7, "1,3": 1, "1,4": 1, "1,5": 7, "1,6": 6, "2,0": 6, "2,1": 6, "2,2": 2, "2,3": 1, "2,4": 2, "2,5": 7, "2,6": 7, "3,0": 2, "3,1": 2, "3,2": 7, "3,3": 7, "3,4": 7, "3,5": 2, "3,6": 2, "4,0": 2, "4,1": 7, "4,2": 2, "4,3": 1, "4,4": 7, "4,5": 2, "4,6": 7, "5,0": 1, "5,1": 1, "5,2": 2, "5,3": 2, "5,4": 6, "5,5": 6, "5,6": 6, "6,0": 6, "6,1": 6, "6,2": 6, "6,3": 6, "6,4": 6, "6,5": 2, "6,6": 6}}}, {"inputs": [{"grid": {"0,0": 1, "0,1": 2, "0,2": 7, "0,3": 1, "0,4": 1, "0,5": 1, "1,0": 2, "1,1": 1, "1,2": 7, "1,3": 7, "1,4": 2, "1,5": 6, "2,0": 2, "2,1": 1, "2,2": 2, "2,3": 6, "2,4": 2, "2,5": 1, "3,0": 1, "3,1": 2, "3,2": 1, "3,3": 7, "3,4": 6, "3,5": 2, "4,0": 2, "4,1": 7, "4,2": 1, "4,3": 2, "4,4": 7, "4,5": 1, "5,0": 2, "5,1": 1, "5,2": 6, "5,3": 2, "5,4": 7, "5,5": 7}}], "output": {"grid": {"0,0": 1, "0,1": 1, "0,2": 1, "0,3": 7, "0,4": 2, "0,5": 1, "1,0": 6, "1,1": 2, "1,2": 7, "1,3": 7, "1,4": 1, "1,5": 2, "2,0": 1, "2,1": 2, "2,2": 6, "2,3": 2, "2,4": 1, "2,5": 2, "3,0": 2, "3,1": 6, "3,2": 7, "3,3": 1, "3,4": 2, "3,5": 1, "4,0": 1, "4,1": 7, "4,2": 2, "4,3": 1, "4,4": 7, "4,5": 2, "5,0": 7, "5,1": 7, "5,2": 2, "5,3": 6, "5,4": 1, "5,5": 2}}}], "name": "67a3c6ac.json", "request": {"constructor": "->", "arguments": [{"constructor": "tgridin", "arguments": []}, {"constructor": "tgridout", "arguments": []}]}, "programs": ["(lambda (to_original_grid_overlay (grid_to_block $0) true))", "(lambda (to_original_grid_overlay (grid_to_block $0) false))", "(lambda (to_min_grid (grid_to_block $0) true))", "(lambda (to_min_grid (grid_to_block $0) false))", "(lambda (to_min_grid (box_block (grid_to_block $0)) true))", "(lambda (to_min_grid (box_block (grid_to_block $0)) false))", "(lambda (to_original_grid_overlay (box_block (grid_to_block $0)) true))", "(lambda (to_original_grid_overlay (box_block (grid_to_block $0)) false))", "(lambda (to_min_grid (remove_black_b (grid_to_block $0)) true))", "(lambda (to_min_grid (remove_black_b (grid_to_block $0)) false))", "(lambda (to_original_grid_overlay (remove_black_b (grid_to_block $0)) true))", "(lambda (to_original_grid_overlay (remove_black_b (grid_to_block $0)) false))", "(lambda (to_min_grid (remove_color (grid_to_block $0) teal) true))", "(lambda (to_min_grid (remove_color (grid_to_block $0) teal) false))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) true true))", "(lambda (blocks_to_original_grid (tiles_to_blocks (find_tiles_by_black_b $0)) true false))", "(lambda (to_min_grid (fill_color (grid_to_block $0) teal) true))", "(lambda (to_min_grid (fill_color (grid_to_block $0) teal) false))", "(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) teal) true))", "(lambda (to_original_grid_overlay (fill_color (grid_to_block $0) teal) false))", "(lambda (to_original_grid_overlay (reflect (remove_black_b (grid_to_block $0)) false) true))", "(lambda (to_original_grid_overlay (reflect (remove_black_b (grid_to_block $0)) false) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (grid_to_block $0) (lambda true)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (grid_to_block $0) (lambda true)) false))", "(lambda (blocks_to_original_grid (find_blocks_by_black_b $0 true true) true true))", "(lambda (blocks_to_original_grid (find_blocks_by_black_b $0 true true) true false))", "(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 false true)) true))", "(lambda (to_min_grid (singleton_block (find_blocks_by_black_b $0 false true)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 true true)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_black_b $0 true true)) false))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 true true) true) true))", "(lambda (to_min_grid (merge_blocks (find_blocks_by_black_b $0 true true) true) false))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) true) true))", "(lambda (to_original_grid_overlay (merge_blocks (find_blocks_by_black_b $0 true true) true) false))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true true) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true true) false false))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) false true))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) false false))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 teal false true) true true))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 teal false true) true false))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 teal false false) true true))", "(lambda (blocks_to_original_grid (find_blocks_by_color $0 teal false false) true false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal true false)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal true false)) false))", "(lambda (to_min_grid (singleton_block (find_blocks_by_color $0 teal true false)) true))", "(lambda (to_min_grid (singleton_block (find_blocks_by_color $0 teal true false)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal false false)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal false false)) false))", "(lambda (to_min_grid (singleton_block (find_blocks_by_color $0 teal false false)) true))", "(lambda (to_min_grid (singleton_block (find_blocks_by_color $0 teal false false)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal true true)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal true true)) false))", "(lambda (to_min_grid (singleton_block (find_blocks_by_color $0 teal true true)) true))", "(lambda (to_min_grid (singleton_block (find_blocks_by_color $0 teal true true)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal false true)) true))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal false true)) false))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal false false)) (negate_boolean true)))", "(lambda (to_original_grid_overlay (singleton_block (find_blocks_by_color $0 teal false false)) (negate_boolean false)))", "(lambda (to_min_grid (remove_color (reflect (remove_black_b (grid_to_block $0)) false) teal) true))", "(lambda (to_min_grid (remove_color (reflect (remove_black_b (grid_to_block $0)) false) teal) false))", "(lambda (to_min_grid (singleton_block (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true))) true))", "(lambda (to_min_grid (singleton_block (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true))) false))", "(lambda (blocks_to_original_grid (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true true))", "(lambda (blocks_to_original_grid (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true false))", "(lambda (blocks_to_original_grid (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) false true))", "(lambda (blocks_to_original_grid (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) false false))", "(lambda (to_min_grid (singleton_block (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1)))) true))", "(lambda (to_min_grid (singleton_block (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1)))) false))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) (has_color (grid_to_block $0) invisible) true))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) (has_color (grid_to_block $0) invisible) false))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) true))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) false))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) (has_color (grid_to_block $0) teal) true))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) (has_color (grid_to_block $0) teal) false))", "(lambda (blocks_to_min_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) false true))", "(lambda (blocks_to_min_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) false false))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_blocks_by_color $0 teal false true) (lambda 3) true) true))", "(lambda (to_original_grid_overlay (first_of_sorted_object_list (find_blocks_by_color $0 teal false true) (lambda 3) true) false))", "(lambda (blocks_to_original_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) true true))", "(lambda (blocks_to_original_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) true false))", "(lambda (blocks_to_original_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) false true))", "(lambda (blocks_to_original_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) false false))", "(lambda (blocks_to_original_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) (touches_any_boundary (grid_to_block $0)) true))", "(lambda (blocks_to_original_grid (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) (touches_any_boundary (grid_to_block $0)) false))", "(lambda (blocks_to_min_grid (filter_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) (lambda true)) false true))", "(lambda (blocks_to_min_grid (filter_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) (lambda true)) false false))", "(lambda (blocks_to_original_grid (filter_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) (lambda true)) true true))", "(lambda (blocks_to_original_grid (filter_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) (lambda true)) true false))", "(lambda (to_original_grid_overlay (move_towards_until (get_block_center (remove_color (reflect (remove_black_b (grid_to_block $0)) false) teal)) south_west (lambda true)) true))", "(lambda (to_original_grid_overlay (move_towards_until (get_block_center (remove_color (reflect (remove_black_b (grid_to_block $0)) false) teal)) south_west (lambda true)) false))", "(lambda (blocks_to_original_grid (filter_blocks (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) (lambda true)) true true))", "(lambda (blocks_to_original_grid (filter_blocks (map_blocks (find_blocks_by_black_b $0 true true) (lambda (grid_to_block $1))) (lambda true)) true false))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) north)))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) south)))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) west)))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) east)))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) north_east)))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) north_west)))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) south_east)))", "(lambda (to_original_grid_overlay (merge_blocks (filter_blocks (find_blocks_by_black_b $0 true true) (lambda true)) true) (touches_boundary (reflect (grid_to_block $0) false) south_west)))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) (has_color (reflect (reflect (reflect (grid_to_block $0) false) false) false) teal) true))", "(lambda (blocks_to_min_grid (find_blocks_by_color $0 teal true false) (has_color (reflect (reflect (reflect (grid_to_block $0) false) false) false) teal) false))", "(lambda (to_original_grid_overlay (reflect (remove_black_b (reflect (reflect (reflect (reflect (reflect (remove_black_b (grid_to_block $0)) false) false) false) false) false)) false) true))", "(lambda (to_original_grid_overlay (reflect (remove_black_b (reflect (reflect (reflect (reflect (reflect (remove_black_b (grid_to_block $0)) false) false) false) false) false)) false) false))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (reflect (reflect (reflect (merge_blocks (find_blocks_by_black_b $1 true true) true) false) false) false))) false true))", "(lambda (blocks_to_min_grid (map_tiles (find_tiles_by_black_b $0) (lambda (reflect (reflect (reflect (merge_blocks (find_blocks_by_black_b $1 true true) true) false) false) false))) false false))", "(lambda (to_min_grid (remove_color (reflect (remove_black_b (reflect (tile_to_block (get_block_center (reflect (extend_towards_until (block_to_tile (grid_to_block $0)) north (lambda true)) false))) false)) false) teal) true))", "(lambda (to_min_grid (remove_color (reflect (remove_black_b (reflect (tile_to_block (get_block_center (reflect (extend_towards_until (block_to_tile (grid_to_block $0)) north (lambda true)) false))) false)) false) teal) false))", "(lambda (to_original_grid_overlay (filter_block_tiles (reflect (reflect (reflect (reflect (reflect (singleton_block (find_blocks_by_black_b $0 true true)) false) false) false) false) false) (lambda true)) true))", "(lambda (to_original_grid_overlay (filter_block_tiles (reflect (reflect (reflect (reflect (reflect (singleton_block (find_blocks_by_black_b $0 true true)) false) false) false) false) false) (lambda true)) false))", "(lambda (to_original_grid_overlay (wrap_block (grid_to_block $0) pink (tile_touches_block (get_block_center (reflect (reflect (singleton_block (find_blocks_by_black_b $0 false true)) false) false)) (grid_to_block $0) north)) true))", "(lambda (to_original_grid_overlay (wrap_block (grid_to_block $0) pink (tile_touches_block (get_block_center (reflect (reflect (singleton_block (find_blocks_by_black_b $0 false true)) false) false)) (grid_to_block $0) north)) false))", "(lambda (to_min_grid (fill_color (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (remove_black_b (grid_to_block $0)) false) false) false) false) false) false) false) false) false) false) teal) true))", "(lambda (to_min_grid (fill_color (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (remove_black_b (grid_to_block $0)) false) false) false) false) false) false) false) false) false) false) teal) false))", "(lambda (to_original_grid_overlay (fill_color (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (map_block_tiles (grid_to_block $0) (lambda $0)) false) false) false) false) false) false) false) false) false) teal) true))", "(lambda (to_original_grid_overlay (fill_color (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (reflect (map_block_tiles (grid_to_block $0) (lambda $0)) false) false) false) false) false) false) false) false) false) teal) false))"]}], "programTimeout": 0.1}